{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../../app/search/search.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAGE,gBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAF9B,UAAK,GAAe,EAAE,CAAC;gBAEU,CAAC;gBAElC,uBAAM,GAAN,UAAO,IAAY;oBAAnB,iBA8BC;oBA7BC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5B,IAAI,OAAO,GAAG,oCAAoC,CAAC;wBAEnD,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC;4BACxB,cAAc,EAAE,kBAAkB;yBACnC,CAAC,CAAC;wBAEH,IAAI,MAAM,GAAG,IAAI,sBAAe,EAAE,CAAC;wBACnC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBAC5B,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;wBAC7B,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;wBACpC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;wBAC9B,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBAC7B,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;wBAE1B,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC;4BAC/B,OAAO,EAAE,OAAO;4BAChB,MAAM,EAAE,MAAM;yBACf,CAAC,CAAC;wBAEH,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,UAAA,QAAQ,IAAI,OAAW,QAAQ,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC;6BAC9E,SAAS,CAAC,UAAA,IAAI;4BACb,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;4BAChB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;4BACjC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gCACpB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;4BAClC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACP,CAAC;gBACH,CAAC;gBA9CH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,+OAOT;qBACF,CAAC;;0BAAA;gBAsCF,aAAC;YAAD,CAAC,AArCD,IAqCC;YArCD,2BAqCC,CAAA","sourcesContent":["import {Component} from '@angular/core'\nimport {Http, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {map} from 'rxjs/operator/map';\n\n@Component({\n  selector: 'search',\n  template: `\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search on Wikipedia\" #foo>\n      <button (click)=\"search(foo.value)\">Search</button>\n      <div *ngFor=\"let page of pages\">{{page}}</div>\n    </div>\n  `\n})\nexport class Search {\n  pages: Array<any> = [];\n\n  constructor(private http: Http) {}\n\n  search(text: string) {\n    if (text && text.length > 0) {\n      let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n\n      let headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n\n      let params = new URLSearchParams();\n      params.set('gapfrom', text);\n      params.set('gaplimit', '10');\n      params.set('generator', 'allpages');\n      params.set('action', 'query');\n      params.set('format', 'json');\n      params.set('origin', '*');\n\n      let options = new RequestOptions({\n        headers: headers,\n        search: params\n      });\n\n      map.call(this.http.get(wikiUrl, options), response => <string[]> response.json())\n        .subscribe(data => {\n          this.pages = [];\n          var raw = data['query']['pages'];\n          for (var key in raw) {\n            this.pages.push(raw[key].title);\n          }\n        });\n    }\n  }\n\n}\n"]}