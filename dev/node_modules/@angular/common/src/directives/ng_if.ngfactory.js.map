{"version":3,"file":"ng_if.ngfactory.js","sourceRoot":"","sources":["../../../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACF,oBAAoB;;;;;;;;;;;;;;;YAKrB;gBAOE,sBAAY,EAAM,EAAC,EAAM;oBACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;oBACvC,IAAI,CAAC,OAAO,GAAI,SAAiB,CAAC;oBAClC,IAAI,CAAC,OAAO,GAAI,SAAiB,CAAC;oBAClC,IAAI,CAAC,OAAO,GAAI,SAAiB,CAAC;gBACpC,CAAC;gBACD,iCAAU,GAAV,UAAW,IAAyB,EAAC,aAAkC,EAAC,EAAM;gBAC9E,CAAC;gBACD,kCAAW,GAAX;gBACA,CAAC;gBACD,iCAAU,GAAV,UAAW,IAAyB,EAAC,SAAa,EAAC,WAAmB;oBACpE,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,OAAO,EAAC,SAAS,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;wBAC9B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBACD,qCAAc,GAAd,UAAe,IAAyB,EAAC,SAAa,EAAC,WAAmB;oBACxE,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,OAAO,EAAC,SAAS,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,SAAS,CAAC;wBAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBACD,qCAAc,GAAd,UAAe,IAAyB,EAAC,SAAa,EAAC,WAAmB;oBACxE,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,OAAO,EAAC,SAAS,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,SAAS,CAAC;wBAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBAC3B,CAAC;gBACH,CAAC;gBACD,gCAAS,GAAT,UAAU,IAAyB,EAAC,EAAM;oBACxC,IAAI,OAAO,GAAO,IAAI,CAAC,QAAQ,CAAC;oBAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBACD,gCAAS,GAAT,UAAU,IAAyB,EAAC,aAAkC,EAAC,EAAM;gBAC7E,CAAC;gBACD,kCAAW,GAAX,UAAY,SAAgB,EAAC,MAAU;oBACrC,IAAI,MAAM,GAAW,IAAI,CAAC;oBAC1B,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;gBACD,gCAAS,GAAT,UAAU,IAAyB,EAAC,aAAiB;oBACnD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBACrC,CAAC;gBACH,mBAAC;YAAD,CAAC,AArDD,IAqDC;YArDD,uCAqDC,CAAA","sourcesContent":["/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/common/src/directives/ng_if';\nimport * as import1 from '@angular/core/src/linker/view';\nimport * as import2 from '@angular/core/src/linker/view_utils';\nexport class Wrapper_NgIf {\n  /*private*/ _eventHandler:Function;\n  context:import0.NgIf;\n  /*private*/ _changed:boolean;\n  /*private*/ _expr_0:any;\n  /*private*/ _expr_1:any;\n  /*private*/ _expr_2:any;\n  constructor(p0:any,p1:any) {\n    this._changed = false;\n    this.context = new import0.NgIf(p0,p1);\n    this._expr_0 = (undefined as any);\n    this._expr_1 = (undefined as any);\n    this._expr_2 = (undefined as any);\n  }\n  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  ngOnDestroy():void {\n  }\n  check_ngIf(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    if (import2.checkBinding(view,this._expr_0,currValue,forceUpdate)) {\n      this._changed = true;\n      this.context.ngIf = currValue;\n      this._expr_0 = currValue;\n    }\n  }\n  check_ngIfThen(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    if (import2.checkBinding(view,this._expr_1,currValue,forceUpdate)) {\n      this._changed = true;\n      this.context.ngIfThen = currValue;\n      this._expr_1 = currValue;\n    }\n  }\n  check_ngIfElse(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    if (import2.checkBinding(view,this._expr_2,currValue,forceUpdate)) {\n      this._changed = true;\n      this.context.ngIfElse = currValue;\n      this._expr_2 = currValue;\n    }\n  }\n  ngDoCheck(view:import1.AppView<any>,el:any):boolean {\n    var changed:any = this._changed;\n    this._changed = false;\n    return changed;\n  }\n  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  handleEvent(eventName:string,$event:any):boolean {\n    var result:boolean = true;\n    return result;\n  }\n  subscribe(view:import1.AppView<any>,_eventHandler:any):void {\n    this._eventHandler = _eventHandler;\n  }\n}"]}