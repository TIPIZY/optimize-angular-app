{"version":3,"file":"default_value_accessor.ngfactory.js","sourceRoot":"","sources":["../../../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACF,oBAAoB;;;;;;;;;;;;YAIrB;gBAIE,sCAAY,EAAM,EAAC,EAAM;oBACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,oBAAoB,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;gBACzD,CAAC;gBACD,iDAAU,GAAV,UAAW,IAAyB,EAAC,aAAkC,EAAC,EAAM;gBAC9E,CAAC;gBACD,kDAAW,GAAX;gBACA,CAAC;gBACD,gDAAS,GAAT,UAAU,IAAyB,EAAC,EAAM;oBACxC,IAAI,OAAO,GAAO,IAAI,CAAC,QAAQ,CAAC;oBAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBACD,gDAAS,GAAT,UAAU,IAAyB,EAAC,aAAkC,EAAC,EAAM;gBAC7E,CAAC;gBACD,kDAAW,GAAX,UAAY,SAAgB,EAAC,MAAU;oBACrC,IAAI,MAAM,GAAW,IAAI,CAAC;oBAC1B,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC3B,IAAM,QAAQ,GAAO,CAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC;wBACnF,MAAM,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC;oBAChC,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,IAAM,QAAQ,GAAO,CAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAG,KAAK,KAAK,CAAC,CAAC;wBACjE,MAAM,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC;oBAChC,CAAC;oBACD,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;gBACD,gDAAS,GAAT,UAAU,IAAyB,EAAC,aAAiB;oBACnD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBACrC,CAAC;gBACH,mCAAC;YAAD,CAAC,AAlCD,IAkCC;YAlCD,uEAkCC,CAAA","sourcesContent":["/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/forms/src/directives/default_value_accessor';\nimport * as import1 from '@angular/core/src/linker/view';\nexport class Wrapper_DefaultValueAccessor {\n  /*private*/ _eventHandler:Function;\n  context:import0.DefaultValueAccessor;\n  /*private*/ _changed:boolean;\n  constructor(p0:any,p1:any) {\n    this._changed = false;\n    this.context = new import0.DefaultValueAccessor(p0,p1);\n  }\n  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  ngOnDestroy():void {\n  }\n  ngDoCheck(view:import1.AppView<any>,el:any):boolean {\n    var changed:any = this._changed;\n    this._changed = false;\n    return changed;\n  }\n  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  handleEvent(eventName:string,$event:any):boolean {\n    var result:boolean = true;\n    if ((eventName == 'input')) {\n      const pd_sub_0:any = ((<any>this.context.onChange($event.target.value)) !== false);\n      result = (pd_sub_0 && result);\n    }\n    if ((eventName == 'blur')) {\n      const pd_sub_1:any = ((<any>this.context.onTouched()) !== false);\n      result = (pd_sub_1 && result);\n    }\n    return result;\n  }\n  subscribe(view:import1.AppView<any>,_eventHandler:any):void {\n    this._eventHandler = _eventHandler;\n  }\n}"]}