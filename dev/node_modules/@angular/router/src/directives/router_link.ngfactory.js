/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
System.register(['@angular/router/src/directives/router_link', '@angular/core/src/linker/view_utils', '@angular/core/src/security'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, import2, import3;
    var Wrapper_RouterLink, Wrapper_RouterLinkWithHref;
    return {
        setters:[
            function (import0_1) {
                import0 = import0_1;
            },
            function (import2_1) {
                import2 = import2_1;
            },
            function (import3_1) {
                import3 = import3_1;
            }],
        execute: function() {
            Wrapper_RouterLink = (function () {
                function Wrapper_RouterLink(p0, p1, p2, p3, p4) {
                    this._changed = false;
                    this.context = new import0.RouterLink(p0, p1, p2, p3, p4);
                    this._expr_0 = undefined;
                    this._expr_1 = undefined;
                    this._expr_2 = undefined;
                    this._expr_3 = undefined;
                    this._expr_4 = undefined;
                    this._expr_5 = undefined;
                    this._expr_6 = undefined;
                    this._expr_7 = undefined;
                }
                Wrapper_RouterLink.prototype.ngOnDetach = function (view, componentView, el) {
                };
                Wrapper_RouterLink.prototype.ngOnDestroy = function () {
                };
                Wrapper_RouterLink.prototype.check_queryParams = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_0, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.queryParams = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_fragment = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_1, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.fragment = currValue;
                        this._expr_1 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_queryParamsHandling = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_2, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.queryParamsHandling = currValue;
                        this._expr_2 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_preserveFragment = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_3, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.preserveFragment = currValue;
                        this._expr_3 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_skipLocationChange = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_4, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.skipLocationChange = currValue;
                        this._expr_4 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_replaceUrl = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_5, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.replaceUrl = currValue;
                        this._expr_5 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_routerLink = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_6, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.routerLink = currValue;
                        this._expr_6 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.check_preserveQueryParams = function (view, currValue, forceUpdate) {
                    if (import2.checkBinding(view, this._expr_7, currValue, forceUpdate)) {
                        this._changed = true;
                        this.context.preserveQueryParams = currValue;
                        this._expr_7 = currValue;
                    }
                };
                Wrapper_RouterLink.prototype.ngDoCheck = function (view, el) {
                    var changed = this._changed;
                    this._changed = false;
                    return changed;
                };
                Wrapper_RouterLink.prototype.checkHost = function (view, componentView, el) {
                };
                Wrapper_RouterLink.prototype.handleEvent = function (eventName, $event) {
                    var result = true;
                    if ((eventName == 'click')) {
                        var pd_sub_0 = (this.context.onClick() !== false);
                        result = (pd_sub_0 && result);
                    }
                    return result;
                };
                Wrapper_RouterLink.prototype.subscribe = function (view, _eventHandler) {
                    this._eventHandler = _eventHandler;
                };
                return Wrapper_RouterLink;
            }());
            exports_1("Wrapper_RouterLink", Wrapper_RouterLink);
            Wrapper_RouterLinkWithHref = (function () {
                function Wrapper_RouterLinkWithHref(p0, p1, p2) {
                    this._changed = false;
                    this._changes = {};
                    this.context = new import0.RouterLinkWithHref(p0, p1, p2);
                    this._expr_0 = undefined;
                    this._expr_1 = undefined;
                    this._expr_2 = undefined;
                    this._expr_3 = undefined;
                    this._expr_4 = undefined;
                    this._expr_5 = undefined;
                    this._expr_6 = undefined;
                    this._expr_7 = undefined;
                    this._expr_8 = undefined;
                    this._expr_9 = undefined;
                    this._expr_10 = undefined;
                }
                Wrapper_RouterLinkWithHref.prototype.ngOnDetach = function (view, componentView, el) {
                };
                Wrapper_RouterLinkWithHref.prototype.ngOnDestroy = function () {
                    this.context.ngOnDestroy();
                };
                Wrapper_RouterLinkWithHref.prototype.check_target = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_0, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.target = currValue;
                        this._expr_0 = currValue;
                        this._changes['target'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_queryParams = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_1, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.queryParams = currValue;
                        this._expr_1 = currValue;
                        this._changes['queryParams'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_fragment = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_2, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.fragment = currValue;
                        this._expr_2 = currValue;
                        this._changes['fragment'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_queryParamsHandling = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_3, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.queryParamsHandling = currValue;
                        this._expr_3 = currValue;
                        this._changes['queryParamsHandling'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_preserveFragment = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_4, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.preserveFragment = currValue;
                        this._expr_4 = currValue;
                        this._changes['preserveFragment'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_skipLocationChange = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_5, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.skipLocationChange = currValue;
                        this._expr_5 = currValue;
                        this._changes['skipLocationChange'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_replaceUrl = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_6, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.replaceUrl = currValue;
                        this._expr_6 = currValue;
                        this._changes['replaceUrl'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_routerLink = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_7, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.routerLink = currValue;
                        this._expr_7 = currValue;
                        this._changes['routerLink'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.check_preserveQueryParams = function (view, currValue, forceUpdate) {
                    var change = import2.checkBindingChange(view, this._expr_8, currValue, forceUpdate);
                    if (change) {
                        this._changed = true;
                        this.context.preserveQueryParams = currValue;
                        this._expr_8 = currValue;
                        this._changes['preserveQueryParams'] = change;
                    }
                };
                Wrapper_RouterLinkWithHref.prototype.ngDoCheck = function (view, el) {
                    var changed = this._changed;
                    this._changed = false;
                    if (!view.throwOnChange) {
                        if (changed) {
                            this.context.ngOnChanges(this._changes);
                            this._changes = {};
                        }
                    }
                    return changed;
                };
                Wrapper_RouterLinkWithHref.prototype.checkHost = function (view, componentView, el) {
                    var currVal_9 = this.context.target;
                    import2.checkRenderAttribute(view, el, 'target', this._expr_9, (this._expr_9 = currVal_9), false, null);
                    var currVal_10 = this.context.href;
                    import2.checkRenderProperty(view, el, 'href', this._expr_10, (this._expr_10 = currVal_10), false, import3.SecurityContext.URL);
                };
                Wrapper_RouterLinkWithHref.prototype.handleEvent = function (eventName, $event) {
                    var result = true;
                    if ((eventName == 'click')) {
                        var pd_sub_0 = (this.context.onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                        result = (pd_sub_0 && result);
                    }
                    return result;
                };
                Wrapper_RouterLinkWithHref.prototype.subscribe = function (view, _eventHandler) {
                    this._eventHandler = _eventHandler;
                };
                return Wrapper_RouterLinkWithHref;
            }());
            exports_1("Wrapper_RouterLinkWithHref", Wrapper_RouterLinkWithHref);
        }
    }
});
//# sourceMappingURL=router_link.ngfactory.js.map