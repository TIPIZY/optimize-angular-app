{"version":3,"sources":["webpack:///2.chunk.js","webpack:///./$_gendir/app/search/search.module.ngfactory.ts","webpack:///./~/@angular/http/@angular/http.es5.js","webpack:///./app/search/search.ts","webpack:///./$_gendir/app/search/search.ngfactory.ts","webpack:///./app/search/search.module.ts"],"names":["webpackJsonp","268","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__app_search_search_module__","__WEBPACK_IMPORTED_MODULE_2__angular_common__","__WEBPACK_IMPORTED_MODULE_3__angular_http__","__WEBPACK_IMPORTED_MODULE_4__angular_router__","__WEBPACK_IMPORTED_MODULE_5__search_ngfactory__","__WEBPACK_IMPORTED_MODULE_6__app_search_search__","d","SearchModuleNgFactory","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","constructor","prototype","create","SearchModuleInjector","_super","parent","call","get","__NgLocalization_5","enumerable","configurable","__BrowserXhr_6","__ResponseOptions_7","__XSRFStrategy_8","__XHRBackend_9","_BrowserXhr_6","_ResponseOptions_7","_XSRFStrategy_8","__RequestOptions_10","__Http_11","_XHRBackend_9","_RequestOptions_10","__ɵg_12","__JSONPBackend_13","_ɵg_12","__Jsonp_14","_JSONPBackend_13","__ROUTES_15","path","component","createInternal","_CommonModule_0","_HttpModule_1","_JsonpModule_2","_RouterModule_3","_SearchModule_4","getInternal","token","notFoundResult","_NgLocalization_5","_Http_11","_Jsonp_14","_ROUTES_15","destroyInternal","272","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","writable","_toConsumableArray","arr","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","strLen","charCodeAt","buffer","paramParser","rawParams","arguments","undefined","map","Map","split","forEach","param","eqIdx","indexOf","_ref2","slice","_ref3","_slicedToArray","key","val","list","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_typeof","_jsonpConnections","JSONP_HOME","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","url","newOptions","merge","RequestOptions","search","params","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","Http","jsonpFactory","jsonpBackend","Jsonp","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__","n","BrowserXhr","JSONPBackend","XHRBackend","BaseRequestOptions","BaseResponseOptions","ResponseOptions","Headers","HttpModule","JsonpModule","XSRFStrategy","URLSearchParams","BrowserJsonp","JSONPBackend_","Symbol","iterator","obj","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","err","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","XMLHttpRequest","decorators","type","ctorParameters","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","_this","_headers","_normalizedNames","values","name","append","keys","delete","getAll","lcName","toLowerCase","fn","_this2","has","join","mayBeSetNormalizedName","_this3","serialized","apply","headersString","line","index","trim","_ref","status","statusText","options","_ResponseOptions","getPrototypeOf","ConnectionBackend","req","isSuccess","QueryEncoder","k","queryEncoder","paramsMap","clone","appendAll","storedParam","searchParams","_this5","_this6","_this7","_this8","paramsList","encodeKey","encodeValue","Body","_body","parse","text","toString","String","fromCharCode","stringify","Response","_Body","responseOptions","_this9","ok","_nextRequestId","node","document","createElement","src","id","connection","appendChild","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","data","JSONPConnection_","_JSONPConnection","_dom","baseResponseOptions","_this10","_finished","responseObserver","readyState","_id","nextRequestID","exposeConnection","callback","requestCallback","lastIndexOf","substring","script","_script","build","onLoad","event","cleanup","_responseOptions","error","_responseData","complete","onError","message","addEventListener","send","removeEventListener","removeConnection","_ConnectionBackend","_JSONPBackend","_browserJSONP","_baseResponseOptions","_this12","XSSI_PREFIX","XHRConnection","browserXHR","_this13","_xhr","open","responseText","fromResponseHeaderString","setDetectedContentType","setRequestHeader","getBody","abort","contentType","blob","_cookieName","_headerName","xsrfToken","getCookie","_browserXHR","_xsrfStrategy","configureRequest","_ref4","_mergeSearchParams","_parseParams","_this14","objParams","item","_appendParam","_RequestOptions","Request","_Body2","_this16","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","arrayBuffer","noop","_backend","_defaultOptions","responseObservable","_options","_Http","defaultOptions","args","providers","provide","useFactory","deps","useClass","274","__WEBPACK_IMPORTED_MODULE_0__angular_http__","__WEBPACK_IMPORTED_MODULE_1_rxjs_operator_map__","Search","http","pages","wikiUrl","Content-Type","json","subscribe","raw","title","280","View_Search_1","check","context","$implicit","View_Search_0","eventName","$event","allowDefault","comp","ngForOf","View_Search_Host_0","RenderType_Search","__WEBPACK_IMPORTED_MODULE_1__app_search_search__","SearchNgFactory","styles_Search","encapsulation","styles","284","__WEBPACK_IMPORTED_MODULE_0__search__","SearchModule"],"mappings":"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","file":"2.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_search_search_module__ = __webpack_require__(284);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(272);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__search_ngfactory__ = __webpack_require__(280);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_search_search__ = __webpack_require__(274);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SearchModuleNgFactory\", function() { return SearchModuleNgFactory; });\n/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n/* tslint:disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\nvar SearchModuleInjector = (function (_super) {\n    __extends(SearchModuleInjector, _super);\n    function SearchModuleInjector(parent) {\n        return _super.call(this, parent, [__WEBPACK_IMPORTED_MODULE_5__search_ngfactory__[\"a\" /* SearchNgFactory */]], []) || this;\n    }\n    Object.defineProperty(SearchModuleInjector.prototype, \"_NgLocalization_5\", {\n        get: function () {\n            if ((this.__NgLocalization_5 == null)) {\n                (this.__NgLocalization_5 = new __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"a\" /* NgLocaleLocalization */](this.parent.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"c\" /* LOCALE_ID */])));\n            }\n            return this.__NgLocalization_5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_BrowserXhr_6\", {\n        get: function () {\n            if ((this.__BrowserXhr_6 == null)) {\n                (this.__BrowserXhr_6 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"a\" /* BrowserXhr */]());\n            }\n            return this.__BrowserXhr_6;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_ResponseOptions_7\", {\n        get: function () {\n            if ((this.__ResponseOptions_7 == null)) {\n                (this.__ResponseOptions_7 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"b\" /* BaseResponseOptions */]());\n            }\n            return this.__ResponseOptions_7;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_XSRFStrategy_8\", {\n        get: function () {\n            if ((this.__XSRFStrategy_8 == null)) {\n                (this.__XSRFStrategy_8 = __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"c\" /* ɵb */]());\n            }\n            return this.__XSRFStrategy_8;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_XHRBackend_9\", {\n        get: function () {\n            if ((this.__XHRBackend_9 == null)) {\n                (this.__XHRBackend_9 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"d\" /* XHRBackend */](this._BrowserXhr_6, this._ResponseOptions_7, this._XSRFStrategy_8));\n            }\n            return this.__XHRBackend_9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_RequestOptions_10\", {\n        get: function () {\n            if ((this.__RequestOptions_10 == null)) {\n                (this.__RequestOptions_10 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"e\" /* BaseRequestOptions */]());\n            }\n            return this.__RequestOptions_10;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_Http_11\", {\n        get: function () {\n            if ((this.__Http_11 == null)) {\n                (this.__Http_11 = __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"f\" /* ɵc */](this._XHRBackend_9, this._RequestOptions_10));\n            }\n            return this.__Http_11;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_\\u0275g_12\", {\n        get: function () {\n            if ((this.__ɵg_12 == null)) {\n                (this.__ɵg_12 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"g\" /* ɵg */]());\n            }\n            return this.__ɵg_12;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_JSONPBackend_13\", {\n        get: function () {\n            if ((this.__JSONPBackend_13 == null)) {\n                (this.__JSONPBackend_13 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"h\" /* ɵa */](this._ɵg_12, this._ResponseOptions_7));\n            }\n            return this.__JSONPBackend_13;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_Jsonp_14\", {\n        get: function () {\n            if ((this.__Jsonp_14 == null)) {\n                (this.__Jsonp_14 = __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"i\" /* ɵd */](this._JSONPBackend_13, this._RequestOptions_10));\n            }\n            return this.__Jsonp_14;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchModuleInjector.prototype, \"_ROUTES_15\", {\n        get: function () {\n            if ((this.__ROUTES_15 == null)) {\n                (this.__ROUTES_15 = [[{\n                            path: '',\n                            component: __WEBPACK_IMPORTED_MODULE_6__app_search_search__[\"a\" /* Search */]\n                        }\n                    ]]);\n            }\n            return this.__ROUTES_15;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchModuleInjector.prototype.createInternal = function () {\n        this._CommonModule_0 = new __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"e\" /* CommonModule */]();\n        this._HttpModule_1 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"j\" /* HttpModule */]();\n        this._JsonpModule_2 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"k\" /* JsonpModule */]();\n        this._RouterModule_3 = new __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"l\" /* RouterModule */](this.parent.get(__WEBPACK_IMPORTED_MODULE_4__angular_router__[\"p\" /* ɵa */], null));\n        this._SearchModule_4 = new __WEBPACK_IMPORTED_MODULE_1__app_search_search_module__[\"a\" /* SearchModule */]();\n        return this._SearchModule_4;\n    };\n    SearchModuleInjector.prototype.getInternal = function (token, notFoundResult) {\n        if ((token === __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"e\" /* CommonModule */])) {\n            return this._CommonModule_0;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"j\" /* HttpModule */])) {\n            return this._HttpModule_1;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"k\" /* JsonpModule */])) {\n            return this._JsonpModule_2;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"l\" /* RouterModule */])) {\n            return this._RouterModule_3;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_1__app_search_search_module__[\"a\" /* SearchModule */])) {\n            return this._SearchModule_4;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"f\" /* NgLocalization */])) {\n            return this._NgLocalization_5;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"a\" /* BrowserXhr */])) {\n            return this._BrowserXhr_6;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"l\" /* ResponseOptions */])) {\n            return this._ResponseOptions_7;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"m\" /* XSRFStrategy */])) {\n            return this._XSRFStrategy_8;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"d\" /* XHRBackend */])) {\n            return this._XHRBackend_9;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"n\" /* RequestOptions */])) {\n            return this._RequestOptions_10;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"o\" /* Http */])) {\n            return this._Http_11;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"g\" /* ɵg */])) {\n            return this._ɵg_12;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"p\" /* JSONPBackend */])) {\n            return this._JSONPBackend_13;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"q\" /* Jsonp */])) {\n            return this._Jsonp_14;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"s\" /* ROUTES */])) {\n            return this._ROUTES_15;\n        }\n        return notFoundResult;\n    };\n    SearchModuleInjector.prototype.destroyInternal = function () {\n    };\n    return SearchModuleInjector;\n}(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"A\" /* ɵNgModuleInjector */]));\nvar SearchModuleNgFactory = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"B\" /* NgModuleFactory */](SearchModuleInjector, __WEBPACK_IMPORTED_MODULE_1__app_search_search_module__[\"a\" /* SearchModule */]);\n//# sourceMappingURL=search.module.ngfactory.js.map\n\n/***/ }),\n\n/***/ 272:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__ = __webpack_require__(6);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BrowserXhr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return JSONPBackend; });\n/* unused harmony export JSONPConnection */\n/* unused harmony export CookieXSRFStrategy */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return XHRBackend; });\n/* unused harmony export XHRConnection */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return BaseRequestOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return RequestOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BaseResponseOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return ResponseOptions; });\n/* unused harmony export ReadyState */\n/* unused harmony export RequestMethod */\n/* unused harmony export ResponseContentType */\n/* unused harmony export ResponseType */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return Http; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return Jsonp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return HttpModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return JsonpModule; });\n/* unused harmony export Connection */\n/* unused harmony export ConnectionBackend */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return XSRFStrategy; });\n/* unused harmony export Request */\n/* unused harmony export Response */\n/* unused harmony export QueryEncoder */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return URLSearchParams; });\n/* unused harmony export VERSION */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return BrowserJsonp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return JSONPBackend_; });\n/* unused harmony export ɵe */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return _createDefaultCookieXSRFStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return httpFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return jsonpFactory; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Angular v4.0.0-rc.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\n\nvar BrowserXhr = function () {\n    function BrowserXhr() {\n        _classCallCheck(this, BrowserXhr);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(BrowserXhr, [{\n        key: 'build',\n        value: function build() {\n            return new XMLHttpRequest();\n        }\n    }]);\n\n    return BrowserXhr;\n}();\n\nBrowserXhr.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nBrowserXhr.ctorParameters = function () {\n    return [];\n};\n\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\n\nvar Headers = function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n\n        _classCallCheck(this, Headers);\n\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) {\n                    return _this.append(name, value);\n                });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) {\n                return _this.append(name, value);\n            });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n\n\n    _createClass(Headers, [{\n        key: 'append',\n\n        /**\n         * Appends a header to existing list of header values for a given header name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        value: function append(name, value) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                this.set(name, value);\n            } else {\n                values.push(value);\n            }\n        }\n        /**\n         * Deletes all header values for the given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            this._normalizedNames.delete(lcName);\n            this._headers.delete(lcName);\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n\n    }, {\n        key: 'forEach',\n        value: function forEach(fn) {\n            var _this2 = this;\n\n            this._headers.forEach(function (values, lcName) {\n                return fn(values, _this2._normalizedNames.get(lcName), _this2._headers);\n            });\n        }\n        /**\n         * Returns first header that matches given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(name) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                return null;\n            }\n            return values.length > 0 ? values[0] : null;\n        }\n        /**\n         * Checks for existence of header by given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(name) {\n            return this._headers.has(name.toLowerCase());\n        }\n        /**\n         * Returns the names of the headers\n         * @return {?}\n         */\n\n    }, {\n        key: 'keys',\n        value: function keys() {\n            return Array.from(this._normalizedNames.values());\n        }\n        /**\n         * Sets or overrides header value for given name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(name, value) {\n            if (Array.isArray(value)) {\n                if (value.length) {\n                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n                }\n            } else {\n                this._headers.set(name.toLowerCase(), [value]);\n            }\n            this.mayBeSetNormalizedName(name);\n        }\n        /**\n         * Returns values of all headers.\n         * @return {?}\n         */\n\n    }, {\n        key: 'values',\n        value: function values() {\n            return Array.from(this._headers.values());\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toJSON',\n        value: function toJSON() {\n            var _this3 = this;\n\n            var /** @type {?} */serialized = {};\n            this._headers.forEach(function (values, name) {\n                var /** @type {?} */split = [];\n                values.forEach(function (v) {\n                    return split.push.apply(split, _toConsumableArray(v.split(',')));\n                });\n                serialized[_this3._normalizedNames.get(name)] = split;\n            });\n            return serialized;\n        }\n        /**\n         * Returns list of header values for a given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(name) {\n            return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n        }\n        /**\n         * This method is not implemented.\n         * @return {?}\n         */\n\n    }, {\n        key: 'entries',\n        value: function entries() {\n            throw new Error('\"entries\" method is not implemented on Headers class');\n        }\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'mayBeSetNormalizedName',\n        value: function mayBeSetNormalizedName(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            if (!this._normalizedNames.has(lcName)) {\n                this._normalizedNames.set(lcName, name);\n            }\n        }\n    }], [{\n        key: 'fromResponseHeaderString',\n        value: function fromResponseHeaderString(headersString) {\n            var /** @type {?} */headers = new Headers();\n            headersString.split('\\n').forEach(function (line) {\n                var /** @type {?} */index = line.indexOf(':');\n                if (index > 0) {\n                    var /** @type {?} */name = line.slice(0, index);\n                    var /** @type {?} */value = line.slice(index + 1).trim();\n                    headers.set(name, value);\n                }\n            });\n            return headers;\n        }\n    }]);\n\n    return Headers;\n}();\n\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\n\n\nvar ResponseOptions = function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            body = _ref.body,\n            status = _ref.status,\n            headers = _ref.headers,\n            statusText = _ref.statusText,\n            type = _ref.type,\n            url = _ref.url;\n\n        _classCallCheck(this, ResponseOptions);\n\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(ResponseOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new ResponseOptions({\n                body: options && options.body != null ? options.body : this.body,\n                status: options && options.status != null ? options.status : this.status,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n                type: options && options.type != null ? options.type : this.type,\n                url: options && options.url != null ? options.url : this.url\n            });\n        }\n    }]);\n\n    return ResponseOptions;\n}();\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseResponseOptions = function (_ResponseOptions) {\n    _inherits(BaseResponseOptions, _ResponseOptions);\n\n    function BaseResponseOptions() {\n        _classCallCheck(this, BaseResponseOptions);\n\n        return _possibleConstructorReturn(this, (BaseResponseOptions.__proto__ || Object.getPrototypeOf(BaseResponseOptions)).call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }));\n    }\n\n    return BaseResponseOptions;\n}(ResponseOptions);\n\nBaseResponseOptions.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nBaseResponseOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\n\nvar ConnectionBackend = function () {\n    function ConnectionBackend() {\n        _classCallCheck(this, ConnectionBackend);\n    }\n\n    _createClass(ConnectionBackend, [{\n        key: 'createConnection',\n\n        /**\n         * @abstract\n         * @param {?} request\n         * @return {?}\n         */\n        value: function createConnection(request) {}\n    }]);\n\n    return ConnectionBackend;\n}();\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar Connection = function Connection() {\n    _classCallCheck(this, Connection);\n};\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar XSRFStrategy = function () {\n    function XSRFStrategy() {\n        _classCallCheck(this, XSRFStrategy);\n    }\n\n    _createClass(XSRFStrategy, [{\n        key: 'configureRequest',\n\n        /**\n         * @abstract\n         * @param {?} req\n         * @return {?}\n         */\n        value: function configureRequest(req) {}\n    }]);\n\n    return XSRFStrategy;\n}();\n\n/**\n * @param {?} method\n * @return {?}\n */\n\n\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string') return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error('Invalid request method. The method \"' + method + '\" is not supported.');\n}\nvar /** @type {?} */isSuccess = function isSuccess(status) {\n    return status >= 200 && status < 300;\n};\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */view = new Uint16Array(input.length);\n    for (var /** @type {?} */i = 0, /** @type {?} */strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser() {\n    var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var /** @type {?} */map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */eqIdx = param.indexOf('=');\n\n            var _ref2 = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)],\n                _ref3 = _slicedToArray(_ref2, 2),\n                key = _ref3[0],\n                val = _ref3[1];\n\n            var /** @type {?} */list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\n\nvar QueryEncoder = function () {\n    function QueryEncoder() {\n        _classCallCheck(this, QueryEncoder);\n    }\n\n    _createClass(QueryEncoder, [{\n        key: 'encodeKey',\n\n        /**\n         * @param {?} k\n         * @return {?}\n         */\n        value: function encodeKey(k) {\n            return standardEncoding(k);\n        }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n\n    }, {\n        key: 'encodeValue',\n        value: function encodeValue(v) {\n            return standardEncoding(v);\n        }\n    }]);\n\n    return QueryEncoder;\n}();\n/**\n * @param {?} v\n * @return {?}\n */\n\n\nfunction standardEncoding(v) {\n    return encodeURIComponent(v).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/gi, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%2B/gi, '+').replace(/%3D/gi, '=').replace(/%3F/gi, '?').replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\n\nvar URLSearchParams = function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams() {\n        var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var queryEncoder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new QueryEncoder();\n\n        _classCallCheck(this, URLSearchParams);\n\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(URLSearchParams, [{\n        key: 'clone',\n        value: function clone() {\n            var /** @type {?} */clone = new URLSearchParams('', this.queryEncoder);\n            clone.appendAll(this);\n            return clone;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(param) {\n            return this.paramsMap.has(param);\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(param) {\n            var /** @type {?} */storedParam = this.paramsMap.get(param);\n            return Array.isArray(storedParam) ? storedParam[0] : null;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(param) {\n            return this.paramsMap.get(param) || [];\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(param, val) {\n            if (val === void 0 || val === null) {\n                this.delete(param);\n                return;\n            }\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'setAll',\n        value: function setAll(searchParams) {\n            var _this5 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this5.paramsMap.get(param) || [];\n                list.length = 0;\n                list.push(value[0]);\n                _this5.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'append',\n        value: function append(param, val) {\n            if (val === void 0 || val === null) return;\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'appendAll',\n        value: function appendAll(searchParams) {\n            var _this6 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this6.paramsMap.get(param) || [];\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this6.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'replaceAll',\n        value: function replaceAll(searchParams) {\n            var _this7 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this7.paramsMap.get(param) || [];\n                list.length = 0;\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this7.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var _this8 = this;\n\n            var /** @type {?} */paramsList = [];\n            this.paramsMap.forEach(function (values, k) {\n                values.forEach(function (v) {\n                    return paramsList.push(_this8.queryEncoder.encodeKey(k) + '=' + _this8.queryEncoder.encodeValue(v));\n                });\n            });\n            return paramsList.join('&');\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(param) {\n            this.paramsMap.delete(param);\n        }\n    }]);\n\n    return URLSearchParams;\n}();\n\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\n\n\nvar Body = function () {\n    function Body() {\n        _classCallCheck(this, Body);\n    }\n\n    _createClass(Body, [{\n        key: 'json',\n\n        /**\n         * Attempts to return body as parsed `JSON` object, or raises an exception.\n         * @return {?}\n         */\n        value: function json() {\n            if (typeof this._body === 'string') {\n                return JSON.parse( /** @type {?} */this._body);\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return JSON.parse(this.text());\n            }\n            return this._body;\n        }\n        /**\n         * Returns the body as a string, presuming `toString()` can be called on the response body.\n         * @return {?}\n         */\n\n    }, {\n        key: 'text',\n        value: function text() {\n            if (this._body instanceof URLSearchParams) {\n                return this._body.toString();\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */this._body));\n            }\n            if (this._body == null) {\n                return '';\n            }\n            if (_typeof(this._body) === 'object') {\n                return JSON.stringify(this._body, null, 2);\n            }\n            return this._body.toString();\n        }\n        /**\n         * Return the body as an ArrayBuffer\n         * @return {?}\n         */\n\n    }, {\n        key: 'arrayBuffer',\n        value: function arrayBuffer() {\n            if (this._body instanceof ArrayBuffer) {\n                return this._body;\n            }\n            return stringToArrayBuffer(this.text());\n        }\n        /**\n         * Returns the request's body as a Blob, assuming that body exists.\n         * @return {?}\n         */\n\n    }, {\n        key: 'blob',\n        value: function blob() {\n            if (this._body instanceof Blob) {\n                return this._body;\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return new Blob([this._body]);\n            }\n            throw new Error('The request body isn\\'t either a blob or an array buffer');\n        }\n    }]);\n\n    return Body;\n}();\n\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\n\n\nvar Response = function (_Body) {\n    _inherits(Response, _Body);\n\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        _classCallCheck(this, Response);\n\n        var _this9 = _possibleConstructorReturn(this, (Response.__proto__ || Object.getPrototypeOf(Response)).call(this));\n\n        _this9._body = responseOptions.body;\n        _this9.status = responseOptions.status;\n        _this9.ok = _this9.status >= 200 && _this9.status <= 299;\n        _this9.statusText = responseOptions.statusText;\n        _this9.headers = responseOptions.headers;\n        _this9.type = responseOptions.type;\n        _this9.url = responseOptions.url;\n        return _this9;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(Response, [{\n        key: 'toString',\n        value: function toString() {\n            return 'Response with status: ' + this.status + ' ' + this.statusText + ' for URL: ' + this.url;\n        }\n    }]);\n\n    return Response;\n}(Body);\n\nvar /** @type {?} */_nextRequestId = 0;\nvar /** @type {?} */JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */_jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n\nvar BrowserJsonp = function () {\n    function BrowserJsonp() {\n        _classCallCheck(this, BrowserJsonp);\n    }\n\n    _createClass(BrowserJsonp, [{\n        key: 'build',\n\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        value: function build(url) {\n            var /** @type {?} */node = document.createElement('script');\n            node.src = url;\n            return node;\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'nextRequestID',\n        value: function nextRequestID() {\n            return '__req' + _nextRequestId++;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'requestCallback',\n        value: function requestCallback(id) {\n            return JSONP_HOME + '.' + id + '.finished';\n        }\n        /**\n         * @param {?} id\n         * @param {?} connection\n         * @return {?}\n         */\n\n    }, {\n        key: 'exposeConnection',\n        value: function exposeConnection(id, connection) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = connection;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'removeConnection',\n        value: function removeConnection(id) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = null;\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'send',\n        value: function send(node) {\n            document.body.appendChild( /** @type {?} */node);\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'cleanup',\n        value: function cleanup(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild( /** @type {?} */node);\n            }\n        }\n    }]);\n\n    return BrowserJsonp;\n}();\n\nBrowserJsonp.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nBrowserJsonp.ctorParameters = function () {\n    return [];\n};\n\nvar /** @type {?} */JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\n\nvar JSONPConnection = function () {\n    function JSONPConnection() {\n        _classCallCheck(this, JSONPConnection);\n    }\n\n    _createClass(JSONPConnection, [{\n        key: 'finished',\n\n        /**\n         * Callback called when the JSONP request completes, to notify the application\n         * of the new data.\n         * @abstract\n         * @param {?=} data\n         * @return {?}\n         */\n        value: function finished(data) {}\n    }]);\n\n    return JSONPConnection;\n}();\n\nvar JSONPConnection_ = function (_JSONPConnection) {\n    _inherits(JSONPConnection_, _JSONPConnection);\n\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        _classCallCheck(this, JSONPConnection_);\n\n        var _this10 = _possibleConstructorReturn(this, (JSONPConnection_.__proto__ || Object.getPrototypeOf(JSONPConnection_)).call(this));\n\n        _this10._dom = _dom;\n        _this10.baseResponseOptions = baseResponseOptions;\n        _this10._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this10.request = req;\n        _this10.response = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (responseObserver) {\n            _this10.readyState = ReadyState.Loading;\n            var id = _this10._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this10);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this10._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', '=' + callback + '&');\n            } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ('=' + callback);\n            }\n            var script = _this10._script = _dom.build(url);\n            var onLoad = function onLoad(event) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this10._finished) {\n                    var _responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        _responseOptions = baseResponseOptions.merge(_responseOptions);\n                    }\n                    responseObserver.error(new Response(_responseOptions));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this10._responseData, url: url });\n                if (_this10.baseResponseOptions) {\n                    responseOptions = _this10.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function onError(error) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this10.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this10._dom.cleanup(script);\n            };\n        });\n        return _this10;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n\n\n    _createClass(JSONPConnection_, [{\n        key: 'finished',\n        value: function finished(data) {\n            // Don't leak connections\n            this._finished = true;\n            this._dom.removeConnection(this._id);\n            if (this.readyState === ReadyState.Cancelled) return;\n            this._responseData = data;\n        }\n    }]);\n\n    return JSONPConnection_;\n}(JSONPConnection);\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar JSONPBackend = function (_ConnectionBackend) {\n    _inherits(JSONPBackend, _ConnectionBackend);\n\n    function JSONPBackend() {\n        _classCallCheck(this, JSONPBackend);\n\n        return _possibleConstructorReturn(this, (JSONPBackend.__proto__ || Object.getPrototypeOf(JSONPBackend)).apply(this, arguments));\n    }\n\n    return JSONPBackend;\n}(ConnectionBackend);\n\nvar JSONPBackend_ = function (_JSONPBackend) {\n    _inherits(JSONPBackend_, _JSONPBackend);\n\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        _classCallCheck(this, JSONPBackend_);\n\n        var _this12 = _possibleConstructorReturn(this, (JSONPBackend_.__proto__ || Object.getPrototypeOf(JSONPBackend_)).call(this));\n\n        _this12._browserJSONP = _browserJSONP;\n        _this12._baseResponseOptions = _baseResponseOptions;\n        return _this12;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(JSONPBackend_, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n        }\n    }]);\n\n    return JSONPBackend_;\n}(JSONPBackend);\n\nJSONPBackend_.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nJSONPBackend_.ctorParameters = function () {\n    return [{ type: BrowserJsonp }, { type: ResponseOptions }];\n};\n\nvar /** @type {?} */XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\n\nvar XHRConnection = function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this13 = this;\n\n        _classCallCheck(this, XHRConnection);\n\n        this.request = req;\n        this.response = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function onLoad() {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = typeof _xhr.response === 'undefined' ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function onError(err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this13.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) {\n                return _xhr.setRequestHeader(name, values.join(','));\n            });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this13.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n\n\n    _createClass(XHRConnection, [{\n        key: 'setDetectedContentType',\n        value: function setDetectedContentType(req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n            // Skip if a custom Content-Type header is provided\n            if (req.headers != null && req.headers.get('Content-Type') != null) {\n                return;\n            }\n            // Set the detected content type\n            switch (req.contentType) {\n                case ContentType.NONE:\n                    break;\n                case ContentType.JSON:\n                    _xhr.setRequestHeader('content-type', 'application/json');\n                    break;\n                case ContentType.FORM:\n                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                    break;\n                case ContentType.TEXT:\n                    _xhr.setRequestHeader('content-type', 'text/plain');\n                    break;\n                case ContentType.BLOB:\n                    var /** @type {?} */blob = req.blob();\n                    if (blob.type) {\n                        _xhr.setRequestHeader('content-type', blob.type);\n                    }\n                    break;\n            }\n        }\n    }]);\n\n    return XHRConnection;\n}();\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\n\n\nvar CookieXSRFStrategy = function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy() {\n        var _cookieName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'XSRF-TOKEN';\n\n        var _headerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'X-XSRF-TOKEN';\n\n        _classCallCheck(this, CookieXSRFStrategy);\n\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n\n\n    _createClass(CookieXSRFStrategy, [{\n        key: 'configureRequest',\n        value: function configureRequest(req) {\n            var /** @type {?} */xsrfToken = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__[\"w\" /* ɵgetDOM */])().getCookie(this._cookieName);\n            if (xsrfToken) {\n                req.headers.set(this._headerName, xsrfToken);\n            }\n        }\n    }]);\n\n    return CookieXSRFStrategy;\n}();\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\n\n\nvar XHRBackend = function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        _classCallCheck(this, XHRBackend);\n\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(XHRBackend, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            this._xsrfStrategy.configureRequest(request);\n            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n        }\n    }]);\n\n    return XHRBackend;\n}();\n\nXHRBackend.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nXHRBackend.ctorParameters = function () {\n    return [{ type: BrowserXhr }, { type: ResponseOptions }, { type: XSRFStrategy }];\n};\n\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\nvar RequestOptions = function () {\n    _createClass(RequestOptions, [{\n        key: 'search',\n\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function get() {\n            return this.params;\n        }\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        ,\n        set: function set(params) {\n            this.params = params;\n        }\n        /**\n         * @param {?=} __0\n         */\n\n    }]);\n\n    function RequestOptions() {\n        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            method = _ref4.method,\n            headers = _ref4.headers,\n            body = _ref4.body,\n            url = _ref4.url,\n            search = _ref4.search,\n            params = _ref4.params,\n            withCredentials = _ref4.withCredentials,\n            responseType = _ref4.responseType;\n\n        _classCallCheck(this, RequestOptions);\n\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(RequestOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new RequestOptions({\n                method: options && options.method != null ? options.method : this.method,\n                headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n                body: options && options.body != null ? options.body : this.body,\n                url: options && options.url != null ? options.url : this.url,\n                params: options && this._mergeSearchParams(options.params || options.search),\n                withCredentials: options && options.withCredentials != null ? options.withCredentials : this.withCredentials,\n                responseType: options && options.responseType != null ? options.responseType : this.responseType\n            });\n        }\n        /**\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_mergeSearchParams',\n        value: function _mergeSearchParams(params) {\n            if (!params) return this.params;\n            if (params instanceof URLSearchParams) {\n                return params.clone();\n            }\n            if (typeof params === 'string') {\n                return new URLSearchParams(params);\n            }\n            return this._parseParams(params);\n        }\n        /**\n         * @param {?=} objParams\n         * @return {?}\n         */\n\n    }, {\n        key: '_parseParams',\n        value: function _parseParams() {\n            var _this14 = this;\n\n            var objParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var /** @type {?} */params = new URLSearchParams();\n            Object.keys(objParams).forEach(function (key) {\n                var /** @type {?} */value = objParams[key];\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        return _this14._appendParam(key, item, params);\n                    });\n                } else {\n                    _this14._appendParam(key, value, params);\n                }\n            });\n            return params;\n        }\n        /**\n         * @param {?} key\n         * @param {?} value\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_appendParam',\n        value: function _appendParam(key, value, params) {\n            if (typeof value !== 'string') {\n                value = JSON.stringify(value);\n            }\n            params.append(key, value);\n        }\n    }]);\n\n    return RequestOptions;\n}();\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new BaseRequestOptions();\n * var req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseRequestOptions = function (_RequestOptions) {\n    _inherits(BaseRequestOptions, _RequestOptions);\n\n    function BaseRequestOptions() {\n        _classCallCheck(this, BaseRequestOptions);\n\n        return _possibleConstructorReturn(this, (BaseRequestOptions.__proto__ || Object.getPrototypeOf(BaseRequestOptions)).call(this, { method: RequestMethod.Get, headers: new Headers() }));\n    }\n\n    return BaseRequestOptions;\n}(RequestOptions);\n\nBaseRequestOptions.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nBaseRequestOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\n\nvar Request = function (_Body2) {\n    _inherits(Request, _Body2);\n\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        _classCallCheck(this, Request);\n\n        // TODO: assert that url is present\n        var _this16 = _possibleConstructorReturn(this, (Request.__proto__ || Object.getPrototypeOf(Request)).call(this));\n\n        var url = requestOptions.url;\n        _this16.url = requestOptions.url;\n        if (requestOptions.params) {\n            var params = requestOptions.params.toString();\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this16.url.indexOf('?') != -1) {\n                    prefix = _this16.url[_this16.url.length - 1] == '&' ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this16.url = url + prefix + params;\n            }\n        }\n        _this16._body = requestOptions.body;\n        _this16.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this16.headers = new Headers(requestOptions.headers);\n        _this16.contentType = _this16.detectContentType();\n        _this16.withCredentials = requestOptions.withCredentials;\n        _this16.responseType = requestOptions.responseType;\n        return _this16;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n\n\n    _createClass(Request, [{\n        key: 'detectContentType',\n        value: function detectContentType() {\n            switch (this.headers.get('content-type')) {\n                case 'application/json':\n                    return ContentType.JSON;\n                case 'application/x-www-form-urlencoded':\n                    return ContentType.FORM;\n                case 'multipart/form-data':\n                    return ContentType.FORM_DATA;\n                case 'text/plain':\n                case 'text/html':\n                    return ContentType.TEXT;\n                case 'application/octet-stream':\n                    return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n                default:\n                    return this.detectContentTypeFromBody();\n            }\n        }\n        /**\n         * Returns the content type of request's body based on its type.\n         * @return {?}\n         */\n\n    }, {\n        key: 'detectContentTypeFromBody',\n        value: function detectContentTypeFromBody() {\n            if (this._body == null) {\n                return ContentType.NONE;\n            } else if (this._body instanceof URLSearchParams) {\n                return ContentType.FORM;\n            } else if (this._body instanceof FormData) {\n                return ContentType.FORM_DATA;\n            } else if (this._body instanceof Blob$1) {\n                return ContentType.BLOB;\n            } else if (this._body instanceof ArrayBuffer$1) {\n                return ContentType.ARRAY_BUFFER;\n            } else if (this._body && _typeof(this._body) === 'object') {\n                return ContentType.JSON;\n            } else {\n                return ContentType.TEXT;\n            }\n        }\n        /**\n         * Returns the request's body according to its type. If body is undefined, return\n         * null.\n         * @return {?}\n         */\n\n    }, {\n        key: 'getBody',\n        value: function getBody() {\n            switch (this.contentType) {\n                case ContentType.JSON:\n                    return this.text();\n                case ContentType.FORM:\n                    return this.text();\n                case ContentType.FORM_DATA:\n                    return this._body;\n                case ContentType.TEXT:\n                    return this.text();\n                case ContentType.BLOB:\n                    return this.blob();\n                case ContentType.ARRAY_BUFFER:\n                    return this.arrayBuffer();\n                default:\n                    return null;\n            }\n        }\n    }]);\n\n    return Request;\n}(Body);\n\nvar /** @type {?} */noop = function noop() {};\nvar /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : noop;\nvar /** @type {?} */FormData = w[/** TODO #9100 */'FormData'] || noop;\nvar /** @type {?} */Blob$1 = w[/** TODO #9100 */'Blob'] || noop;\nvar /** @type {?} */ArrayBuffer$1 = w[/** TODO #9100 */'ArrayBuffer'] || noop;\n\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\n\nvar Http = function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        _classCallCheck(this, Http);\n\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Http, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url)));\n            } else if (url instanceof Request) {\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n        /**\n         * Performs a request with `get` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        /**\n         * Performs a request with `post` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'post',\n        value: function post(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n        }\n        /**\n         * Performs a request with `put` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'put',\n        value: function put(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n        }\n        /**\n         * Performs a request with `delete` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n        }\n        /**\n         * Performs a request with `patch` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'patch',\n        value: function patch(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n        }\n        /**\n         * Performs a request with `head` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'head',\n        value: function head(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n        }\n        /**\n         * Performs a request with `options` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'options',\n        value: function options(url, _options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, _options, RequestMethod.Options, url)));\n        }\n    }]);\n\n    return Http;\n}();\n\nHttp.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nHttp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n/**\n * \\@experimental\n */\n\nvar Jsonp = function (_Http) {\n    _inherits(Jsonp, _Http);\n\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        _classCallCheck(this, Jsonp);\n\n        return _possibleConstructorReturn(this, (Jsonp.__proto__ || Object.getPrototypeOf(Jsonp)).call(this, backend, defaultOptions));\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Jsonp, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                url = new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url));\n            }\n            if (url instanceof Request) {\n                if (url.method !== RequestMethod.Get) {\n                    throw new Error('JSONP requests must use GET request method.');\n                }\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n    }]);\n\n    return Jsonp;\n}(Http);\n\nJsonp.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* Injectable */] }];\n/** @nocollapse */\nJsonp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\n\nvar HttpModule = function HttpModule() {\n    _classCallCheck(this, HttpModule);\n};\n\nHttpModule.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* NgModule */], args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] }, BrowserXhr, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, XHRBackend, { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy }]\n    }] }];\n/** @nocollapse */\nHttpModule.ctorParameters = function () {\n    return [];\n};\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\n\nvar JsonpModule = function JsonpModule() {\n    _classCallCheck(this, JsonpModule);\n};\n\nJsonpModule.decorators = [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* NgModule */], args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] }, BrowserJsonp, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, { provide: JSONPBackend, useClass: JSONPBackend_ }]\n    }] }];\n/** @nocollapse */\nJsonpModule.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @stable\n */\nvar /** @type {?} */VERSION = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"E\" /* Version */]('4.0.0-rc.2');\n\n\n\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(272);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_operator_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_operator_map__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Search; });\n\n\nvar Search = (function () {\n    function Search(http) {\n        this.http = http;\n        this.pages = [];\n    }\n    Search.prototype.search = function (text) {\n        var _this = this;\n        if (text && text.length > 0) {\n            var wikiUrl = 'https://en.wikipedia.org/w/api.php';\n            var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__[\"r\" /* Headers */]({\n                'Content-Type': 'application/json'\n            });\n            var params = new __WEBPACK_IMPORTED_MODULE_0__angular_http__[\"s\" /* URLSearchParams */]();\n            params.set('gapfrom', text);\n            params.set('gaplimit', '10');\n            params.set('generator', 'allpages');\n            params.set('action', 'query');\n            params.set('format', 'json');\n            params.set('origin', '*');\n            var options = new __WEBPACK_IMPORTED_MODULE_0__angular_http__[\"n\" /* RequestOptions */]({\n                headers: headers,\n                search: params\n            });\n            __WEBPACK_IMPORTED_MODULE_1_rxjs_operator_map__[\"map\"].call(this.http.get(wikiUrl, options), function (response) { return response.json(); })\n                .subscribe(function (data) {\n                _this.pages = [];\n                var raw = data['query']['pages'];\n                for (var key in raw) {\n                    _this.pages.push(raw[key].title);\n                }\n            });\n        }\n    };\n    Search.ctorParameters = function () { return [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_http__[\"o\" /* Http */] }]; };\n    return Search;\n}());\n\n//# sourceMappingURL=search.js.map\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_search_search__ = __webpack_require__(274);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(272);\n/* unused harmony export RenderType_Search */\n/* unused harmony export View_Search_0 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SearchNgFactory; });\n/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n/* tslint:disable */\n\n\n\n\nvar styles_Search = [];\nvar RenderType_Search = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_7\" /* ɵcrt */]({\n    encapsulation: 2,\n    styles: styles_Search,\n    data: {}\n});\nfunction View_Search_1() {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_8\" /* ɵvid */](0, [\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, null, null, 1, 'div', [], null, null, null, null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, [\n            '',\n            ''\n        ])\n    ], null, function (check, view) {\n        var comp = view.component;\n        var currVal_0 = view.context.$implicit;\n        check(view, 1, 0, currVal_0);\n    });\n}\nfunction View_Search_0() {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_8\" /* ɵvid */](0, [\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n    ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, null, null, 12, 'div', [], null, null, null, null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n      ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, null, null, 1, 'h2', [], null, null, null, null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['Search']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n      ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, [[\n                'foo',\n                1\n            ]\n        ], null, 0, 'input', [\n            [\n                'placeholder',\n                'Search on Wikipedia'\n            ],\n            [\n                'type',\n                'text'\n            ]\n        ], null, null, null, null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n      ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, null, null, 1, 'button', [], null, [[\n                null,\n                'click'\n            ]\n        ], function (view, eventName, $event) {\n            var allowDefault = true;\n            var comp = view.component;\n            if (('click' === eventName)) {\n                var pd_0 = (comp.search(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_11\" /* ɵnov */](view, 6).value) !== false);\n                allowDefault = (pd_0 && allowDefault);\n            }\n            return allowDefault;\n        }, null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['Search']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n      ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_12\" /* ɵand */](8388608, null, null, 1, null, View_Search_1),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ɵdid */](401408, null, 0, __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"i\" /* NgForOf */], [\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Y\" /* ViewContainerRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Z\" /* TemplateRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"u\" /* IterableDiffers */]\n        ], { ngForOf: [\n                0,\n                'ngForOf'\n            ]\n        }, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n    ']),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵted */](null, ['\\n  '])\n    ], function (check, view) {\n        var comp = view.component;\n        var currVal_0 = comp.pages;\n        check(view, 12, 0, currVal_0);\n    }, null);\n}\nvar RenderType_Search_Host = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_7\" /* ɵcrt */]({\n    encapsulation: 2,\n    styles: [],\n    data: {}\n});\nfunction View_Search_Host_0() {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_8\" /* ɵvid */](0, [\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_9\" /* ɵeld */](0, null, null, 1, 'search', [], null, null, null, View_Search_0, RenderType_Search),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ɵdid */](24576, null, 0, __WEBPACK_IMPORTED_MODULE_1__app_search_search__[\"a\" /* Search */], [__WEBPACK_IMPORTED_MODULE_3__angular_http__[\"o\" /* Http */]], null, null)\n    ], null, null);\n}\nvar SearchNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵccf */]('search', __WEBPACK_IMPORTED_MODULE_1__app_search_search__[\"a\" /* Search */], View_Search_Host_0);\n//# sourceMappingURL=search.ngfactory.js.map\n\n/***/ }),\n\n/***/ 284:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__search__ = __webpack_require__(274);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SearchModule; });\n\nvar routes = [\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_0__search__[\"a\" /* Search */] },\n];\nvar SearchModule = (function () {\n    function SearchModule() {\n    }\n    return SearchModule;\n}());\n\n//# sourceMappingURL=search.module.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.chunk.js","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../app/search/search.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nimport * as import4 from '@angular/router';\nimport * as import5 from './search.ngfactory';\nimport * as import6 from '../../../app/search/search';\nclass SearchModuleInjector extends import0.ɵNgModuleInjector<import1.SearchModule> {\n  _CommonModule_0:import2.CommonModule;\n  _HttpModule_1:import3.HttpModule;\n  _JsonpModule_2:import3.JsonpModule;\n  _RouterModule_3:import4.RouterModule;\n  _SearchModule_4:import1.SearchModule;\n  __NgLocalization_5:import2.NgLocaleLocalization;\n  __BrowserXhr_6:import3.BrowserXhr;\n  __ResponseOptions_7:import3.BaseResponseOptions;\n  __XSRFStrategy_8:any;\n  __XHRBackend_9:import3.XHRBackend;\n  __RequestOptions_10:import3.BaseRequestOptions;\n  __Http_11:any;\n  __ɵg_12:import3.ɵg;\n  __JSONPBackend_13:import3.ɵa;\n  __Jsonp_14:any;\n  __ROUTES_15:any[];\n  constructor(parent:import0.Injector) {\n    super(parent,[import5.SearchNgFactory],([] as any[]));\n  }\n  get _NgLocalization_5():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_5;\n  }\n  get _BrowserXhr_6():import3.BrowserXhr {\n    if ((this.__BrowserXhr_6 == null)) { (this.__BrowserXhr_6 = new import3.BrowserXhr()); }\n    return this.__BrowserXhr_6;\n  }\n  get _ResponseOptions_7():import3.BaseResponseOptions {\n    if ((this.__ResponseOptions_7 == null)) { (this.__ResponseOptions_7 = new import3.BaseResponseOptions()); }\n    return this.__ResponseOptions_7;\n  }\n  get _XSRFStrategy_8():any {\n    if ((this.__XSRFStrategy_8 == null)) { (this.__XSRFStrategy_8 = import3.ɵb()); }\n    return this.__XSRFStrategy_8;\n  }\n  get _XHRBackend_9():import3.XHRBackend {\n    if ((this.__XHRBackend_9 == null)) { (this.__XHRBackend_9 = new import3.XHRBackend(this._BrowserXhr_6,this._ResponseOptions_7,this._XSRFStrategy_8)); }\n    return this.__XHRBackend_9;\n  }\n  get _RequestOptions_10():import3.BaseRequestOptions {\n    if ((this.__RequestOptions_10 == null)) { (this.__RequestOptions_10 = new import3.BaseRequestOptions()); }\n    return this.__RequestOptions_10;\n  }\n  get _Http_11():any {\n    if ((this.__Http_11 == null)) { (this.__Http_11 = import3.ɵc(this._XHRBackend_9,this._RequestOptions_10)); }\n    return this.__Http_11;\n  }\n  get _ɵg_12():import3.ɵg {\n    if ((this.__ɵg_12 == null)) { (this.__ɵg_12 = new import3.ɵg()); }\n    return this.__ɵg_12;\n  }\n  get _JSONPBackend_13():import3.ɵa {\n    if ((this.__JSONPBackend_13 == null)) { (this.__JSONPBackend_13 = new import3.ɵa(this._ɵg_12,this._ResponseOptions_7)); }\n    return this.__JSONPBackend_13;\n  }\n  get _Jsonp_14():any {\n    if ((this.__Jsonp_14 == null)) { (this.__Jsonp_14 = import3.ɵd(this._JSONPBackend_13,this._RequestOptions_10)); }\n    return this.__Jsonp_14;\n  }\n  get _ROUTES_15():any[] {\n        if ((this.__ROUTES_15 == null)) { (this.__ROUTES_15 = [[{\n          path: '',\n          component: import6.Search\n        }\n    ]]); }\n    return this.__ROUTES_15;\n  }\n  createInternal():import1.SearchModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._HttpModule_1 = new import3.HttpModule();\n    this._JsonpModule_2 = new import3.JsonpModule();\n    this._RouterModule_3 = new import4.RouterModule(this.parent.get(import4.ɵa,(null as any)));\n    this._SearchModule_4 = new import1.SearchModule();\n    return this._SearchModule_4;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.HttpModule)) { return this._HttpModule_1; }\n    if ((token === import3.JsonpModule)) { return this._JsonpModule_2; }\n    if ((token === import4.RouterModule)) { return this._RouterModule_3; }\n    if ((token === import1.SearchModule)) { return this._SearchModule_4; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_5; }\n    if ((token === import3.BrowserXhr)) { return this._BrowserXhr_6; }\n    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_7; }\n    if ((token === import3.XSRFStrategy)) { return this._XSRFStrategy_8; }\n    if ((token === import3.XHRBackend)) { return this._XHRBackend_9; }\n    if ((token === import3.RequestOptions)) { return this._RequestOptions_10; }\n    if ((token === import3.Http)) { return this._Http_11; }\n    if ((token === import3.ɵg)) { return this._ɵg_12; }\n    if ((token === import3.JSONPBackend)) { return this._JSONPBackend_13; }\n    if ((token === import3.Jsonp)) { return this._Jsonp_14; }\n    if ((token === import4.ROUTES)) { return this._ROUTES_15; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const SearchModuleNgFactory:import0.NgModuleFactory<import1.SearchModule> = new import0.NgModuleFactory<any>(SearchModuleInjector,import1.SearchModule);\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/app/search/search.module.ngfactory.ts","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Angular v4.0.0-rc.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\n\nvar BrowserXhr = function () {\n    function BrowserXhr() {\n        _classCallCheck(this, BrowserXhr);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(BrowserXhr, [{\n        key: 'build',\n        value: function build() {\n            return new XMLHttpRequest();\n        }\n    }]);\n\n    return BrowserXhr;\n}();\n\nBrowserXhr.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBrowserXhr.ctorParameters = function () {\n    return [];\n};\n\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\n\nvar Headers = function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n\n        _classCallCheck(this, Headers);\n\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) {\n                    return _this.append(name, value);\n                });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) {\n                return _this.append(name, value);\n            });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n\n\n    _createClass(Headers, [{\n        key: 'append',\n\n        /**\n         * Appends a header to existing list of header values for a given header name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        value: function append(name, value) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                this.set(name, value);\n            } else {\n                values.push(value);\n            }\n        }\n        /**\n         * Deletes all header values for the given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            this._normalizedNames.delete(lcName);\n            this._headers.delete(lcName);\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n\n    }, {\n        key: 'forEach',\n        value: function forEach(fn) {\n            var _this2 = this;\n\n            this._headers.forEach(function (values, lcName) {\n                return fn(values, _this2._normalizedNames.get(lcName), _this2._headers);\n            });\n        }\n        /**\n         * Returns first header that matches given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(name) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                return null;\n            }\n            return values.length > 0 ? values[0] : null;\n        }\n        /**\n         * Checks for existence of header by given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(name) {\n            return this._headers.has(name.toLowerCase());\n        }\n        /**\n         * Returns the names of the headers\n         * @return {?}\n         */\n\n    }, {\n        key: 'keys',\n        value: function keys() {\n            return Array.from(this._normalizedNames.values());\n        }\n        /**\n         * Sets or overrides header value for given name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(name, value) {\n            if (Array.isArray(value)) {\n                if (value.length) {\n                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n                }\n            } else {\n                this._headers.set(name.toLowerCase(), [value]);\n            }\n            this.mayBeSetNormalizedName(name);\n        }\n        /**\n         * Returns values of all headers.\n         * @return {?}\n         */\n\n    }, {\n        key: 'values',\n        value: function values() {\n            return Array.from(this._headers.values());\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toJSON',\n        value: function toJSON() {\n            var _this3 = this;\n\n            var /** @type {?} */serialized = {};\n            this._headers.forEach(function (values, name) {\n                var /** @type {?} */split = [];\n                values.forEach(function (v) {\n                    return split.push.apply(split, _toConsumableArray(v.split(',')));\n                });\n                serialized[_this3._normalizedNames.get(name)] = split;\n            });\n            return serialized;\n        }\n        /**\n         * Returns list of header values for a given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(name) {\n            return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n        }\n        /**\n         * This method is not implemented.\n         * @return {?}\n         */\n\n    }, {\n        key: 'entries',\n        value: function entries() {\n            throw new Error('\"entries\" method is not implemented on Headers class');\n        }\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'mayBeSetNormalizedName',\n        value: function mayBeSetNormalizedName(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            if (!this._normalizedNames.has(lcName)) {\n                this._normalizedNames.set(lcName, name);\n            }\n        }\n    }], [{\n        key: 'fromResponseHeaderString',\n        value: function fromResponseHeaderString(headersString) {\n            var /** @type {?} */headers = new Headers();\n            headersString.split('\\n').forEach(function (line) {\n                var /** @type {?} */index = line.indexOf(':');\n                if (index > 0) {\n                    var /** @type {?} */name = line.slice(0, index);\n                    var /** @type {?} */value = line.slice(index + 1).trim();\n                    headers.set(name, value);\n                }\n            });\n            return headers;\n        }\n    }]);\n\n    return Headers;\n}();\n\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\n\n\nvar ResponseOptions = function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            body = _ref.body,\n            status = _ref.status,\n            headers = _ref.headers,\n            statusText = _ref.statusText,\n            type = _ref.type,\n            url = _ref.url;\n\n        _classCallCheck(this, ResponseOptions);\n\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(ResponseOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new ResponseOptions({\n                body: options && options.body != null ? options.body : this.body,\n                status: options && options.status != null ? options.status : this.status,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n                type: options && options.type != null ? options.type : this.type,\n                url: options && options.url != null ? options.url : this.url\n            });\n        }\n    }]);\n\n    return ResponseOptions;\n}();\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseResponseOptions = function (_ResponseOptions) {\n    _inherits(BaseResponseOptions, _ResponseOptions);\n\n    function BaseResponseOptions() {\n        _classCallCheck(this, BaseResponseOptions);\n\n        return _possibleConstructorReturn(this, (BaseResponseOptions.__proto__ || Object.getPrototypeOf(BaseResponseOptions)).call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }));\n    }\n\n    return BaseResponseOptions;\n}(ResponseOptions);\n\nBaseResponseOptions.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBaseResponseOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\n\nvar ConnectionBackend = function () {\n    function ConnectionBackend() {\n        _classCallCheck(this, ConnectionBackend);\n    }\n\n    _createClass(ConnectionBackend, [{\n        key: 'createConnection',\n\n        /**\n         * @abstract\n         * @param {?} request\n         * @return {?}\n         */\n        value: function createConnection(request) {}\n    }]);\n\n    return ConnectionBackend;\n}();\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar Connection = function Connection() {\n    _classCallCheck(this, Connection);\n};\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar XSRFStrategy = function () {\n    function XSRFStrategy() {\n        _classCallCheck(this, XSRFStrategy);\n    }\n\n    _createClass(XSRFStrategy, [{\n        key: 'configureRequest',\n\n        /**\n         * @abstract\n         * @param {?} req\n         * @return {?}\n         */\n        value: function configureRequest(req) {}\n    }]);\n\n    return XSRFStrategy;\n}();\n\n/**\n * @param {?} method\n * @return {?}\n */\n\n\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string') return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error('Invalid request method. The method \"' + method + '\" is not supported.');\n}\nvar /** @type {?} */isSuccess = function isSuccess(status) {\n    return status >= 200 && status < 300;\n};\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */view = new Uint16Array(input.length);\n    for (var /** @type {?} */i = 0, /** @type {?} */strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser() {\n    var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var /** @type {?} */map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */eqIdx = param.indexOf('=');\n\n            var _ref2 = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)],\n                _ref3 = _slicedToArray(_ref2, 2),\n                key = _ref3[0],\n                val = _ref3[1];\n\n            var /** @type {?} */list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\n\nvar QueryEncoder = function () {\n    function QueryEncoder() {\n        _classCallCheck(this, QueryEncoder);\n    }\n\n    _createClass(QueryEncoder, [{\n        key: 'encodeKey',\n\n        /**\n         * @param {?} k\n         * @return {?}\n         */\n        value: function encodeKey(k) {\n            return standardEncoding(k);\n        }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n\n    }, {\n        key: 'encodeValue',\n        value: function encodeValue(v) {\n            return standardEncoding(v);\n        }\n    }]);\n\n    return QueryEncoder;\n}();\n/**\n * @param {?} v\n * @return {?}\n */\n\n\nfunction standardEncoding(v) {\n    return encodeURIComponent(v).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/gi, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%2B/gi, '+').replace(/%3D/gi, '=').replace(/%3F/gi, '?').replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\n\nvar URLSearchParams = function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams() {\n        var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var queryEncoder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new QueryEncoder();\n\n        _classCallCheck(this, URLSearchParams);\n\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(URLSearchParams, [{\n        key: 'clone',\n        value: function clone() {\n            var /** @type {?} */clone = new URLSearchParams('', this.queryEncoder);\n            clone.appendAll(this);\n            return clone;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(param) {\n            return this.paramsMap.has(param);\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(param) {\n            var /** @type {?} */storedParam = this.paramsMap.get(param);\n            return Array.isArray(storedParam) ? storedParam[0] : null;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(param) {\n            return this.paramsMap.get(param) || [];\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(param, val) {\n            if (val === void 0 || val === null) {\n                this.delete(param);\n                return;\n            }\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'setAll',\n        value: function setAll(searchParams) {\n            var _this5 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this5.paramsMap.get(param) || [];\n                list.length = 0;\n                list.push(value[0]);\n                _this5.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'append',\n        value: function append(param, val) {\n            if (val === void 0 || val === null) return;\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'appendAll',\n        value: function appendAll(searchParams) {\n            var _this6 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this6.paramsMap.get(param) || [];\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this6.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'replaceAll',\n        value: function replaceAll(searchParams) {\n            var _this7 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this7.paramsMap.get(param) || [];\n                list.length = 0;\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this7.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var _this8 = this;\n\n            var /** @type {?} */paramsList = [];\n            this.paramsMap.forEach(function (values, k) {\n                values.forEach(function (v) {\n                    return paramsList.push(_this8.queryEncoder.encodeKey(k) + '=' + _this8.queryEncoder.encodeValue(v));\n                });\n            });\n            return paramsList.join('&');\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(param) {\n            this.paramsMap.delete(param);\n        }\n    }]);\n\n    return URLSearchParams;\n}();\n\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\n\n\nvar Body = function () {\n    function Body() {\n        _classCallCheck(this, Body);\n    }\n\n    _createClass(Body, [{\n        key: 'json',\n\n        /**\n         * Attempts to return body as parsed `JSON` object, or raises an exception.\n         * @return {?}\n         */\n        value: function json() {\n            if (typeof this._body === 'string') {\n                return JSON.parse( /** @type {?} */this._body);\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return JSON.parse(this.text());\n            }\n            return this._body;\n        }\n        /**\n         * Returns the body as a string, presuming `toString()` can be called on the response body.\n         * @return {?}\n         */\n\n    }, {\n        key: 'text',\n        value: function text() {\n            if (this._body instanceof URLSearchParams) {\n                return this._body.toString();\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */this._body));\n            }\n            if (this._body == null) {\n                return '';\n            }\n            if (_typeof(this._body) === 'object') {\n                return JSON.stringify(this._body, null, 2);\n            }\n            return this._body.toString();\n        }\n        /**\n         * Return the body as an ArrayBuffer\n         * @return {?}\n         */\n\n    }, {\n        key: 'arrayBuffer',\n        value: function arrayBuffer() {\n            if (this._body instanceof ArrayBuffer) {\n                return this._body;\n            }\n            return stringToArrayBuffer(this.text());\n        }\n        /**\n         * Returns the request's body as a Blob, assuming that body exists.\n         * @return {?}\n         */\n\n    }, {\n        key: 'blob',\n        value: function blob() {\n            if (this._body instanceof Blob) {\n                return this._body;\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return new Blob([this._body]);\n            }\n            throw new Error('The request body isn\\'t either a blob or an array buffer');\n        }\n    }]);\n\n    return Body;\n}();\n\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\n\n\nvar Response = function (_Body) {\n    _inherits(Response, _Body);\n\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        _classCallCheck(this, Response);\n\n        var _this9 = _possibleConstructorReturn(this, (Response.__proto__ || Object.getPrototypeOf(Response)).call(this));\n\n        _this9._body = responseOptions.body;\n        _this9.status = responseOptions.status;\n        _this9.ok = _this9.status >= 200 && _this9.status <= 299;\n        _this9.statusText = responseOptions.statusText;\n        _this9.headers = responseOptions.headers;\n        _this9.type = responseOptions.type;\n        _this9.url = responseOptions.url;\n        return _this9;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(Response, [{\n        key: 'toString',\n        value: function toString() {\n            return 'Response with status: ' + this.status + ' ' + this.statusText + ' for URL: ' + this.url;\n        }\n    }]);\n\n    return Response;\n}(Body);\n\nvar /** @type {?} */_nextRequestId = 0;\nvar /** @type {?} */JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */_jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n\nvar BrowserJsonp = function () {\n    function BrowserJsonp() {\n        _classCallCheck(this, BrowserJsonp);\n    }\n\n    _createClass(BrowserJsonp, [{\n        key: 'build',\n\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        value: function build(url) {\n            var /** @type {?} */node = document.createElement('script');\n            node.src = url;\n            return node;\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'nextRequestID',\n        value: function nextRequestID() {\n            return '__req' + _nextRequestId++;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'requestCallback',\n        value: function requestCallback(id) {\n            return JSONP_HOME + '.' + id + '.finished';\n        }\n        /**\n         * @param {?} id\n         * @param {?} connection\n         * @return {?}\n         */\n\n    }, {\n        key: 'exposeConnection',\n        value: function exposeConnection(id, connection) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = connection;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'removeConnection',\n        value: function removeConnection(id) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = null;\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'send',\n        value: function send(node) {\n            document.body.appendChild( /** @type {?} */node);\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'cleanup',\n        value: function cleanup(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild( /** @type {?} */node);\n            }\n        }\n    }]);\n\n    return BrowserJsonp;\n}();\n\nBrowserJsonp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBrowserJsonp.ctorParameters = function () {\n    return [];\n};\n\nvar /** @type {?} */JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\n\nvar JSONPConnection = function () {\n    function JSONPConnection() {\n        _classCallCheck(this, JSONPConnection);\n    }\n\n    _createClass(JSONPConnection, [{\n        key: 'finished',\n\n        /**\n         * Callback called when the JSONP request completes, to notify the application\n         * of the new data.\n         * @abstract\n         * @param {?=} data\n         * @return {?}\n         */\n        value: function finished(data) {}\n    }]);\n\n    return JSONPConnection;\n}();\n\nvar JSONPConnection_ = function (_JSONPConnection) {\n    _inherits(JSONPConnection_, _JSONPConnection);\n\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        _classCallCheck(this, JSONPConnection_);\n\n        var _this10 = _possibleConstructorReturn(this, (JSONPConnection_.__proto__ || Object.getPrototypeOf(JSONPConnection_)).call(this));\n\n        _this10._dom = _dom;\n        _this10.baseResponseOptions = baseResponseOptions;\n        _this10._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this10.request = req;\n        _this10.response = new Observable(function (responseObserver) {\n            _this10.readyState = ReadyState.Loading;\n            var id = _this10._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this10);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this10._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', '=' + callback + '&');\n            } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ('=' + callback);\n            }\n            var script = _this10._script = _dom.build(url);\n            var onLoad = function onLoad(event) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this10._finished) {\n                    var _responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        _responseOptions = baseResponseOptions.merge(_responseOptions);\n                    }\n                    responseObserver.error(new Response(_responseOptions));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this10._responseData, url: url });\n                if (_this10.baseResponseOptions) {\n                    responseOptions = _this10.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function onError(error) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this10.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this10._dom.cleanup(script);\n            };\n        });\n        return _this10;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n\n\n    _createClass(JSONPConnection_, [{\n        key: 'finished',\n        value: function finished(data) {\n            // Don't leak connections\n            this._finished = true;\n            this._dom.removeConnection(this._id);\n            if (this.readyState === ReadyState.Cancelled) return;\n            this._responseData = data;\n        }\n    }]);\n\n    return JSONPConnection_;\n}(JSONPConnection);\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar JSONPBackend = function (_ConnectionBackend) {\n    _inherits(JSONPBackend, _ConnectionBackend);\n\n    function JSONPBackend() {\n        _classCallCheck(this, JSONPBackend);\n\n        return _possibleConstructorReturn(this, (JSONPBackend.__proto__ || Object.getPrototypeOf(JSONPBackend)).apply(this, arguments));\n    }\n\n    return JSONPBackend;\n}(ConnectionBackend);\n\nvar JSONPBackend_ = function (_JSONPBackend) {\n    _inherits(JSONPBackend_, _JSONPBackend);\n\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        _classCallCheck(this, JSONPBackend_);\n\n        var _this12 = _possibleConstructorReturn(this, (JSONPBackend_.__proto__ || Object.getPrototypeOf(JSONPBackend_)).call(this));\n\n        _this12._browserJSONP = _browserJSONP;\n        _this12._baseResponseOptions = _baseResponseOptions;\n        return _this12;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(JSONPBackend_, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n        }\n    }]);\n\n    return JSONPBackend_;\n}(JSONPBackend);\n\nJSONPBackend_.decorators = [{ type: Injectable }];\n/** @nocollapse */\nJSONPBackend_.ctorParameters = function () {\n    return [{ type: BrowserJsonp }, { type: ResponseOptions }];\n};\n\nvar /** @type {?} */XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\n\nvar XHRConnection = function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this13 = this;\n\n        _classCallCheck(this, XHRConnection);\n\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function onLoad() {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = typeof _xhr.response === 'undefined' ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function onError(err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this13.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) {\n                return _xhr.setRequestHeader(name, values.join(','));\n            });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this13.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n\n\n    _createClass(XHRConnection, [{\n        key: 'setDetectedContentType',\n        value: function setDetectedContentType(req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n            // Skip if a custom Content-Type header is provided\n            if (req.headers != null && req.headers.get('Content-Type') != null) {\n                return;\n            }\n            // Set the detected content type\n            switch (req.contentType) {\n                case ContentType.NONE:\n                    break;\n                case ContentType.JSON:\n                    _xhr.setRequestHeader('content-type', 'application/json');\n                    break;\n                case ContentType.FORM:\n                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                    break;\n                case ContentType.TEXT:\n                    _xhr.setRequestHeader('content-type', 'text/plain');\n                    break;\n                case ContentType.BLOB:\n                    var /** @type {?} */blob = req.blob();\n                    if (blob.type) {\n                        _xhr.setRequestHeader('content-type', blob.type);\n                    }\n                    break;\n            }\n        }\n    }]);\n\n    return XHRConnection;\n}();\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\n\n\nvar CookieXSRFStrategy = function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy() {\n        var _cookieName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'XSRF-TOKEN';\n\n        var _headerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'X-XSRF-TOKEN';\n\n        _classCallCheck(this, CookieXSRFStrategy);\n\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n\n\n    _createClass(CookieXSRFStrategy, [{\n        key: 'configureRequest',\n        value: function configureRequest(req) {\n            var /** @type {?} */xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n            if (xsrfToken) {\n                req.headers.set(this._headerName, xsrfToken);\n            }\n        }\n    }]);\n\n    return CookieXSRFStrategy;\n}();\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\n\n\nvar XHRBackend = function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        _classCallCheck(this, XHRBackend);\n\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(XHRBackend, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            this._xsrfStrategy.configureRequest(request);\n            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n        }\n    }]);\n\n    return XHRBackend;\n}();\n\nXHRBackend.decorators = [{ type: Injectable }];\n/** @nocollapse */\nXHRBackend.ctorParameters = function () {\n    return [{ type: BrowserXhr }, { type: ResponseOptions }, { type: XSRFStrategy }];\n};\n\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\nvar RequestOptions = function () {\n    _createClass(RequestOptions, [{\n        key: 'search',\n\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function get() {\n            return this.params;\n        }\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        ,\n        set: function set(params) {\n            this.params = params;\n        }\n        /**\n         * @param {?=} __0\n         */\n\n    }]);\n\n    function RequestOptions() {\n        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            method = _ref4.method,\n            headers = _ref4.headers,\n            body = _ref4.body,\n            url = _ref4.url,\n            search = _ref4.search,\n            params = _ref4.params,\n            withCredentials = _ref4.withCredentials,\n            responseType = _ref4.responseType;\n\n        _classCallCheck(this, RequestOptions);\n\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(RequestOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new RequestOptions({\n                method: options && options.method != null ? options.method : this.method,\n                headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n                body: options && options.body != null ? options.body : this.body,\n                url: options && options.url != null ? options.url : this.url,\n                params: options && this._mergeSearchParams(options.params || options.search),\n                withCredentials: options && options.withCredentials != null ? options.withCredentials : this.withCredentials,\n                responseType: options && options.responseType != null ? options.responseType : this.responseType\n            });\n        }\n        /**\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_mergeSearchParams',\n        value: function _mergeSearchParams(params) {\n            if (!params) return this.params;\n            if (params instanceof URLSearchParams) {\n                return params.clone();\n            }\n            if (typeof params === 'string') {\n                return new URLSearchParams(params);\n            }\n            return this._parseParams(params);\n        }\n        /**\n         * @param {?=} objParams\n         * @return {?}\n         */\n\n    }, {\n        key: '_parseParams',\n        value: function _parseParams() {\n            var _this14 = this;\n\n            var objParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var /** @type {?} */params = new URLSearchParams();\n            Object.keys(objParams).forEach(function (key) {\n                var /** @type {?} */value = objParams[key];\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        return _this14._appendParam(key, item, params);\n                    });\n                } else {\n                    _this14._appendParam(key, value, params);\n                }\n            });\n            return params;\n        }\n        /**\n         * @param {?} key\n         * @param {?} value\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_appendParam',\n        value: function _appendParam(key, value, params) {\n            if (typeof value !== 'string') {\n                value = JSON.stringify(value);\n            }\n            params.append(key, value);\n        }\n    }]);\n\n    return RequestOptions;\n}();\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new BaseRequestOptions();\n * var req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseRequestOptions = function (_RequestOptions) {\n    _inherits(BaseRequestOptions, _RequestOptions);\n\n    function BaseRequestOptions() {\n        _classCallCheck(this, BaseRequestOptions);\n\n        return _possibleConstructorReturn(this, (BaseRequestOptions.__proto__ || Object.getPrototypeOf(BaseRequestOptions)).call(this, { method: RequestMethod.Get, headers: new Headers() }));\n    }\n\n    return BaseRequestOptions;\n}(RequestOptions);\n\nBaseRequestOptions.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBaseRequestOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\n\nvar Request = function (_Body2) {\n    _inherits(Request, _Body2);\n\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        _classCallCheck(this, Request);\n\n        // TODO: assert that url is present\n        var _this16 = _possibleConstructorReturn(this, (Request.__proto__ || Object.getPrototypeOf(Request)).call(this));\n\n        var url = requestOptions.url;\n        _this16.url = requestOptions.url;\n        if (requestOptions.params) {\n            var params = requestOptions.params.toString();\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this16.url.indexOf('?') != -1) {\n                    prefix = _this16.url[_this16.url.length - 1] == '&' ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this16.url = url + prefix + params;\n            }\n        }\n        _this16._body = requestOptions.body;\n        _this16.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this16.headers = new Headers(requestOptions.headers);\n        _this16.contentType = _this16.detectContentType();\n        _this16.withCredentials = requestOptions.withCredentials;\n        _this16.responseType = requestOptions.responseType;\n        return _this16;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n\n\n    _createClass(Request, [{\n        key: 'detectContentType',\n        value: function detectContentType() {\n            switch (this.headers.get('content-type')) {\n                case 'application/json':\n                    return ContentType.JSON;\n                case 'application/x-www-form-urlencoded':\n                    return ContentType.FORM;\n                case 'multipart/form-data':\n                    return ContentType.FORM_DATA;\n                case 'text/plain':\n                case 'text/html':\n                    return ContentType.TEXT;\n                case 'application/octet-stream':\n                    return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n                default:\n                    return this.detectContentTypeFromBody();\n            }\n        }\n        /**\n         * Returns the content type of request's body based on its type.\n         * @return {?}\n         */\n\n    }, {\n        key: 'detectContentTypeFromBody',\n        value: function detectContentTypeFromBody() {\n            if (this._body == null) {\n                return ContentType.NONE;\n            } else if (this._body instanceof URLSearchParams) {\n                return ContentType.FORM;\n            } else if (this._body instanceof FormData) {\n                return ContentType.FORM_DATA;\n            } else if (this._body instanceof Blob$1) {\n                return ContentType.BLOB;\n            } else if (this._body instanceof ArrayBuffer$1) {\n                return ContentType.ARRAY_BUFFER;\n            } else if (this._body && _typeof(this._body) === 'object') {\n                return ContentType.JSON;\n            } else {\n                return ContentType.TEXT;\n            }\n        }\n        /**\n         * Returns the request's body according to its type. If body is undefined, return\n         * null.\n         * @return {?}\n         */\n\n    }, {\n        key: 'getBody',\n        value: function getBody() {\n            switch (this.contentType) {\n                case ContentType.JSON:\n                    return this.text();\n                case ContentType.FORM:\n                    return this.text();\n                case ContentType.FORM_DATA:\n                    return this._body;\n                case ContentType.TEXT:\n                    return this.text();\n                case ContentType.BLOB:\n                    return this.blob();\n                case ContentType.ARRAY_BUFFER:\n                    return this.arrayBuffer();\n                default:\n                    return null;\n            }\n        }\n    }]);\n\n    return Request;\n}(Body);\n\nvar /** @type {?} */noop = function noop() {};\nvar /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : noop;\nvar /** @type {?} */FormData = w[/** TODO #9100 */'FormData'] || noop;\nvar /** @type {?} */Blob$1 = w[/** TODO #9100 */'Blob'] || noop;\nvar /** @type {?} */ArrayBuffer$1 = w[/** TODO #9100 */'ArrayBuffer'] || noop;\n\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\n\nvar Http = function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        _classCallCheck(this, Http);\n\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Http, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url)));\n            } else if (url instanceof Request) {\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n        /**\n         * Performs a request with `get` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        /**\n         * Performs a request with `post` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'post',\n        value: function post(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n        }\n        /**\n         * Performs a request with `put` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'put',\n        value: function put(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n        }\n        /**\n         * Performs a request with `delete` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n        }\n        /**\n         * Performs a request with `patch` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'patch',\n        value: function patch(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n        }\n        /**\n         * Performs a request with `head` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'head',\n        value: function head(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n        }\n        /**\n         * Performs a request with `options` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'options',\n        value: function options(url, _options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, _options, RequestMethod.Options, url)));\n        }\n    }]);\n\n    return Http;\n}();\n\nHttp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nHttp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n/**\n * \\@experimental\n */\n\nvar Jsonp = function (_Http) {\n    _inherits(Jsonp, _Http);\n\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        _classCallCheck(this, Jsonp);\n\n        return _possibleConstructorReturn(this, (Jsonp.__proto__ || Object.getPrototypeOf(Jsonp)).call(this, backend, defaultOptions));\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Jsonp, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                url = new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url));\n            }\n            if (url instanceof Request) {\n                if (url.method !== RequestMethod.Get) {\n                    throw new Error('JSONP requests must use GET request method.');\n                }\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n    }]);\n\n    return Jsonp;\n}(Http);\n\nJsonp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nJsonp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\n\nvar HttpModule = function HttpModule() {\n    _classCallCheck(this, HttpModule);\n};\n\nHttpModule.decorators = [{ type: NgModule, args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] }, BrowserXhr, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, XHRBackend, { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy }]\n    }] }];\n/** @nocollapse */\nHttpModule.ctorParameters = function () {\n    return [];\n};\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\n\nvar JsonpModule = function JsonpModule() {\n    _classCallCheck(this, JsonpModule);\n};\n\nJsonpModule.decorators = [{ type: NgModule, args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] }, BrowserJsonp, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, { provide: JSONPBackend, useClass: JSONPBackend_ }]\n    }] }];\n/** @nocollapse */\nJsonpModule.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @stable\n */\nvar /** @type {?} */VERSION = new Version('4.0.0-rc.2');\n\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵe, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/http/@angular/http.es5.js\n// module id = 272\n// module chunks = 2","import {Component} from '@angular/core'\nimport {Http, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {map} from 'rxjs/operator/map';\n\n@Component({\n  selector: 'search',\n  template: `\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search on Wikipedia\" #foo>\n      <button (click)=\"search(foo.value)\">Search</button>\n      <div *ngFor=\"let page of pages\">{{page}}</div>\n    </div>\n  `\n})\nexport class Search {\n  pages: Array<any> = [];\n\n  constructor(private http: Http) {}\n\n  search(text: string) {\n    if (text && text.length > 0) {\n      let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n\n      let headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n\n      let params = new URLSearchParams();\n      params.set('gapfrom', text);\n      params.set('gaplimit', '10');\n      params.set('generator', 'allpages');\n      params.set('action', 'query');\n      params.set('format', 'json');\n      params.set('origin', '*');\n\n      let options = new RequestOptions({\n        headers: headers,\n        search: params\n      });\n\n      map.call(this.http.get(wikiUrl, options), response => <string[]> response.json())\n        .subscribe(data => {\n          this.pages = [];\n          var raw = data['query']['pages'];\n          for (var key in raw) {\n            this.pages.push(raw[key].title);\n          }\n        });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/search/search.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../app/search/search';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nconst styles_Search:any[] = ([] as any[]);\nexport const RenderType_Search:import0.RendererTypeV2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_Search,\n  data: {}\n}\n);\nfunction View_Search_1():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    )\n  ]\n  ,(null as any),(check,view) => {\n    var comp:any = view.component;\n    const currVal_0:any = view.context.$implicit;\n    check(view,1,0,currVal_0);\n  });\n}\nexport function View_Search_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵeld(0,(null as any),(null as any),12,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵeld(0,(null as any),(null as any),1,'h2',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,[[\n        'foo',\n        1\n      ]\n    ],(null as any),0,'input',[\n      [\n        'placeholder',\n        'Search on Wikipedia'\n      ]\n      ,\n      [\n        'type',\n        'text'\n      ]\n\n    ]\n    ,(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,(null as any),(null as any),1,'button',([] as any[]),(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(view,eventName,$event) => {\n      var allowDefault:boolean = true;\n      var comp:import1.Search = view.component;\n      if (('click' === eventName)) {\n        const pd_0:any = ((<any>comp.search(import0.ɵnov(view,6).value)) !== false);\n        allowDefault = (pd_0 && allowDefault);\n      }\n      return allowDefault;\n    },(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_Search_1),\n    import0.ɵdid(401408,(null as any),0,import2.NgForOf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef,\n      import0.IterableDiffers\n    ]\n      ,{ngForOf: [\n        0,\n        'ngForOf'\n      ]\n    },(null as any)),\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵted((null as any),['\\n  '])\n  ]\n  ,(check,view) => {\n    var comp:import1.Search = view.component;\n    const currVal_0:any = comp.pages;\n    check(view,12,0,currVal_0);\n  },(null as any));\n}\nconst RenderType_Search_Host:import0.RendererTypeV2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: ([] as any[]),\n  data: {}\n}\n);\nfunction View_Search_Host_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'search',([] as any[]),(null as any),(null as any),(null as any),View_Search_0,RenderType_Search),\n    import0.ɵdid(24576,(null as any),0,import1.Search,[import3.Http],(null as any),(null as any))\n  ]\n  ,(null as any),(null as any));\n}\nexport const SearchNgFactory:import0.ComponentFactory<import1.Search> = import0.ɵccf('search',import1.Search,View_Search_Host_0);\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/app/search/search.ngfactory.ts","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HttpModule, JsonpModule} from '@angular/http';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {Search} from './search';\n\n\nconst routes: Routes = [\n  {path: '', component: Search},\n];\n\n@NgModule({\n  imports: [CommonModule, HttpModule, JsonpModule, RouterModule.forChild(routes)],\n  declarations: [Search]\n})\nexport class SearchModule {}\n\n\n// WEBPACK FOOTER //\n// ./app/search/search.module.ts"],"sourceRoot":""}