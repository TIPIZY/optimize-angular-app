{"version":3,"sources":["../../app/search/search.module.ts","../../node_modules/@angular/common/src/directives/ng_for_of.ngfactory.ts","../../app/search/search.ngfactory.ts","../../../../../modules/@angular/http/src/backends/browser_jsonp.ts","../../../../../modules/@angular/http/src/backends/jsonp_backend.ts","../../../../../modules/@angular/http/src/backends/browser_xhr.ts","../../../../../modules/@angular/http/src/backends/xhr_backend.ts","../../../../modules/@angular/http/src/base_response_options.ts","../../../../modules/@angular/http/src/http_module.ts","../../../../modules/@angular/http/src/static_response.ts","../../../../modules/@angular/http/src/version.ts","../../../../modules/@angular/http/src/index.ts","../../../modules/@angular/http/index.ts","../../app/search/search.ts","../../../../modules/@angular/http/src/base_request_options.ts","../../../../modules/@angular/http/src/interfaces.ts","../../../../modules/@angular/http/src/body.ts","../../../../modules/@angular/http/src/headers.ts","../../../../modules/@angular/http/src/enums.ts","../../../../modules/@angular/http/src/http_utils.ts","../../../../modules/@angular/http/src/url_search_params.ts","../../../../modules/@angular/http/src/static_request.ts","../../../../modules/@angular/http/src/http.ts","../../app/search/search.module.ngfactory.ts"],"names":["routes","SearchModule","path","component","search_1","Search","__decorate","core_1","NgModule","imports","common_1","CommonModule","http_1","HttpModule","JsonpModule","router_1","RouterModule","forChild","declarations","__metadata","exports_1","Wrapper_NgForOf","p0","p1","p2","p3","this","_changed","_changes","context","import0","NgForOf","_expr_0","undefined","_expr_1","_expr_2","prototype","ngOnDetach","view","componentView","el","ngOnDestroy","check_ngForOf","currValue","forceUpdate","change","import2","checkBindingChange","ngForOf","check_ngForTrackBy","ngForTrackBy","check_ngForTemplate","ngForTemplate","ngDoCheck","changed","throwOnChange","ngOnChanges","checkHost","handleEvent","eventName","$event","result","subscribe","_eventHandler","Wrapper_NgFor","NgFor","renderType_Search_Host","View_Search_Host_0","SearchNgFactory","styles_Search","View_Search_1","renderType_Search","View_Search_0","Wrapper_Search","import3","createRenderComponentType","import4","ViewEncapsulation","None","_super","viewUtils","parentView","parentIndex","parentElement","call","import5","ViewType","HOST","import6","ChangeDetectorStatus","CheckAlways","__extends","createInternal","rootSelector","_el_0","selectOrCreateRenderHostElement","renderer","EMPTY_INLINE_ARRAY","compView_0","_Search_0_3","injectorGet","import8","Http","create","init","directRenderer","import7","ComponentRef_","injectorGetInternal","token","requestNodeIndex","notFoundResult","detectChangesInternal","internalDetectChanges","destroyInternal","destroy","visitRootNodesInternal","cb","ctx","import1","AppView","ComponentFactory","declaredViewContainer","EMBEDDED","createRenderElement","_text_1","createText","currVal_2","inlineInterpolate","$implicit","checkRenderText","COMPONENT","Object","defineProperty","__NgFor_11_7","_NgForOf_11_6","parentRenderNode","createViewRoot","_text_0","_el_1","_text_2","_el_3","_text_4","_text_5","_el_6","InlineArray4","_text_7","_el_8","_text_9","_text_10","_anchor_11","createTemplateAnchor","_vc_11","import9","ViewContainer","_TemplateRef_11_5","import11","TemplateRef_","import10","vcRef","import12","IterableDiffers","ref","_text_12","_text_13","disposable_0","subscribeToRenderElement","InlineArray2","eventHandler","handleEvent_8","TemplateRef","import13","_NgFor_11_7","currVal_11_0_0","pages","detectChangesInNestedViews","destroyNestedViews","createEmbeddedViewInternal","nodeIndex","markPathToRootAsCheckOnce","pd_sub_0","search","value","_getJsonpConnections","w","window","_jsonpConnections","JSONP_HOME","Injectable","_nAngularCoreIndexJs","_nextRequestId","BrowserJsonp","build","url","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","body","appendChild","cleanup","parentNode","removeChild","decorators","type","ctorParameters","Observable","_nRxjsObservableJs","ResponseOptions","_nAngularHttpSrcBase_response_optionsJs","ReadyState","_nAngularHttpSrcEnumsJs","RequestMethod","ResponseType","ConnectionBackend","_nAngularHttpSrcInterfacesJs","Response","_nAngularHttpSrcStatic_responseJs","_nAngularHttpSrcBackendsBrowser_jsonpJs","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","finished","data","JSONPConnection_","req","_dom","baseResponseOptions","_this","_finished","method","Get","TypeError","request","response","responseObserver","readyState","Loading","_id","callback","indexOf","replace","lastIndexOf","length","substring","script","_script","onLoad","event","Cancelled","Done","responseOptions_1","Error","merge","error","responseOptions","_responseData","next","complete","onError","message","addEventListener","removeEventListener","JSONPBackend","apply","arguments","JSONPBackend_","_browserJSONP","_baseResponseOptions","createConnection","BrowserXhr","XMLHttpRequest","__platform_browser_private__","_nAngularPlatformBrowserIndexJs","ContentType","ResponseContentType","Headers","_nAngularHttpSrcHeadersJs","getResponseURL","_nAngularHttpSrcHttp_utilsJs","isSuccess","XSRFStrategy","_nAngularHttpSrcBackendsBrowser_xhrJs","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","toUpperCase","withCredentials","status","responseText","headers","fromResponseHeaderString","getAllResponseHeaders","statusText","ok","err","setDetectedContentType","has","append","forEach","values","name","setRequestHeader","join","responseType","ArrayBuffer","Json","Text","Blob","getBody","abort","get","contentType","NONE","JSON","FORM","TEXT","BLOB","blob","CookieXSRFStrategy","_cookieName","_headerName","configureRequest","xsrfToken","getDOM","getCookie","set","XHRBackend","_browserXHR","_xsrfStrategy","_a","_b","options","BaseResponseOptions","Default","xhrBackend","requestOptions","jsonpBackend","Jsonp","_nAngularHttpSrcBackendsJsonp_backendJs","_nAngularHttpSrcBackendsXhr_backendJs","BaseRequestOptions","_nAngularHttpSrcBase_request_optionsJs","RequestOptions","_nAngularHttpSrcHttpJs","args","providers","provide","useFactory","httpFactory","deps","useClass","_createDefaultCookieXSRFStrategy","jsonpFactory","Body","_nAngularHttpSrcBodyJs","_body","toString","Version","VERSION","_nAngularHttpSrcHttp_moduleJs","Connection","Request","_nAngularHttpSrcStatic_requestJs","QueryEncoder","_nAngularHttpSrcUrl_search_paramsJs","URLSearchParams","_nAngularHttpSrcVersionJs","_nAngularHttpSrcIndexJs","http","text","wikiUrl","Content-Type","params","map_1","map","json","raw","key","push","title","Component","selector","template","normalizeMethodName","_mergeSearchParams","clone","_parseParams","objParams","keys","Array","isArray","item","_appendParam","stringify","stringToArrayBuffer","parse","String","fromCharCode","Uint16Array","arrayBuffer","_headers","Map","_normalizedNames","delete","headersString","split","line","index","name_1","slice","trim","getAll","lcName","toLowerCase","fn","from","mayBeSetNormalizedName","toJSON","serialized","v","entries","Post","Put","Delete","Options","Head","Patch","Unsent","Open","HeadersReceived","Basic","Cors","Opaque","FORM_DATA","ARRAY_BUFFER","xhr","responseURL","test","getResponseHeader","input","i","strLen","charCodeAt","buffer","paramParser","rawParams","param","eqIdx","val","list","standardEncoding","encodeURIComponent","encodeKey","k","encodeValue","queryEncoder","paramsMap","appendAll","storedParam","setAll","searchParams","replaceAll","paramsList","prefix","detectContentType","detectContentTypeFromBody","FormData","noop","httpRequest","backend","mergeOptions","defaultOpts","providedOpts","newOptions","_backend","_defaultOptions","responseObservable","post","put","patch","head","defaultOptions","SearchModuleNgFactory","SearchModuleInjector","parent","__NgLocalization_5","NgLocaleLocalization","import14","LOCALE_ID","__BrowserXhr_6","__ResponseOptions_7","__XSRFStrategy_8","__XHRBackend_9","_BrowserXhr_6","_ResponseOptions_7","_XSRFStrategy_8","__RequestOptions_10","__Http_11","_XHRBackend_9","_RequestOptions_10","__BrowserJsonp_12","__JSONPBackend_13","_BrowserJsonp_12","__Jsonp_14","_JSONPBackend_13","__ROUTES_15","import15","_CommonModule_0","_HttpModule_1","_JsonpModule_2","_RouterModule_3","ROUTER_FORROOT_GUARD","_SearchModule_4","getInternal","NgLocalization","_NgLocalization_5","import16","import17","_Http_11","_Jsonp_14","import18","ROUTES","_ROUTES_15","NgModuleInjector","NgModuleFactory"],"mappings":"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","file":"search.min.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HttpModule, JsonpModule} from '@angular/http';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {Search} from './search';\n\n\nconst routes: Routes = [\n  {path: '', component: Search},\n];\n\n@NgModule({\n  imports: [CommonModule, HttpModule, JsonpModule, RouterModule.forChild(routes)],\n  declarations: [Search]\n})\nexport class SearchModule {}","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/common/src/directives/ng_for_of';\nimport * as import1 from '@angular/core/src/linker/view';\nimport * as import2 from '@angular/core/src/linker/view_utils';\nexport class Wrapper_NgForOf {\n  /*private*/ _eventHandler:Function;\n  context:import0.NgForOf<any>;\n  /*private*/ _changed:boolean;\n  /*private*/ _changes:{[key: string]:any};\n  /*private*/ _expr_0:any;\n  /*private*/ _expr_1:any;\n  /*private*/ _expr_2:any;\n  constructor(p0:any,p1:any,p2:any,p3:any) {\n    this._changed = false;\n    this._changes = {};\n    this.context = new import0.NgForOf<any>(p0,p1,p2,p3);\n    this._expr_0 = (undefined as any);\n    this._expr_1 = (undefined as any);\n    this._expr_2 = (undefined as any);\n  }\n  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  ngOnDestroy():void {\n  }\n  check_ngForOf(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_0,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForOf = currValue;\n      this._expr_0 = currValue;\n      this._changes['ngForOf'] = change;\n    }\n  }\n  check_ngForTrackBy(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_1,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForTrackBy = currValue;\n      this._expr_1 = currValue;\n      this._changes['ngForTrackBy'] = change;\n    }\n  }\n  check_ngForTemplate(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_2,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForTemplate = currValue;\n      this._expr_2 = currValue;\n      this._changes['ngForTemplate'] = change;\n    }\n  }\n  ngDoCheck(view:import1.AppView<any>,el:any):boolean {\n    var changed:any = this._changed;\n    this._changed = false;\n    if (!view.throwOnChange) {\n      if (changed) {\n        this.context.ngOnChanges(this._changes);\n        this._changes = {};\n      }\n      this.context.ngDoCheck();\n    }\n    return changed;\n  }\n  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  handleEvent(eventName:string,$event:any):boolean {\n    var result:boolean = true;\n    return result;\n  }\n  subscribe(view:import1.AppView<any>,_eventHandler:any):void {\n    this._eventHandler = _eventHandler;\n  }\n}\nexport class Wrapper_NgFor {\n  /*private*/ _eventHandler:Function;\n  context:import0.NgFor;\n  /*private*/ _changed:boolean;\n  /*private*/ _changes:{[key: string]:any};\n  /*private*/ _expr_0:any;\n  /*private*/ _expr_1:any;\n  /*private*/ _expr_2:any;\n  constructor(p0:any,p1:any,p2:any,p3:any) {\n    this._changed = false;\n    this._changes = {};\n    this.context = new import0.NgFor(p0,p1,p2,p3);\n    this._expr_0 = (undefined as any);\n    this._expr_1 = (undefined as any);\n    this._expr_2 = (undefined as any);\n  }\n  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  ngOnDestroy():void {\n  }\n  check_ngForOf(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_0,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForOf = currValue;\n      this._expr_0 = currValue;\n      this._changes['ngForOf'] = change;\n    }\n  }\n  check_ngForTrackBy(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_1,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForTrackBy = currValue;\n      this._expr_1 = currValue;\n      this._changes['ngForTrackBy'] = change;\n    }\n  }\n  check_ngForTemplate(view:import1.AppView<any>,currValue:any,forceUpdate:boolean):void {\n    var change:any = import2.checkBindingChange(view,this._expr_2,currValue,forceUpdate);\n    if (change) {\n      this._changed = true;\n      this.context.ngForTemplate = currValue;\n      this._expr_2 = currValue;\n      this._changes['ngForTemplate'] = change;\n    }\n  }\n  ngDoCheck(view:import1.AppView<any>,el:any):boolean {\n    var changed:any = this._changed;\n    this._changed = false;\n    if (!view.throwOnChange) {\n      if (changed) {\n        this.context.ngOnChanges(this._changes);\n        this._changes = {};\n      }\n      this.context.ngDoCheck();\n    }\n    return changed;\n  }\n  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  handleEvent(eventName:string,$event:any):boolean {\n    var result:boolean = true;\n    return result;\n  }\n  subscribe(view:import1.AppView<any>,_eventHandler:any):void {\n    this._eventHandler = _eventHandler;\n  }\n}","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from './search';\nimport * as import1 from '@angular/core/src/linker/view';\nimport * as import2 from '@angular/core/src/render/api';\nimport * as import3 from '@angular/core/src/linker/view_utils';\nimport * as import4 from '@angular/core/src/metadata/view';\nimport * as import5 from '@angular/core/src/linker/view_type';\nimport * as import6 from '@angular/core/src/change_detection/constants';\nimport * as import7 from '@angular/core/src/linker/component_factory';\nimport * as import8 from '@angular/http/src/http';\nimport * as import9 from '@angular/core/src/linker/view_container';\nimport * as import10 from '../../node_modules/@angular/common/src/directives/ng_for_of.ngfactory';\nimport * as import11 from '@angular/core/src/linker/template_ref';\nimport * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';\nimport * as import13 from '@angular/common/src/directives/ng_for_of';\nexport class Wrapper_Search {\n  /*private*/ _eventHandler:Function;\n  context:import0.Search;\n  /*private*/ _changed:boolean;\n  constructor(p0:any) {\n    this._changed = false;\n    this.context = new import0.Search(p0);\n  }\n  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  ngOnDestroy():void {\n  }\n  ngDoCheck(view:import1.AppView<any>,el:any):boolean {\n    var changed:any = this._changed;\n    this._changed = false;\n    return changed;\n  }\n  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {\n  }\n  handleEvent(eventName:string,$event:any):boolean {\n    var result:boolean = true;\n    return result;\n  }\n  subscribe(view:import1.AppView<any>,_eventHandler:any):void {\n    this._eventHandler = _eventHandler;\n  }\n}\nvar renderType_Search_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});\nclass View_Search_Host_0 extends import1.AppView<any> {\n  _el_0:any;\n  compView_0:import1.AppView<import0.Search>;\n  _Search_0_3:Wrapper_Search;\n  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {\n    super(View_Search_Host_0,renderType_Search_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);\n  }\n  createInternal(rootSelector:string):import7.ComponentRef<any> {\n    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'search',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));\n    this.compView_0 = new View_Search_0(this.viewUtils,this,0,this._el_0);\n    this._Search_0_3 = new Wrapper_Search(this.injectorGet(import8.Http,this.parentIndex));\n    this.compView_0.create(this._Search_0_3.context);\n    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));\n    return new import7.ComponentRef_<any>(0,this,this._el_0,this._Search_0_3.context);\n  }\n  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {\n    if (((token === import0.Search) && (0 === requestNodeIndex))) { return this._Search_0_3.context; }\n    return notFoundResult;\n  }\n  detectChangesInternal():void {\n    this._Search_0_3.ngDoCheck(this,this._el_0);\n    this.compView_0.internalDetectChanges(this.throwOnChange);\n  }\n  destroyInternal():void {\n    this.compView_0.destroy();\n  }\n  visitRootNodesInternal(cb:any,ctx:any):void {\n    cb(this._el_0,ctx);\n  }\n}\nexport const SearchNgFactory:import7.ComponentFactory<import0.Search> = new import7.ComponentFactory<import0.Search>('search',View_Search_Host_0,import0.Search);\nconst styles_Search:any[] = ([] as any[]);\nclass View_Search_1 extends import1.AppView<any> {\n  _el_0:any;\n  _text_1:any;\n  /*private*/ _expr_2:any;\n  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {\n    super(View_Search_1,renderType_Search,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);\n    this._expr_2 = (undefined as any);\n  }\n  createInternal(rootSelector:string):import7.ComponentRef<any> {\n    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));\n    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));\n    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [\n      this._el_0,\n      this._text_1\n    ]\n    ),(null as any));\n    return (null as any);\n  }\n  detectChangesInternal():void {\n    const currVal_2:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');\n    import3.checkRenderText(this,this._text_1,this._expr_2,(this._expr_2 = currVal_2),false);\n  }\n  visitRootNodesInternal(cb:any,ctx:any):void {\n    cb(this._el_0,ctx);\n  }\n}\nvar renderType_Search:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_Search,{});\nexport class View_Search_0 extends import1.AppView<import0.Search> {\n  _text_0:any;\n  _el_1:any;\n  _text_2:any;\n  _el_3:any;\n  _text_4:any;\n  _text_5:any;\n  _el_6:any;\n  _text_7:any;\n  _el_8:any;\n  _text_9:any;\n  _text_10:any;\n  _anchor_11:any;\n  /*private*/ _vc_11:import9.ViewContainer;\n  _TemplateRef_11_5:any;\n  _NgForOf_11_6:import10.Wrapper_NgForOf;\n  __NgFor_11_7:any;\n  _text_12:any;\n  _text_13:any;\n  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {\n    super(View_Search_0,renderType_Search,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);\n  }\n  get _NgFor_11_7():any {\n    if ((this.__NgFor_11_7 == null)) { (this.__NgFor_11_7 = this._NgForOf_11_6.context); }\n    return this.__NgFor_11_7;\n  }\n  createInternal(rootSelector:string):import7.ComponentRef<any> {\n    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);\n    this._text_0 = this.renderer.createText(parentRenderNode,'\\n    ',(null as any));\n    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));\n    this._text_2 = this.renderer.createText(this._el_1,'\\n      ',(null as any));\n    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'h2',import3.EMPTY_INLINE_ARRAY,(null as any));\n    this._text_4 = this.renderer.createText(this._el_3,'Search',(null as any));\n    this._text_5 = this.renderer.createText(this._el_1,'\\n      ',(null as any));\n    this._el_6 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray4<any>(4,'placeholder','Search on Wikipedia','type','text'),(null as any));\n    this._text_7 = this.renderer.createText(this._el_1,'\\n      ',(null as any));\n    this._el_8 = import3.createRenderElement(this.renderer,this._el_1,'button',import3.EMPTY_INLINE_ARRAY,(null as any));\n    this._text_9 = this.renderer.createText(this._el_8,'Search',(null as any));\n    this._text_10 = this.renderer.createText(this._el_1,'\\n      ',(null as any));\n    this._anchor_11 = this.renderer.createTemplateAnchor(this._el_1,(null as any));\n    this._vc_11 = new import9.ViewContainer(11,1,this,this._anchor_11);\n    this._TemplateRef_11_5 = new import11.TemplateRef_<any>(this,11,this._anchor_11);\n    this._NgForOf_11_6 = new import10.Wrapper_NgForOf(this._vc_11.vcRef,this._TemplateRef_11_5,this.parentView.injectorGet(import12.IterableDiffers,this.parentIndex),this.ref);\n    this._text_12 = this.renderer.createText(this._el_1,'\\n    ',(null as any));\n    this._text_13 = this.renderer.createText(parentRenderNode,'\\n  ',(null as any));\n    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2<any>(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));\n    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [\n      this._text_0,\n      this._el_1,\n      this._text_2,\n      this._el_3,\n      this._text_4,\n      this._text_5,\n      this._el_6,\n      this._text_7,\n      this._el_8,\n      this._text_9,\n      this._text_10,\n      this._anchor_11,\n      this._text_12,\n      this._text_13\n    ]\n    ),[disposable_0]);\n    return (null as any);\n  }\n  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {\n    if (((token === import11.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }\n    if (((token === import13.NgForOf) && (11 === requestNodeIndex))) { return this._NgForOf_11_6.context; }\n    if (((token === import13.NgFor) && (11 === requestNodeIndex))) { return this._NgFor_11_7; }\n    return notFoundResult;\n  }\n  detectChangesInternal():void {\n    const currVal_11_0_0:any = this.context.pages;\n    this._NgForOf_11_6.check_ngForOf(this,currVal_11_0_0,false);\n    this._NgForOf_11_6.ngDoCheck(this,this._anchor_11);\n    this._vc_11.detectChangesInNestedViews(this.throwOnChange);\n  }\n  destroyInternal():void {\n    this._vc_11.destroyNestedViews();\n  }\n  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {\n    if ((nodeIndex == 11)) { return new View_Search_1(this.viewUtils,this,11,this._anchor_11,this._vc_11); }\n    return (null as any);\n  }\n  handleEvent_8(eventName:string,$event:any):boolean {\n    this.markPathToRootAsCheckOnce();\n    var result:boolean = true;\n    if ((eventName == 'click')) {\n      const pd_sub_0:any = ((<any>this.context.search(this._el_6.value)) !== false);\n      result = (pd_sub_0 && result);\n    }\n    return result;\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nlet /** @type {?} */ _nextRequestId = 0;\nexport const /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nlet /** @type {?} */ _jsonpConnections: {[key: string]: any} = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const /** @type {?} */ w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\nexport class BrowserJsonp {\n/**\n * @param {?} url\n * @return {?}\n */\nbuild(url: string): any {\n    const /** @type {?} */ node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n/**\n * @return {?}\n */\nnextRequestID(): string { return `__req${_nextRequestId++}`; }\n/**\n * @param {?} id\n * @return {?}\n */\nrequestCallback(id: string): string { return `${JSONP_HOME}${id}_finished`; }\n/**\n * @param {?} id\n * @param {?} connection\n * @return {?}\n */\nexposeConnection(id: string, connection: any): void {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nremoveConnection(id: string): void {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nsend(node: any): void { document.body.appendChild( /** @type {?} */((<Node>(node)))); }\n/**\n * @param {?} node\n * @return {?}\n */\ncleanup(node: any): void {\n    if (node.parentNode) {\n      node.parentNode.removeChild( /** @type {?} */((<Node>(node))));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserJsonp_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserJsonp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserJsonp.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nimport {ResponseOptions} from '../base_response_options';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Connection, ConnectionBackend} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\n\nimport {BrowserJsonp} from './browser_jsonp';\n\nconst /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPConnection implements Connection {\n  /**\n   * The {@link ReadyState} of this request.\n   */\n  readyState: ReadyState;\n\n  /**\n   * The outgoing HTTP request.\n   */\n  request: Request;\n\n  /**\n   * An observable that completes with the response, when the request is finished.\n   */\n  response: Observable<Response>;\n/**\n * Callback called when the JSONP request completes, to notify the application\n * of the new data.\n * @abstract\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {}\n}\n\nfunction JSONPConnection_tsickle_Closure_declarations() {\n/**\n * The {\\@link ReadyState} of this request.\n * @type {?}\n */\nJSONPConnection.prototype.readyState;\n/**\n * The outgoing HTTP request.\n * @type {?}\n */\nJSONPConnection.prototype.request;\n/**\n * An observable that completes with the response, when the request is finished.\n * @type {?}\n */\nJSONPConnection.prototype.response;\n}\n\nexport class JSONPConnection_ extends JSONPConnection {\nprivate _id: string;\nprivate _script: Element;\nprivate _responseData: any;\nprivate _finished: boolean = false;\n/**\n * @param {?} req\n * @param {?} _dom\n * @param {?=} baseResponseOptions\n */\nconstructor(\n      req: Request,\nprivate _dom: BrowserJsonp,\nprivate baseResponseOptions?: ResponseOptions) {\n    super();\n    if (req.method !== RequestMethod.Get) {\n      throw new TypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      const id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      const callback = _dom.requestCallback(this._id);\n      let url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      const script = this._script = _dom.build(url);\n\n      const onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (baseResponseOptions) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (this.baseResponseOptions) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      const onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (baseResponseOptions) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        this._dom.cleanup(script);\n      };\n    });\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\nfunction JSONPConnection__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPConnection_.prototype._id;\n/** @type {?} */\nJSONPConnection_.prototype._script;\n/** @type {?} */\nJSONPConnection_.prototype._responseData;\n/** @type {?} */\nJSONPConnection_.prototype._finished;\n/** @type {?} */\nJSONPConnection_.prototype._dom;\n/** @type {?} */\nJSONPConnection_.prototype.baseResponseOptions;\n}\n\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPBackend extends ConnectionBackend {}\nexport class JSONPBackend_ extends JSONPBackend {\n/**\n * @param {?} _browserJSONP\n * @param {?} _baseResponseOptions\n */\nconstructor(private _browserJSONP: BrowserJsonp,\nprivate _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): JSONPConnection {\n    return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserJsonp, },\n{type: ResponseOptions, },\n];\n}\n\nfunction JSONPBackend__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPBackend_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJSONPBackend_.ctorParameters;\n/** @type {?} */\nJSONPBackend_.prototype._browserJSONP;\n/** @type {?} */\nJSONPBackend_.prototype._baseResponseOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n * \n * Take care not to evaluate this in non-browser contexts.\n * \n * \\@experimental\n */\nexport class BrowserXhr {\nconstructor() {}\n/**\n * @return {?}\n */\nbuild(): any { return /** @type {?} */(( <any>(new XMLHttpRequest()))); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserXhr.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {__platform_browser_private__} from '@angular/platform-browser';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {ResponseOptions} from '../base_response_options';\nimport {ContentType, ReadyState, RequestMethod, ResponseContentType, ResponseType} from '../enums';\nimport {Headers} from '../headers';\nimport {getResponseURL, isSuccess} from '../http_utils';\nimport {Connection, ConnectionBackend, XSRFStrategy} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\nimport {BrowserXhr} from './browser_xhr';\n\nconst /** @type {?} */ XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n * \n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n * \n * \\@experimental\n */\nexport class XHRConnection implements Connection {\n  request: Request;\n  /**\n   * Response {@link EventEmitter} which emits a single {@link Response} value on load event of\n   * `XMLHttpRequest`.\n   */\n  response: Observable<Response>;\n  readyState: ReadyState;\n/**\n * @param {?} req\n * @param {?} browserXHR\n * @param {?=} baseResponseOptions\n */\nconstructor(req: Request, browserXHR: BrowserXhr, baseResponseOptions?: ResponseOptions) {\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n      const _xhr: XMLHttpRequest = browserXHR.build();\n      _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n      if (req.withCredentials != null) {\n        _xhr.withCredentials = req.withCredentials;\n      }\n      // load event handler\n      const onLoad = () => {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = _xhr.status === 1223 ? 204 : _xhr.status;\n\n        let body: any = null;\n\n        // HTTP 204 means no content\n        if (status !== 204) {\n          // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n          // response/responseType properties were introduced in ResourceLoader Level2 spec\n          // (supported by IE10)\n          body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n\n          // Implicitly strip a potential XSSI prefix.\n          if (typeof body === 'string') {\n            body = body.replace(XSSI_PREFIX, '');\n          }\n        }\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = body ? 200 : 0;\n        }\n\n        const headers: Headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n        // IE 9 does not provide the way to get URL of response\n        const url = getResponseURL(_xhr) || req.url;\n        const statusText: string = _xhr.statusText || 'OK';\n\n        let responseOptions = new ResponseOptions({body, status, headers, statusText, url});\n        if (baseResponseOptions != null) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        const response = new Response(responseOptions);\n        response.ok = isSuccess(status);\n        if (response.ok) {\n          responseObserver.next(response);\n          // TODO(gdi2290): defer complete if array buffer until done\n          responseObserver.complete();\n          return;\n        }\n        responseObserver.error(response);\n      };\n      // error event handler\n      const onError = (err: ErrorEvent) => {\n        let responseOptions = new ResponseOptions({\n          body: err,\n          type: ResponseType.Error,\n          status: _xhr.status,\n          statusText: _xhr.statusText,\n        });\n        if (baseResponseOptions != null) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      this.setDetectedContentType(req, _xhr);\n\n      if (req.headers == null) {\n        req.headers = new Headers();\n      }\n      if (!req.headers.has('Accept')) {\n        req.headers.append('Accept', 'application/json, text/plain, */*');\n      }\n      req.headers.forEach((values, name) => _xhr.setRequestHeader(name, values.join(',')));\n\n      // Select the correct buffer type to store the response\n      if (req.responseType != null && _xhr.responseType != null) {\n        switch (req.responseType) {\n          case ResponseContentType.ArrayBuffer:\n            _xhr.responseType = 'arraybuffer';\n            break;\n          case ResponseContentType.Json:\n            _xhr.responseType = 'json';\n            break;\n          case ResponseContentType.Text:\n            _xhr.responseType = 'text';\n            break;\n          case ResponseContentType.Blob:\n            _xhr.responseType = 'blob';\n            break;\n          default:\n            throw new Error('The selected responseType is not supported');\n        }\n      }\n\n      _xhr.addEventListener('load', onLoad);\n      _xhr.addEventListener('error', onError);\n\n      _xhr.send(this.request.getBody());\n\n      return () => {\n        _xhr.removeEventListener('load', onLoad);\n        _xhr.removeEventListener('error', onError);\n        _xhr.abort();\n      };\n    });\n  }\n/**\n * @param {?} req\n * @param {?} _xhr\n * @return {?}\n */\nsetDetectedContentType(req: any /** TODO Request */, _xhr: any /** XMLHttpRequest */) {\n    // Skip if a custom Content-Type header is provided\n    if (req.headers != null && req.headers.get('Content-Type') != null) {\n      return;\n    }\n\n    // Set the detected content type\n    switch (req.contentType) {\n      case ContentType.NONE:\n        break;\n      case ContentType.JSON:\n        _xhr.setRequestHeader('content-type', 'application/json');\n        break;\n      case ContentType.FORM:\n        _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        break;\n      case ContentType.TEXT:\n        _xhr.setRequestHeader('content-type', 'text/plain');\n        break;\n      case ContentType.BLOB:\n        const /** @type {?} */ blob = req.blob();\n        if (blob.type) {\n          _xhr.setRequestHeader('content-type', blob.type);\n        }\n        break;\n    }\n  }\n}\n\nfunction XHRConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nXHRConnection.prototype.request;\n/**\n * Response {\\@link EventEmitter} which emits a single {\\@link Response} value on load event of\n * `XMLHttpRequest`.\n * @type {?}\n */\nXHRConnection.prototype.response;\n/** @type {?} */\nXHRConnection.prototype.readyState;\n}\n\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n * \n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n * \n * \\@experimental\n */\nexport class CookieXSRFStrategy implements XSRFStrategy {\n/**\n * @param {?=} _cookieName\n * @param {?=} _headerName\n */\nconstructor(\nprivate _cookieName: string = 'XSRF-TOKEN',\nprivate _headerName: string = 'X-XSRF-TOKEN') {}\n/**\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request): void {\n    const /** @type {?} */ xsrfToken = __platform_browser_private__.getDOM().getCookie(this._cookieName);\n    if (xsrfToken) {\n      req.headers.set(this._headerName, xsrfToken);\n    }\n  }\n}\n\nfunction CookieXSRFStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieXSRFStrategy.prototype._cookieName;\n/** @type {?} */\nCookieXSRFStrategy.prototype._headerName;\n}\n\n/**\n * Creates {\\@link XHRConnection} instances.\n * \n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n * \n * ### Example\n * \n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({ \n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nexport class XHRBackend implements ConnectionBackend {\n/**\n * @param {?} _browserXHR\n * @param {?} _baseResponseOptions\n * @param {?} _xsrfStrategy\n */\nconstructor(\nprivate _browserXHR: BrowserXhr,\nprivate _baseResponseOptions: ResponseOptions,\nprivate _xsrfStrategy: XSRFStrategy) {}\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): XHRConnection {\n    this._xsrfStrategy.configureRequest(request);\n    return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserXhr, },\n{type: ResponseOptions, },\n{type: XSRFStrategy, },\n];\n}\n\nfunction XHRBackend_tsickle_Closure_declarations() {\n/** @type {?} */\nXHRBackend.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nXHRBackend.ctorParameters;\n/** @type {?} */\nXHRBackend.prototype._browserXHR;\n/** @type {?} */\nXHRBackend.prototype._baseResponseOptions;\n/** @type {?} */\nXHRBackend.prototype._xsrfStrategy;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {ResponseOptionsArgs} from './interfaces';\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n * \n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n * \n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n * \n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n * \n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n * \n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n * \n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n * \n * \\@experimental\n */\nexport class ResponseOptions {\n  // TODO: FormData | Blob\n  /**\n   * String, Object, ArrayBuffer or Blob representing the body of the {@link Response}.\n   */\n  body: string|Object|ArrayBuffer|Blob;\n  /**\n   * Http {@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n   * associated with the response.\n   */\n  status: number;\n  /**\n   * Response {@link Headers headers}\n   */\n  headers: Headers;\n  /**\n   * @internal\n   */\n  statusText: string;\n  /**\n   * @internal\n   */\n  type: ResponseType;\n  url: string;\n/**\n * @param {?=} __0\n */\nconstructor({body, status, headers, statusText, type, url}: ResponseOptionsArgs = {}) {\n    this.body = body != null ? body : null;\n    this.status = status != null ? status : null;\n    this.headers = headers != null ? headers : null;\n    this.statusText = statusText != null ? statusText : null;\n    this.type = type != null ? type : null;\n    this.url = url != null ? url : null;\n  }\n/**\n * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n * override\n * existing values. This method will not change the values of the instance on which it is being\n * called.\n * \n * This may be useful when sharing a base `ResponseOptions` object inside tests,\n * where certain properties may change from test to test.\n * \n * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n * \n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new ResponseOptions({\n *   body: {name: 'Jeff'}\n * });\n * var res = new Response(options.merge({\n *   url: 'https://google.com'\n * }));\n * console.log('options.url:', options.url); // null\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * console.log('res.url:', res.url); // https://google.com\n * ```\n * @param {?=} options\n * @return {?}\n */\nmerge(options?: ResponseOptionsArgs): ResponseOptions {\n    return new ResponseOptions({\n      body: options && options.body != null ? options.body : this.body,\n      status: options && options.status != null ? options.status : this.status,\n      headers: options && options.headers != null ? options.headers : this.headers,\n      statusText: options && options.statusText != null ? options.statusText : this.statusText,\n      type: options && options.type != null ? options.type : this.type,\n      url: options && options.url != null ? options.url : this.url,\n    });\n  }\n}\n\nfunction ResponseOptions_tsickle_Closure_declarations() {\n/**\n * String, Object, ArrayBuffer or Blob representing the body of the {\\@link Response}.\n * @type {?}\n */\nResponseOptions.prototype.body;\n/**\n * Http {\\@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n * associated with the response.\n * @type {?}\n */\nResponseOptions.prototype.status;\n/**\n * Response {\\@link Headers headers}\n * @type {?}\n */\nResponseOptions.prototype.headers;\n/**\n * \\@internal\n * @type {?}\n */\nResponseOptions.prototype.statusText;\n/**\n * \\@internal\n * @type {?}\n */\nResponseOptions.prototype.type;\n/** @type {?} */\nResponseOptions.prototype.url;\n}\n\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n * \n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n * \n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n * \n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n * \n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n * \n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n * \n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n * \n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n * \n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n * \n * \\@experimental\n */\nexport class BaseResponseOptions extends ResponseOptions {\nconstructor() {\n    super({status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers()});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BaseResponseOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseResponseOptions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseResponseOptions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\nimport {NgModule} from '@angular/core';\n\nimport {BrowserJsonp} from './backends/browser_jsonp';\nimport {BrowserXhr} from './backends/browser_xhr';\nimport {JSONPBackend, JSONPBackend_} from './backends/jsonp_backend';\nimport {CookieXSRFStrategy, XHRBackend} from './backends/xhr_backend';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nimport {Http, Jsonp} from './http';\nimport {XSRFStrategy} from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n  return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n  return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend: JSONPBackend, requestOptions: RequestOptions): Jsonp {\n  return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n * \n * \\@experimental\n */\nexport class HttpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n    BrowserXhr,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    XHRBackend,\n    {provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HttpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpModule.ctorParameters;\n}\n\n/**\n * The module that includes jsonp's providers\n * \n * \\@experimental\n */\nexport class JsonpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions]},\n    BrowserJsonp,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    {provide: JSONPBackend, useClass: JSONPBackend_},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonpModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {ResponseOptions} from './base_response_options';\nimport {Body} from './body';\nimport {ResponseType} from './enums';\nimport {Headers} from './headers';\n/**\n * Creates `Response` instances from provided values.\n * \n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n * \n * ### Example\n * \n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n * \n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n * \n * \\@experimental\n */\nexport class Response extends Body {\n  /**\n   * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n   *\n   * Defaults to \"default\".\n   */\n  type: ResponseType;\n  /**\n   * True if the response's status is within 200-299\n   */\n  ok: boolean;\n  /**\n   * URL of response.\n   *\n   * Defaults to empty string.\n   */\n  url: string;\n  /**\n   * Status code returned by server.\n   *\n   * Defaults to 200.\n   */\n  status: number;\n  /**\n   * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n   * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n   *\n   * Defaults to \"OK\"\n   */\n  statusText: string;\n  /**\n   * Non-standard property\n   *\n   * Denotes how many of the response body's bytes have been loaded, for example if the response is\n   * the result of a progress event.\n   */\n  bytesLoaded: number;\n  /**\n   * Non-standard property\n   *\n   * Denotes how many bytes are expected in the final response body.\n   */\n  totalBytes: number;\n  /**\n   * Headers object based on the `Headers` class in the [Fetch\n   * Spec](https://fetch.spec.whatwg.org/#headers-class).\n   */\n  headers: Headers;\n/**\n * @param {?} responseOptions\n */\nconstructor(responseOptions: ResponseOptions) {\n    super();\n    this._body = responseOptions.body;\n    this.status = responseOptions.status;\n    this.ok = (this.status >= 200 && this.status <= 299);\n    this.statusText = responseOptions.statusText;\n    this.headers = responseOptions.headers;\n    this.type = responseOptions.type;\n    this.url = responseOptions.url;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `Response with status: ${this.status} ${this.statusText} for URL: ${this.url}`;\n  }\n}\n\nfunction Response_tsickle_Closure_declarations() {\n/**\n * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n * \n * Defaults to \"default\".\n * @type {?}\n */\nResponse.prototype.type;\n/**\n * True if the response's status is within 200-299\n * @type {?}\n */\nResponse.prototype.ok;\n/**\n * URL of response.\n * \n * Defaults to empty string.\n * @type {?}\n */\nResponse.prototype.url;\n/**\n * Status code returned by server.\n * \n * Defaults to 200.\n * @type {?}\n */\nResponse.prototype.status;\n/**\n * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n * \n * Defaults to \"OK\"\n * @type {?}\n */\nResponse.prototype.statusText;\n/**\n * Non-standard property\n * \n * Denotes how many of the response body's bytes have been loaded, for example if the response is\n * the result of a progress event.\n * @type {?}\n */\nResponse.prototype.bytesLoaded;\n/**\n * Non-standard property\n * \n * Denotes how many bytes are expected in the final response body.\n * @type {?}\n */\nResponse.prototype.totalBytes;\n/**\n * Headers object based on the `Headers` class in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#headers-class).\n * @type {?}\n */\nResponse.prototype.headers;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const /** @type {?} */ VERSION = new Version('4.0.0-beta.6');\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {BrowserXhr} from './backends/browser_xhr';\nexport {JSONPBackend, JSONPConnection} from './backends/jsonp_backend';\nexport {CookieXSRFStrategy, XHRBackend, XHRConnection} from './backends/xhr_backend';\nexport {BaseRequestOptions, RequestOptions} from './base_request_options';\nexport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nexport {ReadyState, RequestMethod, ResponseContentType, ResponseType} from './enums';\nexport {Headers} from './headers';\nexport {Http, Jsonp} from './http';\nexport {HttpModule, JsonpModule} from './http_module';\nexport {Connection, ConnectionBackend, RequestOptionsArgs, ResponseOptionsArgs, XSRFStrategy} from './interfaces';\nexport {Request} from './static_request';\nexport {Response} from './static_response';\nexport {QueryEncoder, URLSearchParams} from './url_search_params';\nexport {VERSION} from './version';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\nexport {BrowserXhr,JSONPBackend,JSONPConnection,CookieXSRFStrategy,XHRBackend,XHRConnection,BaseRequestOptions,RequestOptions,BaseResponseOptions,ResponseOptions,ReadyState,RequestMethod,ResponseContentType,ResponseType,Headers,Http,Jsonp,HttpModule,JsonpModule,Connection,ConnectionBackend,RequestOptionsArgs,ResponseOptionsArgs,XSRFStrategy,Request,Response,QueryEncoder,URLSearchParams,VERSION} from './src/index';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core'\nimport {Http, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {map} from 'rxjs/operator/map';\n\n@Component({\n  selector: 'search',\n  template: `\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search on Wikipedia\" #foo>\n      <button (click)=\"search(foo.value)\">Search</button>\n      <div *ngFor=\"let page of pages\">{{page}}</div>\n    </div>\n  `\n})\nexport class Search {\n  pages: Array<any> = [];\n\n  constructor(private http: Http) {}\n\n  search(text: string) {\n    if (text && text.length > 0) {\n      let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n\n      let headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n\n      let params = new URLSearchParams();\n      params.set('gapfrom', text);\n      params.set('gaplimit', '10');\n      params.set('generator', 'allpages');\n      params.set('action', 'query');\n      params.set('format', 'json');\n      params.set('origin', '*');\n\n      let options = new RequestOptions({\n        headers: headers,\n        search: params\n      });\n\n      map.call(this.http.get(wikiUrl, options), response => <string[]> response.json())\n        .subscribe(data => {\n          this.pages = [];\n          var raw = data['query']['pages'];\n          for (var key in raw) {\n            this.pages.push(raw[key].title);\n          }\n        });\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {RequestMethod, ResponseContentType} from './enums';\nimport {Headers} from './headers';\nimport {normalizeMethodName} from './http_utils';\nimport {RequestOptionsArgs} from './interfaces';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n * \n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n * \n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n * \n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n * \n * \\@experimental\n */\nexport class RequestOptions {\n  /**\n   * Http method with which to execute a {@link Request}.\n   * Acceptable methods are defined in the {@link RequestMethod} enum.\n   */\n  method: RequestMethod|string;\n  /**\n   * {@link Headers} to be attached to a {@link Request}.\n   */\n  headers: Headers;\n  /**\n   * Body to be used when creating a {@link Request}.\n   */\n  body: any;\n  /**\n   * Url with which to perform a {@link Request}.\n   */\n  url: string;\n  /**\n   * Search parameters to be included in a {@link Request}.\n   */\n  params: URLSearchParams;\n/**\n * @deprecated from 4.0.0. Use params instead.\n * @return {?}\n */\nget search(): URLSearchParams { return this.params; }\n/**\n * @deprecated from 4.0.0. Use params instead.\n * @param {?} params\n * @return {?}\n */\nset search(params: URLSearchParams) { this.params = params; }\n  /**\n   * Enable use credentials for a {@link Request}.\n   */\n  withCredentials: boolean;\n  /*\n   * Select a buffer to store the response, such as ArrayBuffer, Blob, Json (or Document)\n   */\n  responseType: ResponseContentType;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {method, headers, body, url, search, params, withCredentials,\n       responseType}: RequestOptionsArgs = {}) {\n    this.method = method != null ? normalizeMethodName(method) : null;\n    this.headers = headers != null ? headers : null;\n    this.body = body != null ? body : null;\n    this.url = url != null ? url : null;\n    this.params = this._mergeSearchParams(params || search);\n    this.withCredentials = withCredentials != null ? withCredentials : null;\n    this.responseType = responseType != null ? responseType : null;\n  }\n/**\n * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n * existing values. This method will not change the values of the instance on which it is being\n * called.\n * \n * Note that `headers` and `search` will override existing values completely if present in\n * the `options` object. If these values should be merged, it should be done prior to calling\n * `merge` on the `RequestOptions` instance.\n * \n * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n * \n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * var options = new RequestOptions({\n *   method: RequestMethod.Post\n * });\n * var req = new Request(options.merge({\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n * @param {?=} options\n * @return {?}\n */\nmerge(options?: RequestOptionsArgs): RequestOptions {\n    return new RequestOptions({\n      method: options && options.method != null ? options.method : this.method,\n      headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n      body: options && options.body != null ? options.body : this.body,\n      url: options && options.url != null ? options.url : this.url,\n      params: options && this._mergeSearchParams(options.params || options.search),\n      withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                                                                    this.withCredentials,\n      responseType: options && options.responseType != null ? options.responseType :\n                                                              this.responseType\n    });\n  }\n/**\n * @param {?} params\n * @return {?}\n */\nprivate _mergeSearchParams(params: string|URLSearchParams|\n                             {[key: string]: any | any[]}): URLSearchParams {\n    if (!params) return this.params;\n\n    if (params instanceof URLSearchParams) {\n      return params.clone();\n    }\n\n    if (typeof params === 'string') {\n      return new URLSearchParams(params);\n    }\n\n    return this._parseParams(params);\n  }\n/**\n * @param {?=} objParams\n * @return {?}\n */\nprivate _parseParams(objParams: {[key: string]: any | any[]} = {}): URLSearchParams {\n    const /** @type {?} */ params = new URLSearchParams();\n    Object.keys(objParams).forEach((key: string) => {\n      const /** @type {?} */ value: any|any[] = objParams[key];\n      if (Array.isArray(value)) {\n        value.forEach((item: any) => this._appendParam(key, item, params));\n      } else {\n        this._appendParam(key, value, params);\n      }\n    });\n    return params;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?} params\n * @return {?}\n */\nprivate _appendParam(key: string, value: any, params: URLSearchParams): void {\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n    params.append(key, value);\n  }\n}\n\nfunction RequestOptions_tsickle_Closure_declarations() {\n/**\n * Http method with which to execute a {\\@link Request}.\n * Acceptable methods are defined in the {\\@link RequestMethod} enum.\n * @type {?}\n */\nRequestOptions.prototype.method;\n/**\n * {\\@link Headers} to be attached to a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.headers;\n/**\n * Body to be used when creating a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.body;\n/**\n * Url with which to perform a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.url;\n/**\n * Search parameters to be included in a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.params;\n/**\n * Enable use credentials for a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.withCredentials;\n/** @type {?} */\nRequestOptions.prototype.responseType;\n}\n\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n * \n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n * \n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n * \n * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n * \n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * import {App} from './myapp';\n * \n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n * \n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n * ```\n * \n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n * \n * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n * \n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * var options = new BaseRequestOptions();\n * var req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n * \n * \\@experimental\n */\nexport class BaseRequestOptions extends RequestOptions {\nconstructor() { super({method: RequestMethod.Get, headers: new Headers()}); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BaseRequestOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseRequestOptions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseRequestOptions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReadyState, RequestMethod, ResponseContentType, ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {Request} from './static_request';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Abstract class from which real backends are derived.\n * \n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class ConnectionBackend {\n/**\n * @abstract\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: any) {} }\n/**\n * Abstract class from which real connections are derived.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class Connection {\n  readyState: ReadyState;\n  request: Request;\n  response: any;  // TODO: generic of <Response>;\n}\n\nfunction Connection_tsickle_Closure_declarations() {\n/** @type {?} */\nConnection.prototype.readyState;\n/** @type {?} */\nConnection.prototype.request;\n/** @type {?} */\nConnection.prototype.response;\n}\n\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class XSRFStrategy {\n/**\n * @abstract\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request) {} }\n\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n *\n * @experimental\n */\nexport interface RequestOptionsArgs {\n  url?: string;\n  method?: string|RequestMethod;\n  /** @deprecated from 4.0.0. Use params instead. */\n  search?: string|URLSearchParams|{[key: string]: any | any[]};\n  params?: string|URLSearchParams|{[key: string]: any | any[]};\n  headers?: Headers;\n  body?: any;\n  withCredentials?: boolean;\n  responseType?: ResponseContentType;\n}\n\n/**\n * Required structure when constructing new Request();\n */\nexport interface RequestArgs extends RequestOptionsArgs { url: string; }\n\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n *\n * @experimental\n */\nexport type ResponseOptionsArgs = {\n  body?: string | Object | FormData | ArrayBuffer | Blob; status?: number; statusText?: string;\n  headers?: Headers;\n  type?: ResponseType;\n  url?: string;\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringToArrayBuffer} from './http_utils';\nimport {URLSearchParams} from './url_search_params';\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nexport abstract class Body {\n  /**\n   * @internal\n   */\n  protected _body: any;\n/**\n * Attempts to return body as parsed `JSON` object, or raises an exception.\n * @return {?}\n */\njson(): any {\n    if (typeof this._body === 'string') {\n      return JSON.parse( /** @type {?} */((<string>this._body)));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return JSON.parse(this.text());\n    }\n\n    return this._body;\n  }\n/**\n * Returns the body as a string, presuming `toString()` can be called on the response body.\n * @return {?}\n */\ntext(): string {\n    if (this._body instanceof URLSearchParams) {\n      return this._body.toString();\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */((<ArrayBuffer>this._body))));\n    }\n\n    if (this._body == null) {\n      return '';\n    }\n\n    if (typeof this._body === 'object') {\n      return JSON.stringify(this._body, null, 2);\n    }\n\n    return this._body.toString();\n  }\n/**\n * Return the body as an ArrayBuffer\n * @return {?}\n */\narrayBuffer(): ArrayBuffer {\n    if (this._body instanceof ArrayBuffer) {\n      return /** @type {?} */(( <ArrayBuffer>this._body));\n    }\n\n    return stringToArrayBuffer(this.text());\n  }\n/**\n * Returns the request's body as a Blob, assuming that body exists.\n * @return {?}\n */\nblob(): Blob {\n    if (this._body instanceof Blob) {\n      return /** @type {?} */(( <Blob>this._body));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return new Blob([this._body]);\n    }\n\n    throw new Error('The request body isn\\'t either a blob or an array buffer');\n  }\n}\n\nfunction Body_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nBody.prototype._body;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n * \n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n * \n * ### Example\n * \n * ```\n * import {Headers} from '\\@angular/http';\n * \n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n * \n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n * \n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n * \n * \\@experimental\n */\nexport class Headers {\n  /** @internal header names are lower case */\n  _headers: Map<string, string[]> = new Map();\n  /** @internal map lower case names to actual names */\n  _normalizedNames: Map<string, string> = new Map();\n/**\n * @param {?=} headers\n */\nconstructor(headers?: Headers|{[name: string]: any}) {\n    if (!headers) {\n      return;\n    }\n\n    if (headers instanceof Headers) {\n      headers.forEach((values: string[], name: string) => {\n        values.forEach(value => this.append(name, value));\n      });\n      return;\n    }\n\n    Object.keys(headers).forEach((name: string) => {\n      const values: string[] = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n      this.delete(name);\n      values.forEach(value => this.append(name, value));\n    });\n  }\n/**\n * Returns a new Headers instance from the given DOMString of Response Headers\n * @param {?} headersString\n * @return {?}\n */\nstatic fromResponseHeaderString(headersString: string): Headers {\n    const /** @type {?} */ headers = new Headers();\n\n    headersString.split('\\n').forEach(line => {\n      const /** @type {?} */ index = line.indexOf(':');\n      if (index > 0) {\n        const /** @type {?} */ name = line.slice(0, index);\n        const /** @type {?} */ value = line.slice(index + 1).trim();\n        headers.set(name, value);\n      }\n    });\n\n    return headers;\n  }\n/**\n * Appends a header to existing list of header values for a given header name.\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nappend(name: string, value: string): void {\n    const /** @type {?} */ values = this.getAll(name);\n\n    if (values === null) {\n      this.set(name, value);\n    } else {\n      values.push(value);\n    }\n  }\n/**\n * Deletes all header values for the given name.\n * @param {?} name\n * @return {?}\n */\ndelete (name: string): void {\n    const /** @type {?} */ lcName = name.toLowerCase();\n    this._normalizedNames.delete(lcName);\n    this._headers.delete(lcName);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (values: string[], name: string, headers: Map<string, string[]>) => void): void {\n    this._headers.forEach(\n        (values, lcName) => fn(values, this._normalizedNames.get(lcName), this._headers));\n  }\n/**\n * Returns first header that matches given name.\n * @param {?} name\n * @return {?}\n */\nget(name: string): string {\n    const /** @type {?} */ values = this.getAll(name);\n\n    if (values === null) {\n      return null;\n    }\n\n    return values.length > 0 ? values[0] : null;\n  }\n/**\n * Checks for existence of header by given name.\n * @param {?} name\n * @return {?}\n */\nhas(name: string): boolean { return this._headers.has(name.toLowerCase()); }\n/**\n * Returns the names of the headers\n * @return {?}\n */\nkeys(): string[] { return Array.from(this._normalizedNames.values()); }\n/**\n * Sets or overrides header value for given name.\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nset(name: string, value: string|string[]): void {\n    if (Array.isArray(value)) {\n      if (value.length) {\n        this._headers.set(name.toLowerCase(), [value.join(',')]);\n      }\n    } else {\n      this._headers.set(name.toLowerCase(), [value]);\n    }\n    this.mayBeSetNormalizedName(name);\n  }\n/**\n * Returns values of all headers.\n * @return {?}\n */\nvalues(): string[][] { return Array.from(this._headers.values()); }\n/**\n * @return {?}\n */\ntoJSON(): {[name: string]: any} {\n    const /** @type {?} */ serialized: {[name: string]: string[]} = {};\n\n    this._headers.forEach((values: string[], name: string) => {\n      const /** @type {?} */ split: string[] = [];\n      values.forEach(v => split.push(...v.split(',')));\n      serialized[this._normalizedNames.get(name)] = split;\n    });\n\n    return serialized;\n  }\n/**\n * Returns list of header values for a given name.\n * @param {?} name\n * @return {?}\n */\ngetAll(name: string): string[] {\n    return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n  }\n/**\n * This method is not implemented.\n * @return {?}\n */\nentries() { throw new Error('\"entries\" method is not implemented on Headers class'); }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate mayBeSetNormalizedName(name: string): void {\n    const /** @type {?} */ lcName = name.toLowerCase();\n\n    if (!this._normalizedNames.has(lcName)) {\n      this._normalizedNames.set(lcName, name);\n    }\n  }\n}\n\nfunction Headers_tsickle_Closure_declarations() {\n/**\n * \\@internal header names are lower case\n * @type {?}\n */\nHeaders.prototype._headers;\n/**\n * \\@internal map lower case names to actual names\n * @type {?}\n */\nHeaders.prototype._normalizedNames;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type RequestMethod = number;\nexport let RequestMethod: any = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\n\nexport type ReadyState = number;\nexport let ReadyState: any = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\n\nexport type ResponseType = number;\nexport let ResponseType: any = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\n\nexport type ContentType = number;\nexport let ContentType: any = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\n\nexport type ResponseContentType = number;\nexport let ResponseContentType: any = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RequestMethod} from './enums';\n/**\n * @param {?} method\n * @return {?}\n */\nexport function normalizeMethodName(method: string | RequestMethod): RequestMethod {\n  if (typeof method !== 'string') return method;\n\n  switch (method.toUpperCase()) {\n    case 'GET':\n      return RequestMethod.Get;\n    case 'POST':\n      return RequestMethod.Post;\n    case 'PUT':\n      return RequestMethod.Put;\n    case 'DELETE':\n      return RequestMethod.Delete;\n    case 'OPTIONS':\n      return RequestMethod.Options;\n    case 'HEAD':\n      return RequestMethod.Head;\n    case 'PATCH':\n      return RequestMethod.Patch;\n  }\n  throw new Error(`Invalid request method. The method \"${method}\" is not supported.`);\n}\n\nexport const /** @type {?} */ isSuccess = (status: number): boolean => (status >= 200 && status < 300);\n/**\n * @param {?} xhr\n * @return {?}\n */\nexport function getResponseURL(xhr: any): string {\n  if ('responseURL' in xhr) {\n    return xhr.responseURL;\n  }\n  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader('X-Request-URL');\n  }\n  return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer(input: String): ArrayBuffer {\n  const /** @type {?} */ view = new Uint16Array(input.length);\n  for (let /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n    view[i] = input.charCodeAt(i);\n  }\n  return view.buffer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams: string = ''): Map<string, string[]> {\n  const /** @type {?} */ map = new Map<string, string[]>();\n  if (rawParams.length > 0) {\n    const /** @type {?} */ params: string[] = rawParams.split('&');\n    params.forEach((param: string) => {\n      const /** @type {?} */ eqIdx = param.indexOf('=');\n      const [key, val]: string[] =\n          eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)];\n      const /** @type {?} */ list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * \\@experimental \n * \n */\nexport class QueryEncoder {\n/**\n * @param {?} k\n * @return {?}\n */\nencodeKey(k: string): string { return standardEncoding(k); }\n/**\n * @param {?} v\n * @return {?}\n */\nencodeValue(v: string): string { return standardEncoding(v); }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v: string): string {\n  return encodeURIComponent(v)\n      .replace(/%40/gi, '@')\n      .replace(/%3A/gi, ':')\n      .replace(/%24/gi, '$')\n      .replace(/%2C/gi, ',')\n      .replace(/%3B/gi, ';')\n      .replace(/%2B/gi, '+')\n      .replace(/%3D/gi, '=')\n      .replace(/%3F/gi, '?')\n      .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n * \n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n * \n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n * \n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n * \n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n * \n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n * \n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nexport class URLSearchParams {\n  paramsMap: Map<string, string[]>;\n/**\n * @param {?=} rawParams\n * @param {?=} queryEncoder\n */\nconstructor(\npublic rawParams: string = '',\nprivate queryEncoder: QueryEncoder = new QueryEncoder()) {\n    this.paramsMap = paramParser(rawParams);\n  }\n/**\n * @return {?}\n */\nclone(): URLSearchParams {\n    const /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n    clone.appendAll(this);\n    return clone;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\nhas(param: string): boolean { return this.paramsMap.has(param); }\n/**\n * @param {?} param\n * @return {?}\n */\nget(param: string): string {\n    const /** @type {?} */ storedParam = this.paramsMap.get(param);\n\n    return Array.isArray(storedParam) ? storedParam[0] : null;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ngetAll(param: string): string[] { return this.paramsMap.get(param) || []; }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nset(param: string, val: string) {\n    if (val === void 0 || val === null) {\n      this.delete(param);\n      return;\n    }\n    const /** @type {?} */ list = this.paramsMap.get(param) || [];\n    list.length = 0;\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nsetAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      list.length = 0;\n      list.push(value[0]);\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nappend(param: string, val: string): void {\n    if (val === void 0 || val === null) return;\n    const /** @type {?} */ list = this.paramsMap.get(param) || [];\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nappendAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      for (let /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nreplaceAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      list.length = 0;\n      for (let /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ paramsList: string[] = [];\n    this.paramsMap.forEach((values, k) => {\n      values.forEach(\n          v => paramsList.push(\n              this.queryEncoder.encodeKey(k) + '=' + this.queryEncoder.encodeValue(v)));\n    });\n    return paramsList.join('&');\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ndelete (param: string): void { this.paramsMap.delete(param); }\n}\n\nfunction URLSearchParams_tsickle_Closure_declarations() {\n/** @type {?} */\nURLSearchParams.prototype.paramsMap;\n/** @type {?} */\nURLSearchParams.prototype.rawParams;\n/** @type {?} */\nURLSearchParams.prototype.queryEncoder;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Body} from './body';\nimport {ContentType, RequestMethod, ResponseContentType} from './enums';\nimport {Headers} from './headers';\nimport {normalizeMethodName} from './http_utils';\nimport {RequestArgs} from './interfaces';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Creates `Request` instances from provided values.\n * \n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n * \n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n * \n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n * \n * \\@Injectable() \n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n * \n * \\@experimental\n */\nexport class Request extends Body {\n  /**\n   * Http method with which to perform the request.\n   */\n  method: RequestMethod;\n  /**\n   * {@link Headers} instance\n   */\n  headers: Headers;\n  /** Url of the remote resource */\n  url: string;\nprivate contentType: ContentType;\n  /** Enable use credentials */\n  withCredentials: boolean;\n  /** Buffer to store the response */\n  responseType: ResponseContentType;\n/**\n * @param {?} requestOptions\n */\nconstructor(requestOptions: RequestArgs) {\n    super();\n    // TODO: assert that url is present\n    const url = requestOptions.url;\n    this.url = requestOptions.url;\n    if (requestOptions.params) {\n      const params = requestOptions.params.toString();\n      if (params.length > 0) {\n        let prefix = '?';\n        if (this.url.indexOf('?') != -1) {\n          prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n        }\n        // TODO: just delete search-query-looking string in url?\n        this.url = url + prefix + params;\n      }\n    }\n    this._body = requestOptions.body;\n    this.method = normalizeMethodName(requestOptions.method);\n    // TODO(jeffbcross): implement behavior\n    // Defaults to 'omit', consistent with browser\n    this.headers = new Headers(requestOptions.headers);\n    this.contentType = this.detectContentType();\n    this.withCredentials = requestOptions.withCredentials;\n    this.responseType = requestOptions.responseType;\n  }\n/**\n * Returns the content type enum based on header options.\n * @return {?}\n */\ndetectContentType(): ContentType {\n    switch (this.headers.get('content-type')) {\n      case 'application/json':\n        return ContentType.JSON;\n      case 'application/x-www-form-urlencoded':\n        return ContentType.FORM;\n      case 'multipart/form-data':\n        return ContentType.FORM_DATA;\n      case 'text/plain':\n      case 'text/html':\n        return ContentType.TEXT;\n      case 'application/octet-stream':\n        return this._body instanceof ArrayBuffer ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n      default:\n        return this.detectContentTypeFromBody();\n    }\n  }\n/**\n * Returns the content type of request's body based on its type.\n * @return {?}\n */\ndetectContentTypeFromBody(): ContentType {\n    if (this._body == null) {\n      return ContentType.NONE;\n    } else if (this._body instanceof URLSearchParams) {\n      return ContentType.FORM;\n    } else if (this._body instanceof FormData) {\n      return ContentType.FORM_DATA;\n    } else if (this._body instanceof Blob) {\n      return ContentType.BLOB;\n    } else if (this._body instanceof ArrayBuffer) {\n      return ContentType.ARRAY_BUFFER;\n    } else if (this._body && typeof this._body === 'object') {\n      return ContentType.JSON;\n    } else {\n      return ContentType.TEXT;\n    }\n  }\n/**\n * Returns the request's body according to its type. If body is undefined, return\n * null.\n * @return {?}\n */\ngetBody(): any {\n    switch (this.contentType) {\n      case ContentType.JSON:\n        return this.text();\n      case ContentType.FORM:\n        return this.text();\n      case ContentType.FORM_DATA:\n        return this._body;\n      case ContentType.TEXT:\n        return this.text();\n      case ContentType.BLOB:\n        return this.blob();\n      case ContentType.ARRAY_BUFFER:\n        return this.arrayBuffer();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction Request_tsickle_Closure_declarations() {\n/**\n * Http method with which to perform the request.\n * @type {?}\n */\nRequest.prototype.method;\n/**\n * {\\@link Headers} instance\n * @type {?}\n */\nRequest.prototype.headers;\n/**\n * Url of the remote resource\n * @type {?}\n */\nRequest.prototype.url;\n/**\n * Type of the request body *\n * @type {?}\n */\nRequest.prototype.contentType;\n/**\n * Enable use credentials\n * @type {?}\n */\nRequest.prototype.withCredentials;\n/**\n * Buffer to store the response\n * @type {?}\n */\nRequest.prototype.responseType;\n}\n\n\nconst /** @type {?} */ noop = function() {};\nconst /** @type {?} */ w = typeof window == 'object' ? window : noop;\nconst /** @type {?} */ FormData = ( /** @type {?} */((w as any)) /** TODO #9100 */)['FormData'] || noop;\nconst /** @type {?} */ Blob = ( /** @type {?} */((w as any)) /** TODO #9100 */)['Blob'] || noop;\nexport const /** @type {?} */ ArrayBuffer = ( /** @type {?} */((w as any)) /** TODO #9100 */)['ArrayBuffer'] || noop;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {RequestMethod} from './enums';\nimport {ConnectionBackend, RequestOptionsArgs} from './interfaces';\nimport {Request} from './static_request';\nimport {Response} from './static_response';\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend: ConnectionBackend, request: Request): Observable<Response> {\n  return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(\n    defaultOpts: BaseRequestOptions, providedOpts: RequestOptionsArgs, method: RequestMethod,\n    url: string): RequestOptions {\n  const /** @type {?} */ newOptions = defaultOpts;\n  if (providedOpts) {\n    // Hack so Dart can used named parameters\n    return newOptions.merge(new RequestOptions({\n      method: providedOpts.method || method,\n      url: providedOpts.url || url,\n      search: providedOpts.search,\n      params: providedOpts.params,\n      headers: providedOpts.headers,\n      body: providedOpts.body,\n      withCredentials: providedOpts.withCredentials,\n      responseType: providedOpts.responseType\n    }));\n  }\n\n  return newOptions.merge(new RequestOptions({method, url}));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n * \n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n * \n * ### Example\n * \n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({ \n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n * \n * \n * ### Example\n * \n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n * \n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n * \n * ### Example\n * \n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n * \n * \\@experimental\n */\nexport class Http {\n/**\n * @param {?} _backend\n * @param {?} _defaultOptions\n */\nconstructor(protected _backend: ConnectionBackend, protected _defaultOptions: RequestOptions) {}\n/**\n * Performs any type of http request. First argument is required, and can either be a url or\n * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n * object can be provided as the 2nd argument. The options object will be merged with the values\n * of {\\@link BaseRequestOptions} before performing the request.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string|Request, options?: RequestOptionsArgs): Observable<Response> {\n    let /** @type {?} */ responseObservable: any;\n    if (typeof url === 'string') {\n      responseObservable = httpRequest(\n          this._backend,\n          new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */(( <string>url)))));\n    } else if (url instanceof Request) {\n      responseObservable = httpRequest(this._backend, url);\n    } else {\n      throw new Error('First argument must be a url string or Request instance.');\n    }\n    return responseObservable;\n  }\n/**\n * Performs a request with `get` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nget(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n  }\n/**\n * Performs a request with `post` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npost(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Post,\n        url)));\n  }\n/**\n * Performs a request with `put` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\nput(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Put,\n        url)));\n  }\n/**\n * Performs a request with `delete` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\ndelete (url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n  }\n/**\n * Performs a request with `patch` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npatch(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Patch,\n        url)));\n  }\n/**\n * Performs a request with `head` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nhead(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n  }\n/**\n * Performs a request with `options` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\noptions(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConnectionBackend, },\n{type: RequestOptions, },\n];\n}\n\nfunction Http_tsickle_Closure_declarations() {\n/** @type {?} */\nHttp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttp.ctorParameters;\n/** @type {?} */\nHttp.prototype._backend;\n/** @type {?} */\nHttp.prototype._defaultOptions;\n}\n\n/**\n * \\@experimental\n */\nexport class Jsonp extends Http {\n/**\n * @param {?} backend\n * @param {?} defaultOptions\n */\nconstructor(backend: ConnectionBackend, defaultOptions: RequestOptions) {\n    super(backend, defaultOptions);\n  }\n/**\n * Performs any type of http request. First argument is required, and can either be a url or\n * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n * object can be provided as the 2nd argument. The options object will be merged with the values\n * of {\\@link BaseRequestOptions} before performing the request.\n * \n * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n * supported by all current browsers. Because JSONP creates a `<script>` element with\n * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n * source could expose your application to XSS risks. Data exposed by JSONP may also be\n * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n * future security issues (e.g. content sniffing).  For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string|Request, options?: RequestOptionsArgs): Observable<Response> {\n    let /** @type {?} */ responseObservable: any;\n    if (typeof url === 'string') {\n      url =\n          new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */(( <string>url))));\n    }\n    if (url instanceof Request) {\n      if (url.method !== RequestMethod.Get) {\n        throw new Error('JSONP requests must use GET request method.');\n      }\n      responseObservable = httpRequest(this._backend, url);\n    } else {\n      throw new Error('First argument must be a url string or Request instance.');\n    }\n    return responseObservable;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConnectionBackend, },\n{type: RequestOptions, },\n];\n}\n\nfunction Jsonp_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonp.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core/src/linker/ng_module_factory';\nimport * as import1 from './search.module';\nimport * as import2 from '@angular/common/src/common_module';\nimport * as import3 from '@angular/http/src/http_module';\nimport * as import4 from '@angular/router/src/router_module';\nimport * as import5 from '@angular/common/src/localization';\nimport * as import6 from '@angular/http/src/backends/browser_xhr';\nimport * as import7 from '@angular/http/src/base_response_options';\nimport * as import8 from '@angular/http/src/backends/xhr_backend';\nimport * as import9 from '@angular/http/src/base_request_options';\nimport * as import10 from '@angular/http/src/backends/browser_jsonp';\nimport * as import11 from '@angular/http/src/backends/jsonp_backend';\nimport * as import12 from '@angular/core/src/di/injector';\nimport * as import13 from './search.ngfactory';\nimport * as import14 from '@angular/core/src/i18n/tokens';\nimport * as import15 from './search';\nimport * as import16 from '@angular/http/src/interfaces';\nimport * as import17 from '@angular/http/src/http';\nimport * as import18 from '@angular/router/src/router_config_loader';\nclass SearchModuleInjector extends import0.NgModuleInjector<import1.SearchModule> {\n  _CommonModule_0:import2.CommonModule;\n  _HttpModule_1:import3.HttpModule;\n  _JsonpModule_2:import3.JsonpModule;\n  _RouterModule_3:import4.RouterModule;\n  _SearchModule_4:import1.SearchModule;\n  __NgLocalization_5:import5.NgLocaleLocalization;\n  __BrowserXhr_6:import6.BrowserXhr;\n  __ResponseOptions_7:import7.BaseResponseOptions;\n  __XSRFStrategy_8:any;\n  __XHRBackend_9:import8.XHRBackend;\n  __RequestOptions_10:import9.BaseRequestOptions;\n  __Http_11:any;\n  __BrowserJsonp_12:import10.BrowserJsonp;\n  __JSONPBackend_13:import11.JSONPBackend_;\n  __Jsonp_14:any;\n  __ROUTES_15:any[];\n  constructor(parent:import12.Injector) {\n    super(parent,[import13.SearchNgFactory],([] as any[]));\n  }\n  get _NgLocalization_5():import5.NgLocaleLocalization {\n    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import5.NgLocaleLocalization(this.parent.get(import14.LOCALE_ID))); }\n    return this.__NgLocalization_5;\n  }\n  get _BrowserXhr_6():import6.BrowserXhr {\n    if ((this.__BrowserXhr_6 == null)) { (this.__BrowserXhr_6 = new import6.BrowserXhr()); }\n    return this.__BrowserXhr_6;\n  }\n  get _ResponseOptions_7():import7.BaseResponseOptions {\n    if ((this.__ResponseOptions_7 == null)) { (this.__ResponseOptions_7 = new import7.BaseResponseOptions()); }\n    return this.__ResponseOptions_7;\n  }\n  get _XSRFStrategy_8():any {\n    if ((this.__XSRFStrategy_8 == null)) { (this.__XSRFStrategy_8 = import3._createDefaultCookieXSRFStrategy()); }\n    return this.__XSRFStrategy_8;\n  }\n  get _XHRBackend_9():import8.XHRBackend {\n    if ((this.__XHRBackend_9 == null)) { (this.__XHRBackend_9 = new import8.XHRBackend(this._BrowserXhr_6,this._ResponseOptions_7,this._XSRFStrategy_8)); }\n    return this.__XHRBackend_9;\n  }\n  get _RequestOptions_10():import9.BaseRequestOptions {\n    if ((this.__RequestOptions_10 == null)) { (this.__RequestOptions_10 = new import9.BaseRequestOptions()); }\n    return this.__RequestOptions_10;\n  }\n  get _Http_11():any {\n    if ((this.__Http_11 == null)) { (this.__Http_11 = import3.httpFactory(this._XHRBackend_9,this._RequestOptions_10)); }\n    return this.__Http_11;\n  }\n  get _BrowserJsonp_12():import10.BrowserJsonp {\n    if ((this.__BrowserJsonp_12 == null)) { (this.__BrowserJsonp_12 = new import10.BrowserJsonp()); }\n    return this.__BrowserJsonp_12;\n  }\n  get _JSONPBackend_13():import11.JSONPBackend_ {\n    if ((this.__JSONPBackend_13 == null)) { (this.__JSONPBackend_13 = new import11.JSONPBackend_(this._BrowserJsonp_12,this._ResponseOptions_7)); }\n    return this.__JSONPBackend_13;\n  }\n  get _Jsonp_14():any {\n    if ((this.__Jsonp_14 == null)) { (this.__Jsonp_14 = import3.jsonpFactory(this._JSONPBackend_13,this._RequestOptions_10)); }\n    return this.__Jsonp_14;\n  }\n  get _ROUTES_15():any[] {\n        if ((this.__ROUTES_15 == null)) { (this.__ROUTES_15 = [[{\n          path: '',\n          component: import15.Search\n        }\n    ]]); }\n    return this.__ROUTES_15;\n  }\n  createInternal():import1.SearchModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._HttpModule_1 = new import3.HttpModule();\n    this._JsonpModule_2 = new import3.JsonpModule();\n    this._RouterModule_3 = new import4.RouterModule(this.parent.get(import4.ROUTER_FORROOT_GUARD,(null as any)));\n    this._SearchModule_4 = new import1.SearchModule();\n    return this._SearchModule_4;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.HttpModule)) { return this._HttpModule_1; }\n    if ((token === import3.JsonpModule)) { return this._JsonpModule_2; }\n    if ((token === import4.RouterModule)) { return this._RouterModule_3; }\n    if ((token === import1.SearchModule)) { return this._SearchModule_4; }\n    if ((token === import5.NgLocalization)) { return this._NgLocalization_5; }\n    if ((token === import6.BrowserXhr)) { return this._BrowserXhr_6; }\n    if ((token === import7.ResponseOptions)) { return this._ResponseOptions_7; }\n    if ((token === import16.XSRFStrategy)) { return this._XSRFStrategy_8; }\n    if ((token === import8.XHRBackend)) { return this._XHRBackend_9; }\n    if ((token === import9.RequestOptions)) { return this._RequestOptions_10; }\n    if ((token === import17.Http)) { return this._Http_11; }\n    if ((token === import10.BrowserJsonp)) { return this._BrowserJsonp_12; }\n    if ((token === import11.JSONPBackend)) { return this._JSONPBackend_13; }\n    if ((token === import17.Jsonp)) { return this._Jsonp_14; }\n    if ((token === import18.ROUTES)) { return this._ROUTES_15; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const SearchModuleNgFactory:import0.NgModuleFactory<import1.SearchModule> = new import0.NgModuleFactory<any>(SearchModuleInjector,import1.SearchModule);"]}