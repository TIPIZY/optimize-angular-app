{"version":3,"sources":["../../app/search/search.module.ts","../../app/search/search.ngfactory.ts","../../node_modules/@angular/http/@angular/http.es5.js","../../app/search/search.ts","../../app/search/search.module.ngfactory.ts"],"names":["routes","path","component","search_1","Search","SearchModule","__decorate","core_1","NgModule","imports","common_1","CommonModule","http_1","HttpModule","JsonpModule","router_1","RouterModule","forChild","declarations","View_Search_1","import0","ɵvid","ɵeld","ɵted","check","view","context","$implicit","View_Search_0","eventName","$event","allowDefault","comp","search","ɵnov","value","ɵand","ɵdid","import2","NgForOf","ViewContainerRef","TemplateRef","IterableDiffers","ngForOf","pages","View_Search_Host_0","RenderType_Search","import1","import3","Http","styles_Search","exports_1","ɵcrt","encapsulation","styles","data","RenderType_Search_Host","SearchNgFactory","ɵccf","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","Uint16Array","strLen","charCodeAt","buffer","paramParser","rawParams","arguments","undefined","map","Map","split","forEach","param","eqIdx","indexOf","_ref2","slice","_ref3","_slicedToArray","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_typeof","_jsonpConnections","JSONP_HOME","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","url","newOptions","merge","RequestOptions","params","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","jsonpFactory","jsonpBackend","Jsonp","Injectable","Version","Observable","ɵgetDOM","Symbol","iterator","obj","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","err","_createClass","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","BrowserXhr","this","XMLHttpRequest","decorators","type","ctorParameters","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","_this","_headers","_normalizedNames","values","name","append","keys","delete","getAll","lcName","toLowerCase","fn","_this2","has","join","mayBeSetNormalizedName","_this3","serialized","apply","headersString","line","index","trim","ResponseOptions","_ref","status","statusText","options","BaseResponseOptions","_ResponseOptions","getPrototypeOf","ConnectionBackend","Connection","XSRFStrategy","req","isSuccess","QueryEncoder","k","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","searchParams","_this5","_this6","_this7","_this8","paramsList","encodeKey","encodeValue","Body","_body","parse","text","toString","String","fromCharCode","stringify","Response","_Body","responseOptions","_this9","ok","_nextRequestId","BrowserJsonp","node","document","createElement","src","id","connection","appendChild","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","JSONPConnection_","_JSONPConnection","_dom","baseResponseOptions","_this10","_finished","responseObserver","readyState","_id","nextRequestID","exposeConnection","callback","requestCallback","lastIndexOf","substring","script","_script","build","onLoad","event","cleanup","_responseOptions","error","_responseData","complete","onError","message","addEventListener","send","removeEventListener","removeConnection","JSONPBackend","_ConnectionBackend","JSONPBackend_","_JSONPBackend","_browserJSONP","_baseResponseOptions","_this12","XSSI_PREFIX","XHRConnection","browserXHR","_this13","_xhr","open","responseText","fromResponseHeaderString","setDetectedContentType","setRequestHeader","getBody","abort","contentType","blob","_cookieName","_headerName","xsrfToken","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","configureRequest","_ref4","_mergeSearchParams","_parseParams","_this14","objParams","item","_appendParam","BaseRequestOptions","_RequestOptions","Request","_Body2","_this16","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","arrayBuffer","noop","_backend","_defaultOptions","responseObservable","_options","_Http","defaultOptions","args","providers","provide","useFactory","deps","useClass","VERSION","http","wikiUrl","Content-Type","map_1","json","subscribe","raw","title","Component","selector","template","__metadata","SearchModuleInjector","_super","parent","import5","__extends","__NgLocalization_5","NgLocaleLocalization","LOCALE_ID","__BrowserXhr_6","__ResponseOptions_7","__XSRFStrategy_8","ɵb","__XHRBackend_9","_BrowserXhr_6","_ResponseOptions_7","_XSRFStrategy_8","__RequestOptions_10","__Http_11","ɵc","_XHRBackend_9","_RequestOptions_10","__ɵg_12","ɵg","__JSONPBackend_13","ɵa","_ɵg_12","__Jsonp_14","ɵd","_JSONPBackend_13","__ROUTES_15","import6","createInternal","_CommonModule_0","_HttpModule_1","_JsonpModule_2","_RouterModule_3","import4","_SearchModule_4","getInternal","token","notFoundResult","NgLocalization","_NgLocalization_5","_Http_11","_Jsonp_14","ROUTES","_ROUTES_15","destroyInternal","ɵNgModuleInjector","SearchModuleNgFactory","NgModuleFactory"],"mappings":"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","file":"search.min.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HttpModule, JsonpModule} from '@angular/http';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {Search} from './search';\n\n\nconst routes: Routes = [\n  {path: '', component: Search},\n];\n\n@NgModule({\n  imports: [CommonModule, HttpModule, JsonpModule, RouterModule.forChild(routes)],\n  declarations: [Search]\n})\nexport class SearchModule {}","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './search';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nconst styles_Search:any[] = ([] as any[]);\nexport const RenderType_Search:import0.RendererTypeV2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_Search,\n  data: {}\n}\n);\nfunction View_Search_1():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    )\n  ]\n  ,(null as any),(check,view) => {\n    var comp:any = view.component;\n    const currVal_0:any = view.context.$implicit;\n    check(view,1,0,currVal_0);\n  });\n}\nexport function View_Search_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵeld(0,(null as any),(null as any),12,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵeld(0,(null as any),(null as any),1,'h2',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,[[\n        'foo',\n        1\n      ]\n    ],(null as any),0,'input',[\n      [\n        'placeholder',\n        'Search on Wikipedia'\n      ]\n      ,\n      [\n        'type',\n        'text'\n      ]\n\n    ]\n    ,(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,(null as any),(null as any),1,'button',([] as any[]),(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(view,eventName,$event) => {\n      var allowDefault:boolean = true;\n      var comp:import1.Search = view.component;\n      if (('click' === eventName)) {\n        const pd_0:any = ((<any>comp.search(import0.ɵnov(view,6).value)) !== false);\n        allowDefault = (pd_0 && allowDefault);\n      }\n      return allowDefault;\n    },(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_Search_1),\n    import0.ɵdid(401408,(null as any),0,import2.NgForOf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef,\n      import0.IterableDiffers\n    ]\n      ,{ngForOf: [\n        0,\n        'ngForOf'\n      ]\n    },(null as any)),\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵted((null as any),['\\n  '])\n  ]\n  ,(check,view) => {\n    var comp:import1.Search = view.component;\n    const currVal_0:any = comp.pages;\n    check(view,12,0,currVal_0);\n  },(null as any));\n}\nconst RenderType_Search_Host:import0.RendererTypeV2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: ([] as any[]),\n  data: {}\n}\n);\nfunction View_Search_Host_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'search',([] as any[]),(null as any),(null as any),(null as any),View_Search_0,RenderType_Search),\n    import0.ɵdid(24576,(null as any),0,import1.Search,[import3.Http],(null as any),(null as any))\n  ]\n  ,(null as any),(null as any));\n}\nexport const SearchNgFactory:import0.ComponentFactory<import1.Search> = import0.ɵccf('search',import1.Search,View_Search_Host_0);","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Angular v4.0.0-rc.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\n\nvar BrowserXhr = function () {\n    function BrowserXhr() {\n        _classCallCheck(this, BrowserXhr);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(BrowserXhr, [{\n        key: 'build',\n        value: function build() {\n            return new XMLHttpRequest();\n        }\n    }]);\n\n    return BrowserXhr;\n}();\n\nBrowserXhr.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBrowserXhr.ctorParameters = function () {\n    return [];\n};\n\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\n\nvar Headers = function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n\n        _classCallCheck(this, Headers);\n\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) {\n                    return _this.append(name, value);\n                });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) {\n                return _this.append(name, value);\n            });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n\n\n    _createClass(Headers, [{\n        key: 'append',\n\n        /**\n         * Appends a header to existing list of header values for a given header name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        value: function append(name, value) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                this.set(name, value);\n            } else {\n                values.push(value);\n            }\n        }\n        /**\n         * Deletes all header values for the given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            this._normalizedNames.delete(lcName);\n            this._headers.delete(lcName);\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n\n    }, {\n        key: 'forEach',\n        value: function forEach(fn) {\n            var _this2 = this;\n\n            this._headers.forEach(function (values, lcName) {\n                return fn(values, _this2._normalizedNames.get(lcName), _this2._headers);\n            });\n        }\n        /**\n         * Returns first header that matches given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(name) {\n            var /** @type {?} */values = this.getAll(name);\n            if (values === null) {\n                return null;\n            }\n            return values.length > 0 ? values[0] : null;\n        }\n        /**\n         * Checks for existence of header by given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(name) {\n            return this._headers.has(name.toLowerCase());\n        }\n        /**\n         * Returns the names of the headers\n         * @return {?}\n         */\n\n    }, {\n        key: 'keys',\n        value: function keys() {\n            return Array.from(this._normalizedNames.values());\n        }\n        /**\n         * Sets or overrides header value for given name.\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(name, value) {\n            if (Array.isArray(value)) {\n                if (value.length) {\n                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n                }\n            } else {\n                this._headers.set(name.toLowerCase(), [value]);\n            }\n            this.mayBeSetNormalizedName(name);\n        }\n        /**\n         * Returns values of all headers.\n         * @return {?}\n         */\n\n    }, {\n        key: 'values',\n        value: function values() {\n            return Array.from(this._headers.values());\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toJSON',\n        value: function toJSON() {\n            var _this3 = this;\n\n            var /** @type {?} */serialized = {};\n            this._headers.forEach(function (values, name) {\n                var /** @type {?} */split = [];\n                values.forEach(function (v) {\n                    return split.push.apply(split, _toConsumableArray(v.split(',')));\n                });\n                serialized[_this3._normalizedNames.get(name)] = split;\n            });\n            return serialized;\n        }\n        /**\n         * Returns list of header values for a given name.\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(name) {\n            return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n        }\n        /**\n         * This method is not implemented.\n         * @return {?}\n         */\n\n    }, {\n        key: 'entries',\n        value: function entries() {\n            throw new Error('\"entries\" method is not implemented on Headers class');\n        }\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n\n    }, {\n        key: 'mayBeSetNormalizedName',\n        value: function mayBeSetNormalizedName(name) {\n            var /** @type {?} */lcName = name.toLowerCase();\n            if (!this._normalizedNames.has(lcName)) {\n                this._normalizedNames.set(lcName, name);\n            }\n        }\n    }], [{\n        key: 'fromResponseHeaderString',\n        value: function fromResponseHeaderString(headersString) {\n            var /** @type {?} */headers = new Headers();\n            headersString.split('\\n').forEach(function (line) {\n                var /** @type {?} */index = line.indexOf(':');\n                if (index > 0) {\n                    var /** @type {?} */name = line.slice(0, index);\n                    var /** @type {?} */value = line.slice(index + 1).trim();\n                    headers.set(name, value);\n                }\n            });\n            return headers;\n        }\n    }]);\n\n    return Headers;\n}();\n\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\n\n\nvar ResponseOptions = function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            body = _ref.body,\n            status = _ref.status,\n            headers = _ref.headers,\n            statusText = _ref.statusText,\n            type = _ref.type,\n            url = _ref.url;\n\n        _classCallCheck(this, ResponseOptions);\n\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(ResponseOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new ResponseOptions({\n                body: options && options.body != null ? options.body : this.body,\n                status: options && options.status != null ? options.status : this.status,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n                type: options && options.type != null ? options.type : this.type,\n                url: options && options.url != null ? options.url : this.url\n            });\n        }\n    }]);\n\n    return ResponseOptions;\n}();\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseResponseOptions = function (_ResponseOptions) {\n    _inherits(BaseResponseOptions, _ResponseOptions);\n\n    function BaseResponseOptions() {\n        _classCallCheck(this, BaseResponseOptions);\n\n        return _possibleConstructorReturn(this, (BaseResponseOptions.__proto__ || Object.getPrototypeOf(BaseResponseOptions)).call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }));\n    }\n\n    return BaseResponseOptions;\n}(ResponseOptions);\n\nBaseResponseOptions.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBaseResponseOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\n\nvar ConnectionBackend = function () {\n    function ConnectionBackend() {\n        _classCallCheck(this, ConnectionBackend);\n    }\n\n    _createClass(ConnectionBackend, [{\n        key: 'createConnection',\n\n        /**\n         * @abstract\n         * @param {?} request\n         * @return {?}\n         */\n        value: function createConnection(request) {}\n    }]);\n\n    return ConnectionBackend;\n}();\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar Connection = function Connection() {\n    _classCallCheck(this, Connection);\n};\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar XSRFStrategy = function () {\n    function XSRFStrategy() {\n        _classCallCheck(this, XSRFStrategy);\n    }\n\n    _createClass(XSRFStrategy, [{\n        key: 'configureRequest',\n\n        /**\n         * @abstract\n         * @param {?} req\n         * @return {?}\n         */\n        value: function configureRequest(req) {}\n    }]);\n\n    return XSRFStrategy;\n}();\n\n/**\n * @param {?} method\n * @return {?}\n */\n\n\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string') return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error('Invalid request method. The method \"' + method + '\" is not supported.');\n}\nvar /** @type {?} */isSuccess = function isSuccess(status) {\n    return status >= 200 && status < 300;\n};\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */view = new Uint16Array(input.length);\n    for (var /** @type {?} */i = 0, /** @type {?} */strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser() {\n    var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var /** @type {?} */map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */eqIdx = param.indexOf('=');\n\n            var _ref2 = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)],\n                _ref3 = _slicedToArray(_ref2, 2),\n                key = _ref3[0],\n                val = _ref3[1];\n\n            var /** @type {?} */list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\n\nvar QueryEncoder = function () {\n    function QueryEncoder() {\n        _classCallCheck(this, QueryEncoder);\n    }\n\n    _createClass(QueryEncoder, [{\n        key: 'encodeKey',\n\n        /**\n         * @param {?} k\n         * @return {?}\n         */\n        value: function encodeKey(k) {\n            return standardEncoding(k);\n        }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n\n    }, {\n        key: 'encodeValue',\n        value: function encodeValue(v) {\n            return standardEncoding(v);\n        }\n    }]);\n\n    return QueryEncoder;\n}();\n/**\n * @param {?} v\n * @return {?}\n */\n\n\nfunction standardEncoding(v) {\n    return encodeURIComponent(v).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/gi, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%2B/gi, '+').replace(/%3D/gi, '=').replace(/%3F/gi, '?').replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\n\nvar URLSearchParams = function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams() {\n        var rawParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var queryEncoder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new QueryEncoder();\n\n        _classCallCheck(this, URLSearchParams);\n\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(URLSearchParams, [{\n        key: 'clone',\n        value: function clone() {\n            var /** @type {?} */clone = new URLSearchParams('', this.queryEncoder);\n            clone.appendAll(this);\n            return clone;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(param) {\n            return this.paramsMap.has(param);\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(param) {\n            var /** @type {?} */storedParam = this.paramsMap.get(param);\n            return Array.isArray(storedParam) ? storedParam[0] : null;\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'getAll',\n        value: function getAll(param) {\n            return this.paramsMap.get(param) || [];\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'set',\n        value: function set(param, val) {\n            if (val === void 0 || val === null) {\n                this.delete(param);\n                return;\n            }\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'setAll',\n        value: function setAll(searchParams) {\n            var _this5 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this5.paramsMap.get(param) || [];\n                list.length = 0;\n                list.push(value[0]);\n                _this5.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} param\n         * @param {?} val\n         * @return {?}\n         */\n\n    }, {\n        key: 'append',\n        value: function append(param, val) {\n            if (val === void 0 || val === null) return;\n            var /** @type {?} */list = this.paramsMap.get(param) || [];\n            list.push(val);\n            this.paramsMap.set(param, list);\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'appendAll',\n        value: function appendAll(searchParams) {\n            var _this6 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this6.paramsMap.get(param) || [];\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this6.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @param {?} searchParams\n         * @return {?}\n         */\n\n    }, {\n        key: 'replaceAll',\n        value: function replaceAll(searchParams) {\n            var _this7 = this;\n\n            searchParams.paramsMap.forEach(function (value, param) {\n                var /** @type {?} */list = _this7.paramsMap.get(param) || [];\n                list.length = 0;\n                for (var /** @type {?} */i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this7.paramsMap.set(param, list);\n            });\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var _this8 = this;\n\n            var /** @type {?} */paramsList = [];\n            this.paramsMap.forEach(function (values, k) {\n                values.forEach(function (v) {\n                    return paramsList.push(_this8.queryEncoder.encodeKey(k) + '=' + _this8.queryEncoder.encodeValue(v));\n                });\n            });\n            return paramsList.join('&');\n        }\n        /**\n         * @param {?} param\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(param) {\n            this.paramsMap.delete(param);\n        }\n    }]);\n\n    return URLSearchParams;\n}();\n\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\n\n\nvar Body = function () {\n    function Body() {\n        _classCallCheck(this, Body);\n    }\n\n    _createClass(Body, [{\n        key: 'json',\n\n        /**\n         * Attempts to return body as parsed `JSON` object, or raises an exception.\n         * @return {?}\n         */\n        value: function json() {\n            if (typeof this._body === 'string') {\n                return JSON.parse( /** @type {?} */this._body);\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return JSON.parse(this.text());\n            }\n            return this._body;\n        }\n        /**\n         * Returns the body as a string, presuming `toString()` can be called on the response body.\n         * @return {?}\n         */\n\n    }, {\n        key: 'text',\n        value: function text() {\n            if (this._body instanceof URLSearchParams) {\n                return this._body.toString();\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */this._body));\n            }\n            if (this._body == null) {\n                return '';\n            }\n            if (_typeof(this._body) === 'object') {\n                return JSON.stringify(this._body, null, 2);\n            }\n            return this._body.toString();\n        }\n        /**\n         * Return the body as an ArrayBuffer\n         * @return {?}\n         */\n\n    }, {\n        key: 'arrayBuffer',\n        value: function arrayBuffer() {\n            if (this._body instanceof ArrayBuffer) {\n                return this._body;\n            }\n            return stringToArrayBuffer(this.text());\n        }\n        /**\n         * Returns the request's body as a Blob, assuming that body exists.\n         * @return {?}\n         */\n\n    }, {\n        key: 'blob',\n        value: function blob() {\n            if (this._body instanceof Blob) {\n                return this._body;\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return new Blob([this._body]);\n            }\n            throw new Error('The request body isn\\'t either a blob or an array buffer');\n        }\n    }]);\n\n    return Body;\n}();\n\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\n\n\nvar Response = function (_Body) {\n    _inherits(Response, _Body);\n\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        _classCallCheck(this, Response);\n\n        var _this9 = _possibleConstructorReturn(this, (Response.__proto__ || Object.getPrototypeOf(Response)).call(this));\n\n        _this9._body = responseOptions.body;\n        _this9.status = responseOptions.status;\n        _this9.ok = _this9.status >= 200 && _this9.status <= 299;\n        _this9.statusText = responseOptions.statusText;\n        _this9.headers = responseOptions.headers;\n        _this9.type = responseOptions.type;\n        _this9.url = responseOptions.url;\n        return _this9;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(Response, [{\n        key: 'toString',\n        value: function toString() {\n            return 'Response with status: ' + this.status + ' ' + this.statusText + ' for URL: ' + this.url;\n        }\n    }]);\n\n    return Response;\n}(Body);\n\nvar /** @type {?} */_nextRequestId = 0;\nvar /** @type {?} */JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */_jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n\nvar BrowserJsonp = function () {\n    function BrowserJsonp() {\n        _classCallCheck(this, BrowserJsonp);\n    }\n\n    _createClass(BrowserJsonp, [{\n        key: 'build',\n\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        value: function build(url) {\n            var /** @type {?} */node = document.createElement('script');\n            node.src = url;\n            return node;\n        }\n        /**\n         * @return {?}\n         */\n\n    }, {\n        key: 'nextRequestID',\n        value: function nextRequestID() {\n            return '__req' + _nextRequestId++;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'requestCallback',\n        value: function requestCallback(id) {\n            return JSONP_HOME + '.' + id + '.finished';\n        }\n        /**\n         * @param {?} id\n         * @param {?} connection\n         * @return {?}\n         */\n\n    }, {\n        key: 'exposeConnection',\n        value: function exposeConnection(id, connection) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = connection;\n        }\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n\n    }, {\n        key: 'removeConnection',\n        value: function removeConnection(id) {\n            var /** @type {?} */connections = _getJsonpConnections();\n            connections[id] = null;\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'send',\n        value: function send(node) {\n            document.body.appendChild( /** @type {?} */node);\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n\n    }, {\n        key: 'cleanup',\n        value: function cleanup(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild( /** @type {?} */node);\n            }\n        }\n    }]);\n\n    return BrowserJsonp;\n}();\n\nBrowserJsonp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBrowserJsonp.ctorParameters = function () {\n    return [];\n};\n\nvar /** @type {?} */JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\n\nvar JSONPConnection = function () {\n    function JSONPConnection() {\n        _classCallCheck(this, JSONPConnection);\n    }\n\n    _createClass(JSONPConnection, [{\n        key: 'finished',\n\n        /**\n         * Callback called when the JSONP request completes, to notify the application\n         * of the new data.\n         * @abstract\n         * @param {?=} data\n         * @return {?}\n         */\n        value: function finished(data) {}\n    }]);\n\n    return JSONPConnection;\n}();\n\nvar JSONPConnection_ = function (_JSONPConnection) {\n    _inherits(JSONPConnection_, _JSONPConnection);\n\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        _classCallCheck(this, JSONPConnection_);\n\n        var _this10 = _possibleConstructorReturn(this, (JSONPConnection_.__proto__ || Object.getPrototypeOf(JSONPConnection_)).call(this));\n\n        _this10._dom = _dom;\n        _this10.baseResponseOptions = baseResponseOptions;\n        _this10._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this10.request = req;\n        _this10.response = new Observable(function (responseObserver) {\n            _this10.readyState = ReadyState.Loading;\n            var id = _this10._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this10);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this10._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', '=' + callback + '&');\n            } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ('=' + callback);\n            }\n            var script = _this10._script = _dom.build(url);\n            var onLoad = function onLoad(event) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this10._finished) {\n                    var _responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        _responseOptions = baseResponseOptions.merge(_responseOptions);\n                    }\n                    responseObserver.error(new Response(_responseOptions));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this10._responseData, url: url });\n                if (_this10.baseResponseOptions) {\n                    responseOptions = _this10.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function onError(error) {\n                if (_this10.readyState === ReadyState.Cancelled) return;\n                _this10.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this10.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this10._dom.cleanup(script);\n            };\n        });\n        return _this10;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n\n\n    _createClass(JSONPConnection_, [{\n        key: 'finished',\n        value: function finished(data) {\n            // Don't leak connections\n            this._finished = true;\n            this._dom.removeConnection(this._id);\n            if (this.readyState === ReadyState.Cancelled) return;\n            this._responseData = data;\n        }\n    }]);\n\n    return JSONPConnection_;\n}(JSONPConnection);\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\n\n\nvar JSONPBackend = function (_ConnectionBackend) {\n    _inherits(JSONPBackend, _ConnectionBackend);\n\n    function JSONPBackend() {\n        _classCallCheck(this, JSONPBackend);\n\n        return _possibleConstructorReturn(this, (JSONPBackend.__proto__ || Object.getPrototypeOf(JSONPBackend)).apply(this, arguments));\n    }\n\n    return JSONPBackend;\n}(ConnectionBackend);\n\nvar JSONPBackend_ = function (_JSONPBackend) {\n    _inherits(JSONPBackend_, _JSONPBackend);\n\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        _classCallCheck(this, JSONPBackend_);\n\n        var _this12 = _possibleConstructorReturn(this, (JSONPBackend_.__proto__ || Object.getPrototypeOf(JSONPBackend_)).call(this));\n\n        _this12._browserJSONP = _browserJSONP;\n        _this12._baseResponseOptions = _baseResponseOptions;\n        return _this12;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(JSONPBackend_, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n        }\n    }]);\n\n    return JSONPBackend_;\n}(JSONPBackend);\n\nJSONPBackend_.decorators = [{ type: Injectable }];\n/** @nocollapse */\nJSONPBackend_.ctorParameters = function () {\n    return [{ type: BrowserJsonp }, { type: ResponseOptions }];\n};\n\nvar /** @type {?} */XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\n\nvar XHRConnection = function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this13 = this;\n\n        _classCallCheck(this, XHRConnection);\n\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function onLoad() {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = typeof _xhr.response === 'undefined' ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function onError(err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this13.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) {\n                return _xhr.setRequestHeader(name, values.join(','));\n            });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this13.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n\n\n    _createClass(XHRConnection, [{\n        key: 'setDetectedContentType',\n        value: function setDetectedContentType(req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n            // Skip if a custom Content-Type header is provided\n            if (req.headers != null && req.headers.get('Content-Type') != null) {\n                return;\n            }\n            // Set the detected content type\n            switch (req.contentType) {\n                case ContentType.NONE:\n                    break;\n                case ContentType.JSON:\n                    _xhr.setRequestHeader('content-type', 'application/json');\n                    break;\n                case ContentType.FORM:\n                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                    break;\n                case ContentType.TEXT:\n                    _xhr.setRequestHeader('content-type', 'text/plain');\n                    break;\n                case ContentType.BLOB:\n                    var /** @type {?} */blob = req.blob();\n                    if (blob.type) {\n                        _xhr.setRequestHeader('content-type', blob.type);\n                    }\n                    break;\n            }\n        }\n    }]);\n\n    return XHRConnection;\n}();\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\n\n\nvar CookieXSRFStrategy = function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy() {\n        var _cookieName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'XSRF-TOKEN';\n\n        var _headerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'X-XSRF-TOKEN';\n\n        _classCallCheck(this, CookieXSRFStrategy);\n\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n\n\n    _createClass(CookieXSRFStrategy, [{\n        key: 'configureRequest',\n        value: function configureRequest(req) {\n            var /** @type {?} */xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n            if (xsrfToken) {\n                req.headers.set(this._headerName, xsrfToken);\n            }\n        }\n    }]);\n\n    return CookieXSRFStrategy;\n}();\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\n\n\nvar XHRBackend = function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        _classCallCheck(this, XHRBackend);\n\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n\n\n    _createClass(XHRBackend, [{\n        key: 'createConnection',\n        value: function createConnection(request) {\n            this._xsrfStrategy.configureRequest(request);\n            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n        }\n    }]);\n\n    return XHRBackend;\n}();\n\nXHRBackend.decorators = [{ type: Injectable }];\n/** @nocollapse */\nXHRBackend.ctorParameters = function () {\n    return [{ type: BrowserXhr }, { type: ResponseOptions }, { type: XSRFStrategy }];\n};\n\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\nvar RequestOptions = function () {\n    _createClass(RequestOptions, [{\n        key: 'search',\n\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function get() {\n            return this.params;\n        }\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        ,\n        set: function set(params) {\n            this.params = params;\n        }\n        /**\n         * @param {?=} __0\n         */\n\n    }]);\n\n    function RequestOptions() {\n        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            method = _ref4.method,\n            headers = _ref4.headers,\n            body = _ref4.body,\n            url = _ref4.url,\n            search = _ref4.search,\n            params = _ref4.params,\n            withCredentials = _ref4.withCredentials,\n            responseType = _ref4.responseType;\n\n        _classCallCheck(this, RequestOptions);\n\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(RequestOptions, [{\n        key: 'merge',\n        value: function merge(options) {\n            return new RequestOptions({\n                method: options && options.method != null ? options.method : this.method,\n                headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n                body: options && options.body != null ? options.body : this.body,\n                url: options && options.url != null ? options.url : this.url,\n                params: options && this._mergeSearchParams(options.params || options.search),\n                withCredentials: options && options.withCredentials != null ? options.withCredentials : this.withCredentials,\n                responseType: options && options.responseType != null ? options.responseType : this.responseType\n            });\n        }\n        /**\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_mergeSearchParams',\n        value: function _mergeSearchParams(params) {\n            if (!params) return this.params;\n            if (params instanceof URLSearchParams) {\n                return params.clone();\n            }\n            if (typeof params === 'string') {\n                return new URLSearchParams(params);\n            }\n            return this._parseParams(params);\n        }\n        /**\n         * @param {?=} objParams\n         * @return {?}\n         */\n\n    }, {\n        key: '_parseParams',\n        value: function _parseParams() {\n            var _this14 = this;\n\n            var objParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var /** @type {?} */params = new URLSearchParams();\n            Object.keys(objParams).forEach(function (key) {\n                var /** @type {?} */value = objParams[key];\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        return _this14._appendParam(key, item, params);\n                    });\n                } else {\n                    _this14._appendParam(key, value, params);\n                }\n            });\n            return params;\n        }\n        /**\n         * @param {?} key\n         * @param {?} value\n         * @param {?} params\n         * @return {?}\n         */\n\n    }, {\n        key: '_appendParam',\n        value: function _appendParam(key, value, params) {\n            if (typeof value !== 'string') {\n                value = JSON.stringify(value);\n            }\n            params.append(key, value);\n        }\n    }]);\n\n    return RequestOptions;\n}();\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new BaseRequestOptions();\n * var req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\n\n\nvar BaseRequestOptions = function (_RequestOptions) {\n    _inherits(BaseRequestOptions, _RequestOptions);\n\n    function BaseRequestOptions() {\n        _classCallCheck(this, BaseRequestOptions);\n\n        return _possibleConstructorReturn(this, (BaseRequestOptions.__proto__ || Object.getPrototypeOf(BaseRequestOptions)).call(this, { method: RequestMethod.Get, headers: new Headers() }));\n    }\n\n    return BaseRequestOptions;\n}(RequestOptions);\n\nBaseRequestOptions.decorators = [{ type: Injectable }];\n/** @nocollapse */\nBaseRequestOptions.ctorParameters = function () {\n    return [];\n};\n\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\n\nvar Request = function (_Body2) {\n    _inherits(Request, _Body2);\n\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        _classCallCheck(this, Request);\n\n        // TODO: assert that url is present\n        var _this16 = _possibleConstructorReturn(this, (Request.__proto__ || Object.getPrototypeOf(Request)).call(this));\n\n        var url = requestOptions.url;\n        _this16.url = requestOptions.url;\n        if (requestOptions.params) {\n            var params = requestOptions.params.toString();\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this16.url.indexOf('?') != -1) {\n                    prefix = _this16.url[_this16.url.length - 1] == '&' ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this16.url = url + prefix + params;\n            }\n        }\n        _this16._body = requestOptions.body;\n        _this16.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this16.headers = new Headers(requestOptions.headers);\n        _this16.contentType = _this16.detectContentType();\n        _this16.withCredentials = requestOptions.withCredentials;\n        _this16.responseType = requestOptions.responseType;\n        return _this16;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n\n\n    _createClass(Request, [{\n        key: 'detectContentType',\n        value: function detectContentType() {\n            switch (this.headers.get('content-type')) {\n                case 'application/json':\n                    return ContentType.JSON;\n                case 'application/x-www-form-urlencoded':\n                    return ContentType.FORM;\n                case 'multipart/form-data':\n                    return ContentType.FORM_DATA;\n                case 'text/plain':\n                case 'text/html':\n                    return ContentType.TEXT;\n                case 'application/octet-stream':\n                    return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n                default:\n                    return this.detectContentTypeFromBody();\n            }\n        }\n        /**\n         * Returns the content type of request's body based on its type.\n         * @return {?}\n         */\n\n    }, {\n        key: 'detectContentTypeFromBody',\n        value: function detectContentTypeFromBody() {\n            if (this._body == null) {\n                return ContentType.NONE;\n            } else if (this._body instanceof URLSearchParams) {\n                return ContentType.FORM;\n            } else if (this._body instanceof FormData) {\n                return ContentType.FORM_DATA;\n            } else if (this._body instanceof Blob$1) {\n                return ContentType.BLOB;\n            } else if (this._body instanceof ArrayBuffer$1) {\n                return ContentType.ARRAY_BUFFER;\n            } else if (this._body && _typeof(this._body) === 'object') {\n                return ContentType.JSON;\n            } else {\n                return ContentType.TEXT;\n            }\n        }\n        /**\n         * Returns the request's body according to its type. If body is undefined, return\n         * null.\n         * @return {?}\n         */\n\n    }, {\n        key: 'getBody',\n        value: function getBody() {\n            switch (this.contentType) {\n                case ContentType.JSON:\n                    return this.text();\n                case ContentType.FORM:\n                    return this.text();\n                case ContentType.FORM_DATA:\n                    return this._body;\n                case ContentType.TEXT:\n                    return this.text();\n                case ContentType.BLOB:\n                    return this.blob();\n                case ContentType.ARRAY_BUFFER:\n                    return this.arrayBuffer();\n                default:\n                    return null;\n            }\n        }\n    }]);\n\n    return Request;\n}(Body);\n\nvar /** @type {?} */noop = function noop() {};\nvar /** @type {?} */w = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' ? window : noop;\nvar /** @type {?} */FormData = w[/** TODO #9100 */'FormData'] || noop;\nvar /** @type {?} */Blob$1 = w[/** TODO #9100 */'Blob'] || noop;\nvar /** @type {?} */ArrayBuffer$1 = w[/** TODO #9100 */'ArrayBuffer'] || noop;\n\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\n\nvar Http = function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        _classCallCheck(this, Http);\n\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Http, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url)));\n            } else if (url instanceof Request) {\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n        /**\n         * Performs a request with `get` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        /**\n         * Performs a request with `post` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'post',\n        value: function post(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n        }\n        /**\n         * Performs a request with `put` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'put',\n        value: function put(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n        }\n        /**\n         * Performs a request with `delete` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n        }\n        /**\n         * Performs a request with `patch` http method.\n         * @param {?} url\n         * @param {?} body\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'patch',\n        value: function patch(url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n        }\n        /**\n         * Performs a request with `head` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'head',\n        value: function head(url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n        }\n        /**\n         * Performs a request with `options` http method.\n         * @param {?} url\n         * @param {?=} options\n         * @return {?}\n         */\n\n    }, {\n        key: 'options',\n        value: function options(url, _options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, _options, RequestMethod.Options, url)));\n        }\n    }]);\n\n    return Http;\n}();\n\nHttp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nHttp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n/**\n * \\@experimental\n */\n\nvar Jsonp = function (_Http) {\n    _inherits(Jsonp, _Http);\n\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        _classCallCheck(this, Jsonp);\n\n        return _possibleConstructorReturn(this, (Jsonp.__proto__ || Object.getPrototypeOf(Jsonp)).call(this, backend, defaultOptions));\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    _createClass(Jsonp, [{\n        key: 'request',\n        value: function request(url, options) {\n            var /** @type {?} */responseObservable = void 0;\n            if (typeof url === 'string') {\n                url = new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */url));\n            }\n            if (url instanceof Request) {\n                if (url.method !== RequestMethod.Get) {\n                    throw new Error('JSONP requests must use GET request method.');\n                }\n                responseObservable = httpRequest(this._backend, url);\n            } else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        }\n    }]);\n\n    return Jsonp;\n}(Http);\n\nJsonp.decorators = [{ type: Injectable }];\n/** @nocollapse */\nJsonp.ctorParameters = function () {\n    return [{ type: ConnectionBackend }, { type: RequestOptions }];\n};\n\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\n\nvar HttpModule = function HttpModule() {\n    _classCallCheck(this, HttpModule);\n};\n\nHttpModule.decorators = [{ type: NgModule, args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] }, BrowserXhr, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, XHRBackend, { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy }]\n    }] }];\n/** @nocollapse */\nHttpModule.ctorParameters = function () {\n    return [];\n};\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\n\nvar JsonpModule = function JsonpModule() {\n    _classCallCheck(this, JsonpModule);\n};\n\nJsonpModule.decorators = [{ type: NgModule, args: [{\n        providers: [\n        // TODO(pascal): use factory type annotations once supported in DI\n        // issue: https://github.com/angular/angular/issues/3183\n        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] }, BrowserJsonp, { provide: RequestOptions, useClass: BaseRequestOptions }, { provide: ResponseOptions, useClass: BaseResponseOptions }, { provide: JSONPBackend, useClass: JSONPBackend_ }]\n    }] }];\n/** @nocollapse */\nJsonpModule.ctorParameters = function () {\n    return [];\n};\n\n/**\n * @stable\n */\nvar /** @type {?} */VERSION = new Version('4.0.0-rc.2');\n\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵe, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n","import {Component} from '@angular/core'\nimport {Http, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {map} from 'rxjs/operator/map';\n\n@Component({\n  selector: 'search',\n  template: `\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search on Wikipedia\" #foo>\n      <button (click)=\"search(foo.value)\">Search</button>\n      <div *ngFor=\"let page of pages\">{{page}}</div>\n    </div>\n  `\n})\nexport class Search {\n  pages: Array<any> = [];\n\n  constructor(private http: Http) {}\n\n  search(text: string) {\n    if (text && text.length > 0) {\n      let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n\n      let headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n\n      let params = new URLSearchParams();\n      params.set('gapfrom', text);\n      params.set('gaplimit', '10');\n      params.set('generator', 'allpages');\n      params.set('action', 'query');\n      params.set('format', 'json');\n      params.set('origin', '*');\n\n      let options = new RequestOptions({\n        headers: headers,\n        search: params\n      });\n\n      map.call(this.http.get(wikiUrl, options), response => <string[]> response.json())\n        .subscribe(data => {\n          this.pages = [];\n          var raw = data['query']['pages'];\n          for (var key in raw) {\n            this.pages.push(raw[key].title);\n          }\n        });\n    }\n  }\n\n}\n","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './search.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nimport * as import4 from '@angular/router';\nimport * as import5 from './search.ngfactory';\nimport * as import6 from './search';\nclass SearchModuleInjector extends import0.ɵNgModuleInjector<import1.SearchModule> {\n  _CommonModule_0:import2.CommonModule;\n  _HttpModule_1:import3.HttpModule;\n  _JsonpModule_2:import3.JsonpModule;\n  _RouterModule_3:import4.RouterModule;\n  _SearchModule_4:import1.SearchModule;\n  __NgLocalization_5:import2.NgLocaleLocalization;\n  __BrowserXhr_6:import3.BrowserXhr;\n  __ResponseOptions_7:import3.BaseResponseOptions;\n  __XSRFStrategy_8:any;\n  __XHRBackend_9:import3.XHRBackend;\n  __RequestOptions_10:import3.BaseRequestOptions;\n  __Http_11:any;\n  __ɵg_12:import3.ɵg;\n  __JSONPBackend_13:import3.ɵa;\n  __Jsonp_14:any;\n  __ROUTES_15:any[];\n  constructor(parent:import0.Injector) {\n    super(parent,[import5.SearchNgFactory],([] as any[]));\n  }\n  get _NgLocalization_5():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_5;\n  }\n  get _BrowserXhr_6():import3.BrowserXhr {\n    if ((this.__BrowserXhr_6 == null)) { (this.__BrowserXhr_6 = new import3.BrowserXhr()); }\n    return this.__BrowserXhr_6;\n  }\n  get _ResponseOptions_7():import3.BaseResponseOptions {\n    if ((this.__ResponseOptions_7 == null)) { (this.__ResponseOptions_7 = new import3.BaseResponseOptions()); }\n    return this.__ResponseOptions_7;\n  }\n  get _XSRFStrategy_8():any {\n    if ((this.__XSRFStrategy_8 == null)) { (this.__XSRFStrategy_8 = import3.ɵb()); }\n    return this.__XSRFStrategy_8;\n  }\n  get _XHRBackend_9():import3.XHRBackend {\n    if ((this.__XHRBackend_9 == null)) { (this.__XHRBackend_9 = new import3.XHRBackend(this._BrowserXhr_6,this._ResponseOptions_7,this._XSRFStrategy_8)); }\n    return this.__XHRBackend_9;\n  }\n  get _RequestOptions_10():import3.BaseRequestOptions {\n    if ((this.__RequestOptions_10 == null)) { (this.__RequestOptions_10 = new import3.BaseRequestOptions()); }\n    return this.__RequestOptions_10;\n  }\n  get _Http_11():any {\n    if ((this.__Http_11 == null)) { (this.__Http_11 = import3.ɵc(this._XHRBackend_9,this._RequestOptions_10)); }\n    return this.__Http_11;\n  }\n  get _ɵg_12():import3.ɵg {\n    if ((this.__ɵg_12 == null)) { (this.__ɵg_12 = new import3.ɵg()); }\n    return this.__ɵg_12;\n  }\n  get _JSONPBackend_13():import3.ɵa {\n    if ((this.__JSONPBackend_13 == null)) { (this.__JSONPBackend_13 = new import3.ɵa(this._ɵg_12,this._ResponseOptions_7)); }\n    return this.__JSONPBackend_13;\n  }\n  get _Jsonp_14():any {\n    if ((this.__Jsonp_14 == null)) { (this.__Jsonp_14 = import3.ɵd(this._JSONPBackend_13,this._RequestOptions_10)); }\n    return this.__Jsonp_14;\n  }\n  get _ROUTES_15():any[] {\n        if ((this.__ROUTES_15 == null)) { (this.__ROUTES_15 = [[{\n          path: '',\n          component: import6.Search\n        }\n    ]]); }\n    return this.__ROUTES_15;\n  }\n  createInternal():import1.SearchModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._HttpModule_1 = new import3.HttpModule();\n    this._JsonpModule_2 = new import3.JsonpModule();\n    this._RouterModule_3 = new import4.RouterModule(this.parent.get(import4.ɵa,(null as any)));\n    this._SearchModule_4 = new import1.SearchModule();\n    return this._SearchModule_4;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.HttpModule)) { return this._HttpModule_1; }\n    if ((token === import3.JsonpModule)) { return this._JsonpModule_2; }\n    if ((token === import4.RouterModule)) { return this._RouterModule_3; }\n    if ((token === import1.SearchModule)) { return this._SearchModule_4; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_5; }\n    if ((token === import3.BrowserXhr)) { return this._BrowserXhr_6; }\n    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_7; }\n    if ((token === import3.XSRFStrategy)) { return this._XSRFStrategy_8; }\n    if ((token === import3.XHRBackend)) { return this._XHRBackend_9; }\n    if ((token === import3.RequestOptions)) { return this._RequestOptions_10; }\n    if ((token === import3.Http)) { return this._Http_11; }\n    if ((token === import3.ɵg)) { return this._ɵg_12; }\n    if ((token === import3.JSONPBackend)) { return this._JSONPBackend_13; }\n    if ((token === import3.Jsonp)) { return this._Jsonp_14; }\n    if ((token === import4.ROUTES)) { return this._ROUTES_15; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const SearchModuleNgFactory:import0.NgModuleFactory<import1.SearchModule> = new import0.NgModuleFactory<any>(SearchModuleInjector,import1.SearchModule);"]}