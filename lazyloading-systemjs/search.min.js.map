{"version":3,"sources":["../../app/search/search.module.ts","../../app/search/search.ngfactory.ts","../../node_modules/@angular/http/@angular/http.es5.js","../../app/search/search.ts","../../app/search/search.module.ngfactory.ts"],"names":["routes","path","component","search_1","Search","SearchModule","__decorate","core_1","NgModule","imports","common_1","CommonModule","http_1","HttpModule","JsonpModule","router_1","RouterModule","forChild","declarations","View_Search_1","import0","ɵvid","ɵeld","ɵted","check","view","currVal_0","context","$implicit","View_Search_0","eventName","$event","allowDefault","comp","pd_0","search","ɵnov","value","ɵand","ɵdid","import2","NgForOf","ViewContainerRef","TemplateRef","IterableDiffers","ngForOf","pages","View_Search_Host_0","RenderType_Search","import1","import3","Http","styles_Search","exports_1","ɵcrt","encapsulation","styles","data","RenderType_Search_Host","SearchNgFactory","ɵccf","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","Uint16Array","length","i","strLen","charCodeAt","buffer","paramParser","rawParams","map","Map","params","split","forEach","param","eqIdx","indexOf","_a","slice","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_jsonpConnections","JSONP_HOME","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","url","newOptions","merge","RequestOptions","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","jsonpFactory","jsonpBackend","Jsonp","Injectable","Version","Observable","ɵgetDOM","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","BrowserXhr","build","XMLHttpRequest","decorators","type","ctorParameters","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","_this","_headers","_normalizedNames","values","name","append","keys","Array","isArray","delete","fromResponseHeaderString","headersString","line","index","trim","getAll","lcName","toLowerCase","fn","has","from","join","mayBeSetNormalizedName","toJSON","serialized","apply","entries","ResponseOptions","_b","status","statusText","options","BaseResponseOptions","_super","call","ConnectionBackend","Connection","XSRFStrategy","configureRequest","req","isSuccess","QueryEncoder","encodeKey","k","encodeValue","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","searchParams","replaceAll","toString","paramsList","Body","json","_body","parse","text","String","fromCharCode","stringify","arrayBuffer","blob","Response","responseOptions","ok","_nextRequestId","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","finished","JSONPConnection_","_dom","baseResponseOptions","_finished","TypeError","responseObserver","readyState","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","responseOptions_1","error","_responseData","next","complete","onError","message","addEventListener","removeEventListener","JSONPBackend","arguments","JSONPBackend_","_browserJSONP","_baseResponseOptions","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","responseText","err","setDetectedContentType","setRequestHeader","getBody","abort","contentType","_cookieName","_headerName","xsrfToken","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","_mergeSearchParams","defineProperty","enumerable","configurable","_parseParams","objParams","item","_appendParam","BaseRequestOptions","Request","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","noop","_backend","_defaultOptions","responseObservable","post","put","patch","head","defaultOptions","args","providers","provide","useFactory","deps","useClass","VERSION","http","wikiUrl","Content-Type","map_1","subscribe","raw","title","Component","selector","template","__metadata","SearchModuleInjector","parent","import5","__NgLocalization_5","NgLocaleLocalization","LOCALE_ID","__BrowserXhr_6","__ResponseOptions_7","__XSRFStrategy_8","ɵb","__XHRBackend_9","_BrowserXhr_6","_ResponseOptions_7","_XSRFStrategy_8","__RequestOptions_10","__Http_11","ɵc","_XHRBackend_9","_RequestOptions_10","__ɵg_12","ɵg","__JSONPBackend_13","ɵa","_ɵg_12","__Jsonp_14","ɵd","_JSONPBackend_13","__ROUTES_15","import6","createInternal","_CommonModule_0","_HttpModule_1","_JsonpModule_2","_RouterModule_3","import4","_SearchModule_4","getInternal","token","notFoundResult","NgLocalization","_NgLocalization_5","_Http_11","_Jsonp_14","ROUTES","_ROUTES_15","destroyInternal","ɵNgModuleInjector","SearchModuleNgFactory","NgModuleFactory"],"mappings":"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","file":"search.min.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HttpModule, JsonpModule} from '@angular/http';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {Search} from './search';\n\n\nconst routes: Routes = [\n  {path: '', component: Search},\n];\n\n@NgModule({\n  imports: [CommonModule, HttpModule, JsonpModule, RouterModule.forChild(routes)],\n  declarations: [Search]\n})\nexport class SearchModule {}","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './search';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nconst styles_Search:any[] = ([] as any[]);\nexport const RenderType_Search:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_Search,\n  data: {}\n}\n);\nfunction View_Search_1():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    )\n  ]\n  ,(null as any),(check,view) => {\n    var comp:any = view.component;\n    const currVal_0:any = view.context.$implicit;\n    check(view,1,0,currVal_0);\n  });\n}\nexport function View_Search_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵeld(0,(null as any),(null as any),12,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵeld(0,(null as any),(null as any),1,'h2',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,[[\n        'foo',\n        1\n      ]\n    ],(null as any),0,'input',[\n      [\n        'placeholder',\n        'Search on Wikipedia'\n      ]\n      ,\n      [\n        'type',\n        'text'\n      ]\n\n    ]\n    ,(null as any),(null as any),(null as any),(null as any),(null as any)),\n    import0.ɵted((null as any),['\\n      ']),\n      import0.ɵeld(0,(null as any),(null as any),1,'button',([] as any[]),(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(view,eventName,$event) => {\n      var allowDefault:boolean = true;\n      var comp:import1.Search = view.component;\n      if (('click' === eventName)) {\n        const pd_0:any = ((<any>comp.search(import0.ɵnov(view,6).value)) !== false);\n        allowDefault = (pd_0 && allowDefault);\n      }\n      return allowDefault;\n    },(null as any),(null as any)),\n    import0.ɵted((null as any),['Search']),\n    import0.ɵted((null as any),['\\n      ']),\n    import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_Search_1),\n    import0.ɵdid(401408,(null as any),0,import2.NgForOf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef,\n      import0.IterableDiffers\n    ]\n      ,{ngForOf: [\n        0,\n        'ngForOf'\n      ]\n    },(null as any)),\n    import0.ɵted((null as any),['\\n    ']),\n    import0.ɵted((null as any),['\\n  '])\n  ]\n  ,(check,view) => {\n    var comp:import1.Search = view.component;\n    const currVal_0:any = comp.pages;\n    check(view,12,0,currVal_0);\n  },(null as any));\n}\nconst RenderType_Search_Host:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: ([] as any[]),\n  data: {}\n}\n);\nfunction View_Search_Host_0():import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵeld(0,(null as any),(null as any),1,'search',([] as any[]),(null as any),(null as any),(null as any),View_Search_0,RenderType_Search),\n    import0.ɵdid(24576,(null as any),0,import1.Search,[import3.Http],(null as any),(null as any))\n  ]\n  ,(null as any),(null as any));\n}\nexport const SearchNgFactory:import0.ComponentFactory<import1.Search> = import0.ɵccf('search',import1.Search,View_Search_Host_0);","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.0-rc.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nBaseResponseOptions.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar /** @type {?} */ isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     * @return {?}\n     */\n    Body.prototype.text = function () {\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\nvar /** @type {?} */ _nextRequestId = 0;\nvar /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */ _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBrowserJsonp.ctorParameters = function () { return []; };\nvar /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar JSONPConnection_ = (function (_super) {\n    __extends(JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPBackend = (function (_super) {\n    __extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar JSONPBackend_ = (function (_super) {\n    __extends(JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(JSONPBackend));\nJSONPBackend_.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nJSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\nvar /** @type {?} */ XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, params = _b.params, withCredentials = _b.withCredentials, responseType = _b.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * var options = new BaseRequestOptions();\n * var req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nBaseRequestOptions.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        if (requestOptions.params) {\n            var params = requestOptions.params.toString();\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nvar /** @type {?} */ noop = function () { };\nvar /** @type {?} */ w = typeof window == 'object' ? window : noop;\nvar /** @type {?} */ FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar /** @type {?} */ Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar /** @type {?} */ ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nJsonp.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nJsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/** @nocollapse */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    { provide: JSONPBackend, useClass: JSONPBackend_ },\n                ],\n            },] },\n];\n/** @nocollapse */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @stable\n */\nvar /** @type {?} */ VERSION = new Version('4.0.0-rc.3');\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵe, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n","import {Component} from '@angular/core'\nimport {Http, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {map} from 'rxjs/operator/map';\n\n@Component({\n  selector: 'search',\n  template: `\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search on Wikipedia\" #foo>\n      <button (click)=\"search(foo.value)\">Search</button>\n      <div *ngFor=\"let page of pages\">{{page}}</div>\n    </div>\n  `\n})\nexport class Search {\n  pages: Array<any> = [];\n\n  constructor(private http: Http) {}\n\n  search(text: string) {\n    if (text && text.length > 0) {\n      let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n\n      let headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n\n      let params = new URLSearchParams();\n      params.set('gapfrom', text);\n      params.set('gaplimit', '10');\n      params.set('generator', 'allpages');\n      params.set('action', 'query');\n      params.set('format', 'json');\n      params.set('origin', '*');\n\n      let options = new RequestOptions({\n        headers: headers,\n        search: params\n      });\n\n      map.call(this.http.get(wikiUrl, options), response => <string[]> response.json())\n        .subscribe(data => {\n          this.pages = [];\n          var raw = data['query']['pages'];\n          for (var key in raw) {\n            this.pages.push(raw[key].title);\n          }\n        });\n    }\n  }\n\n}\n","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './search.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nimport * as import4 from '@angular/router';\nimport * as import5 from './search.ngfactory';\nimport * as import6 from './search';\nclass SearchModuleInjector extends import0.ɵNgModuleInjector<import1.SearchModule> {\n  _CommonModule_0:import2.CommonModule;\n  _HttpModule_1:import3.HttpModule;\n  _JsonpModule_2:import3.JsonpModule;\n  _RouterModule_3:import4.RouterModule;\n  _SearchModule_4:import1.SearchModule;\n  __NgLocalization_5:import2.NgLocaleLocalization;\n  __BrowserXhr_6:import3.BrowserXhr;\n  __ResponseOptions_7:import3.BaseResponseOptions;\n  __XSRFStrategy_8:any;\n  __XHRBackend_9:import3.XHRBackend;\n  __RequestOptions_10:import3.BaseRequestOptions;\n  __Http_11:any;\n  __ɵg_12:import3.ɵg;\n  __JSONPBackend_13:import3.ɵa;\n  __Jsonp_14:any;\n  __ROUTES_15:any[];\n  constructor(parent:import0.Injector) {\n    super(parent,[import5.SearchNgFactory],([] as any[]));\n  }\n  get _NgLocalization_5():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_5;\n  }\n  get _BrowserXhr_6():import3.BrowserXhr {\n    if ((this.__BrowserXhr_6 == null)) { (this.__BrowserXhr_6 = new import3.BrowserXhr()); }\n    return this.__BrowserXhr_6;\n  }\n  get _ResponseOptions_7():import3.BaseResponseOptions {\n    if ((this.__ResponseOptions_7 == null)) { (this.__ResponseOptions_7 = new import3.BaseResponseOptions()); }\n    return this.__ResponseOptions_7;\n  }\n  get _XSRFStrategy_8():any {\n    if ((this.__XSRFStrategy_8 == null)) { (this.__XSRFStrategy_8 = import3.ɵb()); }\n    return this.__XSRFStrategy_8;\n  }\n  get _XHRBackend_9():import3.XHRBackend {\n    if ((this.__XHRBackend_9 == null)) { (this.__XHRBackend_9 = new import3.XHRBackend(this._BrowserXhr_6,this._ResponseOptions_7,this._XSRFStrategy_8)); }\n    return this.__XHRBackend_9;\n  }\n  get _RequestOptions_10():import3.BaseRequestOptions {\n    if ((this.__RequestOptions_10 == null)) { (this.__RequestOptions_10 = new import3.BaseRequestOptions()); }\n    return this.__RequestOptions_10;\n  }\n  get _Http_11():any {\n    if ((this.__Http_11 == null)) { (this.__Http_11 = import3.ɵc(this._XHRBackend_9,this._RequestOptions_10)); }\n    return this.__Http_11;\n  }\n  get _ɵg_12():import3.ɵg {\n    if ((this.__ɵg_12 == null)) { (this.__ɵg_12 = new import3.ɵg()); }\n    return this.__ɵg_12;\n  }\n  get _JSONPBackend_13():import3.ɵa {\n    if ((this.__JSONPBackend_13 == null)) { (this.__JSONPBackend_13 = new import3.ɵa(this._ɵg_12,this._ResponseOptions_7)); }\n    return this.__JSONPBackend_13;\n  }\n  get _Jsonp_14():any {\n    if ((this.__Jsonp_14 == null)) { (this.__Jsonp_14 = import3.ɵd(this._JSONPBackend_13,this._RequestOptions_10)); }\n    return this.__Jsonp_14;\n  }\n  get _ROUTES_15():any[] {\n        if ((this.__ROUTES_15 == null)) { (this.__ROUTES_15 = [[{\n          path: '',\n          component: import6.Search\n        }\n    ]]); }\n    return this.__ROUTES_15;\n  }\n  createInternal():import1.SearchModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._HttpModule_1 = new import3.HttpModule();\n    this._JsonpModule_2 = new import3.JsonpModule();\n    this._RouterModule_3 = new import4.RouterModule(this.parent.get(import4.ɵa,(null as any)));\n    this._SearchModule_4 = new import1.SearchModule();\n    return this._SearchModule_4;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.HttpModule)) { return this._HttpModule_1; }\n    if ((token === import3.JsonpModule)) { return this._JsonpModule_2; }\n    if ((token === import4.RouterModule)) { return this._RouterModule_3; }\n    if ((token === import1.SearchModule)) { return this._SearchModule_4; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_5; }\n    if ((token === import3.BrowserXhr)) { return this._BrowserXhr_6; }\n    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_7; }\n    if ((token === import3.XSRFStrategy)) { return this._XSRFStrategy_8; }\n    if ((token === import3.XHRBackend)) { return this._XHRBackend_9; }\n    if ((token === import3.RequestOptions)) { return this._RequestOptions_10; }\n    if ((token === import3.Http)) { return this._Http_11; }\n    if ((token === import3.ɵg)) { return this._ɵg_12; }\n    if ((token === import3.JSONPBackend)) { return this._JSONPBackend_13; }\n    if ((token === import3.Jsonp)) { return this._Jsonp_14; }\n    if ((token === import4.ROUTES)) { return this._ROUTES_15; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const SearchModuleNgFactory:import0.NgModuleFactory<import1.SearchModule> = new import0.NgModuleFactory<any>(SearchModuleInjector,import1.SearchModule);"]}